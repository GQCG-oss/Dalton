Things to do before release 2013
********************************

* Everybody please feel free to add/remove things from this list!

General
'''''''
- cleanup keywords and update manual
- Write "New features" section for manual and homepage
- Remove non-releasable code (see below)
- Remove the old TrSCF .DSM ? ? ? 
- cleanup test cases
- run lots of test calculations for different various LSDALTON:
      	   serial, massively parallel, large molecules
- Response properties in LSDalton - wrappers for (magnetic) properties not present in 2011 version
- Clean up Output file (For the users point of view on the requested output should be there, but print of Timings can be added, print of HOMO-LUMO gap can be added and so on.)  
- Document tools directory (maybe cleanup)

Specific issues
'''''''''''''''
. update author list
- Check units and conversion factor for TPA  (KK)
- Merge linsca-develop branch with master branch to get a Dalton and an LSDalton directory (TK)
- Possibly tighten default SCF convergence thresholds for DFT (currently under investigation by KK/IMH/TK).
- Quit program with meaningful error message rather than simply printing a warning when a wrong input keyword is used (done for **INTEGRAL, **DEC, *DENSOPT, **RESPONSE sections)
- Treat $INFO in the same way as other input sections (call it **INFO). Currently $INFO only works if it is put in the *DENSOPT section, which is mostly an historical artefact.
- check the reclen (ifdef VAR_GFORTRAN) issue with different compilers. 
- Electrostatic potential with gringen does not work with MPI.

Non-releasable code
*******************

If you don't want to release some part of the code write we will use a "VAR_RELEASE2013" flag, 
e.g., if you want subroutines A and C to be a part of the release 2013 version but not subroutine B:

subroutine A
...
end subroutine A

#ifdef VAR_RELEASE2013
subroutine B
...
end subroutine B
#endif

subroutine C
....
end subroutine C


Then when compiling with -DVAR_RELEASE2013, the code from "#ifdef VAR_RELEASE2013" to "#endif"
will not be compiled and effectively the code is:


subroutine A
...
end subroutine A

subroutine C
....
end subroutine C


When it is time to release we will make a new branch "Release2013" where all the code encapsulated by "#ifdef VAR_RELEASE2013" to "#endif" will be removed by a script. Thus, that code will never be seen by any users.

Thomas will modify Cmake and add some new Jonas Kramer cases to test the VAR_RELEASE2013 flag.
Naturally LSDALTON should compile both with and without -DVAR_RELEASE2013!!!
