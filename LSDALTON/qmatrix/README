* Interface of QMatrix library (http://repo.ctcc.no/projects/qmatrix) for LSDALTON

1. QMatrix is an ``abstract'' matrix library written in C language (with C++
   and Fortran interface), and provides a special square block complex matrix
   (all the blocks are square matrix with the same dimension) and corresponding
   functions.

   It can be built on top of exteranl C, C++ or Fortran libraries, which have
   implemented either square block complex matrix, square block real matrix,
   complex matrix or real matrix and required functions.

   Please refer to external/qmatrix/doc/manual.pdf and external/qmatrix/doc/tutorial.pdf
   for more details.

   If you have used QMatrix and found it is useful, please consider to cite QMatrix as

     @misc{QMatrix,
       author = {Bin Gao},
       title = {{QMatrix Version 0.1.0}},
       year = {2014},
       note = {http://repo.ctcc.no/projects/qmatrix}
     }

2. In this interface, the LSDALTON's matrix module is used by QMatrix as the backend
   matrix library (see file qmatrix_backend.F90 and CMake files cmake/LibsLSDALTON.cmake,
   cmake/LibsQMatrix.cmake).

   The file ls_qmatrix.F90 is the driver module for LSDALTON calling useful subroutines
   implemented in QMatrix library.

   So the structure of QMatrix library in LSDALTON is:

   LSDALTON routines --> ls_qmatrix.F90 --> QMatrix library --> qmatrix_backend.F90 --> LSDALTON matrix module
                                             square block           real matrix              real matrix
                                            complex matrix

   If a matrix with label "mat_label" is asked to save on file, the following files
   will be produced:

                       qmatrix_mat_label_block_XX_XX_real_dim    qmatrix_mat_label_block_XX_XX_real
     qmatrix.h5        qmatrix_mat_label_block_XX_XX_imag_dim    qmatrix_mat_label_block_XX_XX_imag
   QMatrix library      -->      qmatrix_backend.F90        -->       LSDALTON matrix module

   where block_XX_XX represents the row and column indices of the block. Files XXXX_dim
   are only generated for binary format in qmatrix_backend.F90.

   I (Bin Gao) understand that there will be lots of files produced in this interface,
   but I don't know if it is possible for mat_write_to_disk and mat_read_from_disk
   in LSDALTON to find and overwrite a matrix. Also, the dimensions of real and imaginary
   parts in each block need to be saved and could be found and overwritten if all the
   matrices are written on one file.

3. To test the interface, the following keywords should be added into LSDALTON.INP:

     **QMATRIX
     .TEST

   lsdalton.x will then call QMatrix library to perform the test calculations, results
   can be found in LSDALTON.OUT. There should not be word "fail" in LSDALTON.OUT if all
   the tests passed. Otherwise, please contact Bin Gao at bin.gao@uit.no.

4. Other functionalities of QMatrix library will be implemented soon and will be described
   in the manual of LSDALTON once they are implemented.

5. I (Bin Gao) have only implemented QMatrix library and this interface with CMake. I do not
   know how to implement with ordinary make files.

6. The use of the HDF5 library is taken care by the cmake file cmake/LibsQMatrix.cmake,
   but which is disabled for the time being.

7. The implementation of QMatrix library into LSDALTON is not a big problem, but it becomes
   difficult if we also want to implement QMatrix library into DALTON and USING THE SAME
   EXTERNAL PROJECT. Please refer to DALTON/qmatrix/README for the solution, and please
   write to Bin Gao if you have other better solution, thank you.

   Good luck of using this interface and QMatrix library ;-)

   August 10, 2014
