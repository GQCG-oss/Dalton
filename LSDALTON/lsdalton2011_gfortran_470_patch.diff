diff --git LSDALTON/LSint/Integral_interface.f90 LSDALTON/LSint/Integral_interface.f90
index 1629545..f2ee2fc 100644
--- LSDALTON/LSint/Integral_interface.f90
+++ LSDALTON/LSint/Integral_interface.f90
@@ -93,12 +93,12 @@ SUBROUTINE II_get_h1(LUPRI,LUERR,SETTING,h)
   use Matrix_Operations
   use ls_Integral_Interface
 IMPLICIT NONE
-TYPE(MATRIX),target   :: h
+TYPE(MATRIX)   :: h
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 !
 Integer             :: nbast
-TYPE(MATRIX),target :: tmp
+TYPE(MATRIX) :: tmp
 Real(realk)         :: OLDTHRESH
 CALL II_get_nucel_mat(LUPRI,LUERR,SETTING,h)
 
@@ -126,7 +126,7 @@ SUBROUTINE II_get_kinetic(LUPRI,LUERR,SETTING,T)
   use Matrix_Operations
   use ls_Integral_Interface
 IMPLICIT NONE
-TYPE(MATRIX),target   :: T
+TYPE(MATRIX)   :: T
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 !
@@ -158,7 +158,7 @@ SUBROUTINE II_get_nucel_mat(LUPRI,LUERR,SETTING,h)
   use Matrix_Operations
   use ls_Integral_Interface
 IMPLICIT NONE
-TYPE(MATRIX),target   :: h
+TYPE(MATRIX)   :: h
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 !
@@ -882,7 +882,7 @@ SUBROUTINE II_get_carmom(LUPRI,LUERR,SETTING,carmom,nmat,nderiv)
 IMPLICIT NONE
 INTEGER               :: LUPRI,LUERR,nderiv,nmat
 integer             :: usemat
-TYPE(MATRIX),target   :: carmom(nmat)
+TYPE(MATRIX)   :: carmom(nmat)
 TYPE(MATRIX)          :: TMP
 TYPE(LSSETTING)       :: SETTING
 Real(realk),pointer   :: integrals(:,:,:,:,:)
@@ -941,7 +941,7 @@ IMPLICIT NONE
 character(len=7)     :: STRING
 TYPE(LSSETTING)      :: SETTING
 INTEGER              :: LUPRI,LUERR,nderiv,nmat
-TYPE(MATRIX),target  :: mat(nmat)
+TYPE(MATRIX)  :: mat(nmat)
 !
 Character(len=6)     :: Oper
 TYPE(MATRIX),pointer :: TMP(:)
@@ -1008,7 +1008,7 @@ SUBROUTINE II_get_sphmom(LUPRI,LUERR,SETTING,sphmom,nsphmat,nderiv)
   use ls_Integral_Interface
 IMPLICIT NONE
 INTEGER               :: LUPRI,LUERR,nderiv,nsphmat,usemat,nbast,I
-TYPE(MATRIX),target   :: sphmom(nsphmat)
+TYPE(MATRIX)   :: sphmom(nsphmat)
 TYPE(LSSETTING)       :: SETTING
 
 nbast = sphmom(1)%nrow
@@ -1038,7 +1038,7 @@ SUBROUTINE II_get_3center_overlap(LUPRIOLD,LUPRI,LUERR,SETTING,nbast,auxoption)
 IMPLICIT NONE
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR,nbast,lupriold,i,j,k,nbastaux,iprint
-TYPE(MATRIX),target   :: TMP
+TYPE(MATRIX)   :: TMP
 integer             :: usemat
 LOGICAL               :: auxoption
 Real(realk),pointer   :: integrals(:,:,:,:,:)
@@ -1120,7 +1120,7 @@ SUBROUTINE II_get_2center_eri(LUPRI,LUERR,SETTING,F)
   use Matrix_Operations
   use ls_Integral_Interface
 IMPLICIT NONE
-TYPE(MATRIX),target   :: F
+TYPE(MATRIX)   :: F
 integer               :: usemat
 TYPE(LSSETTING)       :: SETTING
 TYPE(INTEGRALINPUT)   :: INTINPUT
@@ -1399,7 +1399,7 @@ SUBROUTINE II_get_jengine_mat(LUPRI,LUERR,SETTING,D,F,ndmat)
   use ls_Integral_Interface
 IMPLICIT NONE
 Integer             :: ndmat
-TYPE(MATRIX),target   :: D(ndmat),F(ndmat)
+TYPE(MATRIX)   :: D(ndmat),F(ndmat)
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 !
@@ -1508,8 +1508,8 @@ use TYPEDEF
 use Matrix_module
 use Matrix_Operations
 IMPLICIT NONE
-TYPE(MATRIX),target   :: D,F
-TYPE(MATRIX),target   :: galpha,calpha
+TYPE(MATRIX)   :: D,F
+TYPE(MATRIX)   :: galpha,calpha
 integer               :: usemat
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
@@ -1547,8 +1547,8 @@ use Matrix_Operations
 use ls_Integral_Interface
 !use linsolvdf
 IMPLICIT NONE
-TYPE(MATRIX),target   :: D,F
-TYPE(MATRIX),target   :: galpha,calpha,calpha_old
+TYPE(MATRIX)   :: D,F
+TYPE(MATRIX)   :: galpha,calpha,calpha_old
 integer               :: usemat
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
@@ -1674,7 +1674,7 @@ use ls_Integral_Interface
 !use tco_Integral_Interface
 use linsolvdf
 IMPLICIT NONE
-TYPE(MATRIX),target   :: D,F
+TYPE(MATRIX)   :: D,F
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 !
@@ -1862,7 +1862,7 @@ use Matrix_Operations
 use ls_Integral_Interface
 IMPLICIT NONE
 Integer               :: ndmat
-TYPE(MATRIX),target   :: D(ndmat)
+TYPE(MATRIX)   :: D(ndmat)
 TYPE(MATRIX)          :: F(ndmat),K(ndmat),temp,temp2,K2
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
@@ -2261,7 +2261,7 @@ SUBROUTINE II_get_4center_eri(LUPRI,LUERR,SETTING,outputintegral,dim1,dim2,dim3,
 IMPLICIT NONE
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR,dim1,dim2,dim3,dim4
-REAL(REALK),target    :: outputintegral(dim1,dim2,dim3,dim4,1)
+REAL(REALK)    :: outputintegral(dim1,dim2,dim3,dim4,1)
 !
 integer               :: usemat
 Real(realk),pointer   :: integrals(:,:,:,:,:)
@@ -2327,7 +2327,7 @@ SUBROUTINE II_GET_DECPACKED4CENTER_K_ERI(LUPRI,LUERR,SETTING,&
 IMPLICIT NONE
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR,nbast,dim2,dim3,batchB,batchC
-REAL(REALK),target    :: outputintegral(nbast,nbast,dim2,dim3)
+REAL(REALK)    :: outputintegral(nbast,nbast,dim2,dim3)
 !
 integer               :: I,J
 type(matrixp)         :: intmat(1)
@@ -2387,7 +2387,7 @@ SUBROUTINE II_GET_DECPACKED4CENTER_J_ERI(LUPRI,LUERR,SETTING,&
 IMPLICIT NONE
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR,nbast,dim3,dim4,batchC,batchD
-REAL(REALK),target    :: outputintegral(nbast,nbast,dim3,dim4)
+REAL(REALK)    :: outputintegral(nbast,nbast,dim3,dim4)
 !
 integer               :: I,J
 type(matrixp)         :: intmat(1)
@@ -2441,7 +2441,7 @@ SUBROUTINE II_get_2int_diag(LUPRI,LUERR,intType,AO1,AO2,SETTING,GAB)
   use Matrix_Operations
   use ls_Integral_Interface
 IMPLICIT NONE
-TYPE(MATRIX),target   :: GAB
+TYPE(MATRIX)   :: GAB
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 Character*(*)         :: AO1,AO2,intType
@@ -2478,7 +2478,7 @@ SUBROUTINE II_get_2int_ScreenMat(LUPRI,LUERR,SETTING,GAB)
   use Matrix_Operations
   use ls_Integral_Interface
 IMPLICIT NONE
-TYPE(MATRIX),target   :: GAB
+TYPE(MATRIX)   :: GAB
 TYPE(LSSETTING)       :: SETTING
 INTEGER               :: LUPRI,LUERR
 !
diff --git LSDALTON/linears/LSDALTON.f90 LSDALTON/linears/LSDALTON.f90
index b8c6f59..e65a07e 100644
--- LSDALTON/linears/LSDALTON.f90
+++ LSDALTON/linears/LSDALTON.f90
@@ -468,7 +468,7 @@ SUBROUTINE scfloop(H1,F,D,S,E,ls,config)
   use rsp_util
    implicit none
    
-   type(matrix),intent(in)         :: H1
+   type(matrix),intent(inout)         :: H1
    type(matrix),intent(inout)      :: D, F, S
    type(configItem),intent(inout)  :: config
    integer                         :: nbast
@@ -654,7 +654,7 @@ subroutine get_fock(config,fifoqueue,queue,iteration,D,H1,F,Etotal,LSint,newlupr
    !> Current SCF iteration
    integer, intent(in)                    :: iteration
    !> Current density matrix
-   TYPE(Matrix),intent(inout),target      :: D
+   TYPE(Matrix),intent(inout)      :: D
    !> One-electron Hamiltonian
    TYPE(Matrix),intent(inout)             :: H1
    !> Fock/KS matrix
diff --git LSDALTON/linears/LS_optimizer.f90 LSDALTON/linears/LS_optimizer.f90
index 241abba..a99fa48 100644
--- LSDALTON/linears/LS_optimizer.f90
+++ LSDALTON/linears/LS_optimizer.f90
@@ -822,6 +822,29 @@ LOGICAL REJGEO,NEWSTP,NEWBMT
 LOGICAL FAILED
 SAVE FAILED, IFAILD
 DATA FAILED, IFAILD /.FALSE.,0/
+Interface
+   Subroutine Get_Energy(E,config,optinfo,H1,F,D,S,ls,NAtoms,lupri,luerr)
+     !
+     use precision
+     use lstiming
+     use configuration
+     use lsdalton_fock_module
+     use matrix_module
+     use dal_interface
+     use optimization_input
+     use ks_settings
+     use direct_dens_util
+     use initial_guess
+     Implicit none
+     Type(lsitem),target :: ls   ! General information,used only to get E and gradient
+     Type(Matrix), intent(inout) :: F,D,S     ! Fock,density,overlap matrices
+     Type(Matrix), intent(inout),target :: H1 ! One electron matrix
+     Type(ConfigItem), intent(inout) :: Config ! General information
+     Type(opt_setting) :: optinfo
+     Real(realk) :: E
+     Integer :: NAtoms,lupri,luerr
+   end Subroutine Get_Energy
+end Interface
 !
       NEWSTP = .FALSE.
       REJGEO = .TRUE.
diff --git LSDALTON/linears/optimloc.f90 LSDALTON/linears/optimloc.f90
index 433aeb1..cd18140 100644
--- LSDALTON/linears/optimloc.f90
+++ LSDALTON/linears/optimloc.f90
@@ -418,7 +418,17 @@ type(orbspread_data)   :: inp
 type(Matrix) :: Hv,V,T, G
 real(realk),parameter :: mu=-1.32d0
 integer :: i
-
+interface
+   subroutine orbspread_hesslin(Hv,V,mu,norb,orbspread_input)
+     use orbspread_module
+     implicit none
+     Type(Matrix), intent(inout) :: Hv
+     Type(Matrix), intent(in)  :: V
+     real(realk), intent(in)   :: mu
+     integer, intent(in)       :: norb
+     type(orbspread_data), intent(in), target :: orbspread_input
+end subroutine orbspread_hesslin
+end interface
 !allocations
  call mat_init(Hv,norb,norb)
  call mat_init(V,norb,norb)
