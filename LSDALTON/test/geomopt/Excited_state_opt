#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > Excited_state_opt.info <<'%EOF%'
   Excited_state_opt 
   -------------
   Molecule:         Ethyne
   Wave Function:    DFT/B3LYP/6-31G 
   Test Purpose:     Test Excited state geometry optimizer in redundant internal
   coordinates with B3LYP
                     
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > Excited_state_opt.mol <<'%EOF%'
BASIS                                   
6-31G                                   
Ethyne                                  
                                         
Atomtypes=2 Charge=0 Nosymmetry                             
Charge=1.0 Atoms=2                                          
H     -3.2824010848     0.0000000000      0.0000000000      
H      3.2824010848     0.0000000000      0.0000000000      
Charge=6.0 Atoms=2                                          
C     -1.2753317599     0.0000000000      0.0000000000      
C      1.2753317599     0.0000000000      0.0000000000 
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > Excited_state_opt.dal <<'%EOF%'
**OPTIMI
.BAKER
.LOOSE
**WAVE FUNCTIONS
.DFT
B3LYP
#*DFT INPUT
#.FINE
*DENSOPT
.ARH
.CONVTHR
1.0D-5
$INFO
DEBUG_MPI_MEM
$END INFO
**RESPONSE
.NEXCIT
1
*ESGRAD
.EXSTATES
1
1
*SOLVER
.CONVTHR
1.0D-5
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > Excited_state_opt.check
cat >> Excited_state_opt.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Energy
CRIT1=`$GREP "Energy at final geometry is * \: * \-77\.03083" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=1
ERROR[1]="EXCITED STATE ENERGY NOT CORRECT -"

# Memory test
CRIT2=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`
TEST[2]=`expr  $CRIT2`
CTRL[2]=1
ERROR[2]="Memory leak -"

# Number of gradient calculations
CRIT3=`$GREP "Geometry converged in * 3 " $log | wc -l` 
TEST[3]=`expr   $CRIT3`
CTRL[3]=1
ERROR[3]="Wrong number of geometry steps"

# MPI Memory test
CRIT1=`$GREP "[0-9][0-9] byte  \- Should be zero \- otherwise a leakage is present" $log | wc -l`
TEST[4]=`expr  $CRIT1`
CTRL[4]=0
ERROR[4]="MPI Memory leak -"

PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
