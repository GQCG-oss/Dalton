#!/usr/bin/env python

import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))
from runtest_lsdalton import Filter, TestRun

test = TestRun(__file__, sys.argv)

f = Filter()
f.add(string = 'RMS value for first-order geometrical-derivative Coulomb matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for first-order geometrical-derivative exchange matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for second-order geometrical-derivative Coulomb matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order geometrical-derivative Coulomb matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order geometrical-derivative exchange matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order geometrical-derivative Coulomb expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order geometrical-derivative exchange expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order overlap derivative matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order nuclear-electron repulsion derivative matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order kinetic-integral derivative matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order overlap derivative expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order nuclear-electron repulsion derivative expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for third-order kinetic-integral derivative expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order geometrical-derivative Coulomb matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order geometrical-derivative exchange matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order geometrical-derivative Coulomb expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order geometrical-derivative exchange expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order overlap derivative matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order nuclear-electron repulsion derivative matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order kinetic-integral derivative matrix',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order overlap derivative expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order nuclear-electron repulsion derivative expectation',
      rel_tolerance = 1.0e-8)
f.add(string = 'RMS value for fourth-order kinetic-integral derivative expectation',
      rel_tolerance = 1.0e-8)

f.add(string = 'Final HF energy',
      rel_tolerance = 1.0e-8)
f.add(string = 'Nuclear repulsion',
      rel_tolerance = 1.0e-8)

f.add(string = 'Allocated memory (TOTAL)')

test.run(['hodi.dal'], ['LiH.mol'], {'out': f})

sys.exit(test.return_code)

