#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > LSDALTON_Link.info <<'%EOF%'
   LSDALTON_Link
   -------------
   Molecule:         5 HCN molecules placed 20 atomic units apart
   Wave Function:    B3LYP/STO-2G
   Test Purpose:     Check Link integrals
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > LSDALTON_Link.mol <<'%EOF%'
BASIS
STO-2G
5 HCN molecules placed 20 atomic units apart
STRUCTURE IS NOT OPTIMIZED. STO-2G basis 
Atomtypes=3 Nosymmetry
Charge=1. Atoms=5
H   0.0   0.0    -1.0 
H   0.0  20.0    -1.0 
H   0.0  40.0    -1.0 
H   0.0  60.0    -1.0 
H   0.0  80.0    -1.0 
Charge=7. Atoms=5
N   0.0   0.0     1.5
N   0.0  20.0     1.5
N   0.0  40.0     1.5
N   0.0  60.0     1.5
N   0.0  80.0     1.5
Charge=6. Atoms=5
C   0.0   0.0     0.0
C   0.0  20.0     0.0
C   0.0  40.0     0.0
C   0.0  60.0     0.0
C   0.0  80.0     0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > LSDALTON_Link.dal <<'%EOF%'
**INTEGRALS
.DEBUGCCFRAGMENT
**WAVE FUNCTIONS
.DFT
B3LYP
*DFT INPUT
.GRID TYPE
 BECKEORIG LMG
.RADINT
1.0D-11
.ANGINT
31
**INFO
.DEBUG_MPI_MEM
.DEBUG_SCF_MEM
*DENSOPT
.CONVTHR
5.0d-5
*END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >LSDALTON_Link.check
cat >> LSDALTON_Link.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Energy
CRIT1=`$GREP "Final * DFT energy\: * \-438\.0100003" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=1
ERROR[1]="DFT ENERGY NOT CORRECT -"

# Memory test
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`
TEST[2]=`expr  $CRIT1`
CTRL[2]=1
ERROR[2]="Memory leak -"

# MPI Memory test
CRIT1=`$GREP "[0-9][0-9] byte  \- Should be zero \- otherwise a leakage is present" $log | wc -l`
TEST[3]=`expr  $CRIT1`
CTRL[3]=0
ERROR[3]="MPI Memory leak -"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo ${ERROR[i]}
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
#######################################################################
