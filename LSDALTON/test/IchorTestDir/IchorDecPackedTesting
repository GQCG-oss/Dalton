#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > IchorDecPackedTesting.info <<'%EOF%'
   IchorDecPackedTesting
   -------------
   Test Purpose:     Test Ichor Integrals agains Thermite Integrals
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > IchorDecPackedTesting.mol <<'%EOF%'
BASIS
6-31G
water R(OH) = 0.95Aa , <HOH = 109 deg.
Distance in Aangstroms
   2     0         *
        8.    1
O      0.00000   0.00000   0.00000
        1.    2
H      0.55168   0.77340   0.00000
H      0.55168  -0.77340   0.00000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > IchorDecPackedTesting.dal <<'%EOF%'
**GENERAL
.TIME
.NOGCBASIS
**PROFILE
.ICHORDEC
**INTEGRALS
.NOJENGINE
**WAVE FUNCTIONS
.HF
*END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >IchorDecPackedTesting.check
cat >> IchorDecPackedTesting.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

CRIT1=`$GREP "QQQ SUCCESFUL DECPACK J TEST" $log | wc -l`
TEST[ 1]=`expr  $CRIT1`
CTRL[ 1]=1
ERROR[ 1]=" DECPACKED J using Ichor NOT CORRECT -"

CRIT1=`$GREP "QQQ SUCCESFUL DECPACK JOLD TEST" $log | wc -l`
TEST[ 2]=`expr  $CRIT1`
CTRL[ 2]=1
ERROR[ 2]=" DECPACKED J using Thermite NOT CORRECT -"

PASSED=1
for((i=1;i<=2;i++))
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then

      if [ $PASSED -eq 1 ]
      then
         echo -e ${ERROR[i]} > newfile.txt
      else
         echo -e ${ERROR[i]} >> newfile.txt
      fi
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   cat newfile.txt -n
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
#######################################################################
