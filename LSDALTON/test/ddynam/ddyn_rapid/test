#!/usr/bin/env python

import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))
from runtest_lsdalton import Filter, TestRun

test = TestRun(__file__, sys.argv)

f = Filter()
f.add(string = 'Final DFT energy',
      rel_tolerance = 1.0e-8)
f.add(string = 'Nuclear repulsion',
      rel_tolerance = 1.0e-8)

f.add(from_string = 'Initial geometry',
      num_lines = 6,
      ignore_below = 1.0e-7,
      rel_tolerance = 1.0e-8)

f.add(from_string = 'Initial velocities',
      num_lines = 6,
      ignore_below = 1.0e-7,
      rel_tolerance = 1.0e-8)

f.add(from_string = 'contribution to gradient',
      num_lines = 6,
      ignore_below = 1.0e-7,
      rel_tolerance = 1.0e-8)

f.add(from_string = 'DFT-D3 Functional Dependent Parameters',
      num_lines = 6,
      rel_tolerance = 1.0e-8)

f.add(from_string = 'E_disp',
      rel_tolerance = 1.0e-8)

f.add(from_string = 'Molecular gradient',
      num_lines = 6,
      ignore_below = 1.0e-7,
      rel_tolerance = 1.0e-8)

f.add(string = 'Potential energy',rel_tolerance = 1.0e-8)
f.add(string = 'Energy conserv',
      ignore_below = 1.0e-7,
      ignore_sign = True,
      rel_tolerance = 1.0e-8)
f.add(string = 'Temperature',
      rel_tolerance = 1.0e-8)

f.add(string = 'J_tot',
      rel_tolerance = 1.0e-8)

f.add(from_string = 'Energy and conservation information',
      num_lines = 13,
      ignore_below = 1.0e-7,
      rel_tolerance = 1.0e-6)

f.add(string = 'Energy drift',
      rel_tolerance = 1.0e-8)

f.add(string = 'Energy noise',
      rel_tolerance = 1.0e-8)

f.add(string = 'Allocated memory (TOTAL)')
f.add(string = 'Allocated MPI memory a cross all slaves')

test.run(['ddyn_rapid.dal'], ['H2O.mol'], {'out': f})

sys.exit(test.return_code)

