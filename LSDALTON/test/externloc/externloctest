#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > externloctest.info <<'%EOF%'
   externloctest
   ---------------
   Molecule:         
   Wave Function:    
   Test Purpose:     
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > externloctest.mol <<'%EOF%'
BASIS
6-31G
C8H2 molecule based on an optimized C40H2 
structur using b3lyp/6-311+g(d,p)
Atomtypes=2 Nosymmetry Angstrom
Charge=6. Atoms=7
C         0.00000000      0.00000000      1.08290700
C         0.00000000      0.00000000      2.29461600
C         0.00000000      0.00000000      3.64429100
C         0.00000000      0.00000000      4.86890900
C         0.00000000      0.00000000      6.20522000
C         0.00000000      0.00000000      7.43493100
C         0.00000000      0.00000000      8.76635300
Charge=1. Atoms=2
H         0.00000000      0.00000000      0.00000000
H         0.00000000      0.00000000      9.84926000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > externloctest.dal <<'%EOF%'
**WAVE FUNCTIONS
.HF
*DENSOPT
.ARH
#.START
#TRILEVEL
.CONVDYN
STANDARD
.LCM
*END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >externloctest.check
cat >> externloctest.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# test energy
CRIT1=`$GREP "Maximum orbspread and orb\.number * \: * 2\.587 * 36" $log | wc -l`
TEST[1]=`expr  $CRIT1`
CTRL[1]=1
ERROR[1]="Maximum orbspread and orb. number NOT CORRECT -"

# test energy
CRIT1=`$GREP "Maximum fourth spread and orb\.number \: * 3\.69" $log | wc -l`
TEST[2]=`expr  $CRIT1`
CTRL[2]=1
ERROR[2]="Maximum kurtosis and orb. number NOT CORRECT -"

PASSED=1
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo ${ERROR[i]}
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
#######################################################################
