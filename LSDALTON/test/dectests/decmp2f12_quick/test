#!/usr/bin/env python

import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))
from runtest_lsdalton import Filter, TestRun

test = TestRun(__file__, sys.argv)

f = Filter()
f.add(string = 'SCF converged in')
f.add(string = 'Final HF energy',
      rel_tolerance = 1.0e-8)
f.add(string = 'Nuclear repulsion',
      rel_tolerance = 1.0e-8)

f.add(string = 'Min. sigma_2',rel_tolerance = 1.0e-4, mask = [1])
f.add(string = 'Min. sigma_4',rel_tolerance = 1.0e-4, mask = [1])
f.add(string = 'Max. sigma_2',rel_tolerance = 1.0e-4, mask = [1])
f.add(string = 'Max. sigma_4',rel_tolerance = 1.0e-4, mask = [1])

f.add(string = 'Estimated pair correlation energy',
      rel_tolerance = 1.0e-2)

f.add(string = 'PF_LASTPAIR',
      rel_tolerance = 1.0e-2)

f.add(string = 'PF_ESTIMATE',
      rel_tolerance = 1.0e-2)

f.add(from_string = 'MP2 occupied single energies',
      to_string   = 'MP2 Lagrangian correlation energy',
      rel_tolerance = 1.0e-4)

f.add(from_string = 'MP2F12 occupied single energies',
      to_string   = 'MP2-F12 CORRELATION ENERGY',
      rel_tolerance = 1.0e-4)

f.add(from_string = 'E: Hartree-Fock energy',
      to_string   = 'E: Total MP2-F12 energy',
      rel_tolerance = 1.0e-4)


f.add(string = 'Allocated memory (TOTAL)')

test.run(['decmp2f12_quick.dal'], ['acetylene.mol'], {'out': f})

sys.exit(test.return_code)
