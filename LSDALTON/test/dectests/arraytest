#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > fullccsd.info <<'%EOF%'
   TESTING ARRAY OPERATIONS
   ------------------------
   Molecule:         Ethene
   Wave Function:    NONE / 6-31G
   Test Purpose:     Test full molecule CCSD energy using DEC program (Kasper K)
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > arraytest.mol <<'%EOF%'
BASIS
6-31G


Atomtypes=2 Charge=0 Nosymmetry Angstrom 
Charge=6.0 Atoms=2
C          0.65790       -0.00446        0.06398
C         -0.65783        0.00446       -0.06385
Charge=1.0 Atoms=4
H          1.16103        0.06607        1.02388
H          1.33519       -0.08301       -0.78143
H         -1.33549        0.08301        0.78127
H         -1.16080       -0.06606       -1.02386
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > arraytest.dal <<'%EOF%'
**INFO
.DEBUG_MPI_MEM
**DEC
.RESTART
.TESTARRAY
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > arraytest.check
cat >>arraytest.check <<'%EOF%'

log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

SUCC=`$GREP "SUCCESS" $log | wc -l`
$GREP "FAILED" $log
CRIT1=`$GREP "FAILED" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=0
ERROR[1]="ARRAY TEST FAILED -"
ALL=`expr $SUCC + $CRIT1`

echo $CRIT1" out of "$ALL" tests failed"

#Memory test for total memory                                             
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`
TEST[2]=`expr  $CRIT1`
CTRL[2]=1
ERROR[2]="Memory leak -"

PASSED=1
for i in {1..2}
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%




