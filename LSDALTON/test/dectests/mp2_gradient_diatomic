#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > mp2_gradient_diatomic.info <<'%EOF%'
   DEC-MP2 gradient diatomic
   --------------------------------
   Molecule:         LiF
   Wave Function:    MP2 / cc-pVDZ
   Test Purpose:     Test all contributions to the gradient of simple diatomic system
                     where errors should be easy to detect. (Kasper K)
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > mp2_gradient_diatomic.mol <<'%EOF%'
BASIS                                                   
cc-pVDZ


Atomtypes=2 Nosymmetry Angstrom
Charge=3.0 Atoms=1
Li  0.000000    0.000000    0.000000
Charge=9.0 Atoms=1
F   1.563900    0.000000    0.000000    
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > mp2_gradient_diatomic.dal <<'%EOF%'
**WAVE FUNCTIONS
.HF
*DENSOPT
.ARH
.START
TRILEVEL
.CONVTHR
1.0d-5
.LCM
**DEC
.gradient
.SimulateFull
.kappaTHR
1e-6
*END OF INPUT  
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >mp2_gradient_diatomic.check
cat >>mp2_gradient_diatomic.check <<'%EOF%'

log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# TOTAL MP2 ENERGY
CRIT1=`$GREP "Total MP2 energy * \: * \-107.154440" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=1
ERROR[1]="Total MP2 energy is not correct"

# Hartree-Fock contribution to MP2 energy
CRIT1=`$GREP "Hartree-Fock energy \: * \-106.945125" $log | wc -l`
TEST[2]=`expr   $CRIT1`
CTRL[2]=1
ERROR[2]="Hartree-Fock energy is not correct"

# MP2 correlation energy
CRIT1=`$GREP "Correlation energy  \: * \-0.209314" $log | wc -l`
TEST[3]=`expr   $CRIT1`
CTRL[3]=1
ERROR[3]="MP2 correlation energy is not correct"

# Total MP2 gradient for Li
CRIT1=`$GREP "Li * 0.00933" $log | wc -l`
TEST[4]=`expr   $CRIT1`
CTRL[4]=1
ERROR[4]="Total MP2 gradient for Li atom is not correct"

# MP2 gradient for Li: Nuclear repulsion contribution
CRIT1=`$GREP "Li * 3.09134" $log | wc -l`
TEST[5]=`expr   $CRIT1`
CTRL[5]=1
ERROR[5]="Nuclear repulsion contribution to MP2 gradient for Li atom is not correct"

# MP2 gradient for Li: One-electron contribution
CRIT1=`$GREP "Li * \-6.13807" $log | wc -l`
TEST[6]=`expr   $CRIT1`
CTRL[6]=1
ERROR[6]="One-electron contribution to MP2 gradient for Li atom is not correct"

# MP2 gradient for Li: Reorthonormalization contribution
CRIT1=`$GREP "Li * 0.06429" $log | wc -l`
TEST[7]=`expr   $CRIT1`
CTRL[7]=1
ERROR[7]="Reorthonormalization contribution to MP2 gradient for Li atom is not correct"

# MP2 gradient for Li: Fock matrix derivative contribution
CRIT1=`$GREP "Li * 2.97713" $log | wc -l`
TEST[8]=`expr   $CRIT1`
CTRL[8]=1
ERROR[8]="Fock matrix derivative contribution to MP2 gradient for Li atom is not correct"

# MP2 gradient for Li: Ltheta contribution
CRIT1=`$GREP "Li * 0.01462" $log | wc -l`
TEST[9]=`expr   $CRIT1`
CTRL[9]=1
ERROR[9]="Ltheta contribution to MP2 gradient for Li atom is not correct"

# Total MP2 gradient for F 
CRIT1=`$GREP "F * \-0.00933" $log | wc -l`
TEST[10]=`expr   $CRIT1`
CTRL[10]=1
ERROR[10]="Total MP2 gradient for F atom is not correct"

# MP2 gradient for F: Nuclear repulsion contribution
CRIT1=`$GREP "F * \-3.09134" $log | wc -l`
TEST[11]=`expr   $CRIT1`
CTRL[11]=1
ERROR[11]="Nuclear repulsion contribution to MP2 gradient for F atom is not correct"

# MP2 gradient for F: One-electron contribution
CRIT1=`$GREP "F * 6.13807" $log | wc -l`
TEST[12]=`expr   $CRIT1`
CTRL[12]=1
ERROR[12]="One-electron contribution to MP2 gradient for F atom is not correct"

# MP2 gradient for F: Reorthonormalization contribution
CRIT1=`$GREP "F * \-0.06429" $log | wc -l`
TEST[13]=`expr   $CRIT1`
CTRL[13]=1
ERROR[13]="Reorthonormalization contribution to MP2 gradient for F atom is not correct"

# MP2 gradient for F: Fock matrix derivative contribution
CRIT1=`$GREP "F * \-2.97713" $log | wc -l`
TEST[14]=`expr   $CRIT1`
CTRL[14]=1
ERROR[14]="Fock matrix derivative contribution to MP2 gradient for F atom is not correct"

# MP2 gradient for F: Ltheta contribution
CRIT1=`$GREP "F * \-0.01462" $log | wc -l`
TEST[15]=`expr   $CRIT1`
CTRL[15]=1
ERROR[15]="Ltheta contribution to MP2 gradient for F atom is not correct"

# Memory test for total memory                                             
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`         
TEST[16]=`expr  $CRIT1`                                                    
CTRL[16]=1                                                                 
ERROR[16]="Memory leak -"

# Memory test for array4
CRIT1=`$GREP "Memory in use for array4 * \: * 0.000 * GB" $log | wc -l`
TEST[17]=`expr  $CRIT1`
CTRL[17]=1
ERROR[17]="Memory leak for array4 -"




PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%




