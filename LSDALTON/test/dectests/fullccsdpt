#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > fullccsdpt.info <<'%EOF%'
   DEC-CCSD(T) energy for full molecule
   --------------------------------
   Molecule:         H2O
   Wave Function:    CCSD(T) / 6-31G
   Test Purpose:     Test full molecule CCSD(T) energy using DEC program (Janus J. Eriksen)
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > fullccsdpt.mol <<'%EOF%'
BASIS
6-31G


Atomtypes=2 Charge=0 Nosymmetry Angstrom
Charge=8.0 Atoms=1
O    0.0000     0.0000  0.1173
Charge=1.0 Atoms=2
H    0.0000     0.7572  -0.4692
H    0.0000     -0.7572 -0.4692
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > fullccsdpt.dal <<'%EOF%'
**GENERAL
.NOGCBASIS
**WAVE FUNCTIONS
.HF
*DENSOPT
.ARH
.CONVTHR
1.0d-6
**INFO
.DEBUG_MPI_MEM
**CC
.CCSD(T)
.ccThr
1.0d-9
.MEMORY
1.0
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >fullccsdpt.check
cat >>fullccsdpt.check <<'%EOF%'

log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# HF ENERGY
CRIT1=`$GREP "Final HF energy: * \-75\.9839744[7-8]" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=1
ERROR[1]="HF ENERGY NOT CORRECT -"

# Total CCSD correlation energy
CRIT1=`$GREP "Total CC solver correlation energy * = * \-0\.1353[7-8]" $log | wc -l`
TEST[2]=`expr   $CRIT1`
CTRL[2]=1
ERROR[2]="CCSD correlation energy (occ. part. scheme) is not correct"

# E4 doubles and triples
CRIT1=`$GREP "The E4 doubles and triples contribution * = * \-0\.109[4-5]" $log | wc -l`
TEST[3]=`expr   $CRIT1`
CTRL[3]=1
ERROR[3]="The E4 doubles and triples contribution is not correct"

# E5 singles and triples
CRIT1=`$GREP "The E5 singles and triples contribution * = * \0\.987[3-4]" $log | wc -l`
TEST[4]=`expr   $CRIT1`
CTRL[4]=1
ERROR[4]="The E5 singles and triples contribution is not correct"

# Total CCSD(T) energy contribution
CRIT1=`$GREP "Total CCSD\(T\) energy contribution * = * \-0\.995[8-9]" $log | wc -l`
TEST[5]=`expr   $CRIT1`
CTRL[5]=1
ERROR[5]="Total CCSD(T) energy contribution is not correct"

# Total CCSD(T) correlation energy
CRIT1=`$GREP "Total CCSD\(T\) correlation energy * = * \-0\.136[3-4]" $log | wc -l`
TEST[6]=`expr   $CRIT1`
CTRL[6]=1
ERROR[6]="Total CCSD(T) correlation energy is not correct"

# Memory test for total memory                                             
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`         
TEST[7]=`expr  $CRIT1`                                                    
CTRL[7]=1                                                                 
ERROR[7]="Memory leak -"

PASSED=1
for i in 1 2 3 4 5 6 7
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%




