#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > PipekMezeyLowdin.info <<'%EOF%'
   Localize orbitals using Pipek-Mezey 
   --------------------------------------
   Molecule:         5 BH molecules
   Wave Function:    HF / STO-3G
   Test Purpose:     Test Pipek-Mezey localization function 
                     using Lowdin population analysis (Ida-Marie Hoeyvik)
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > PipekMezeyLowdin.mol <<'%EOF%'
BASIS                                                   
STO-3G
                                                        
                                                        
Atomtypes=2 Nosymmetry Angstrom
Charge=5.0 Atoms=5
B          0.000000      0.0000000    0.0000000
B          3.000000      0.0000000    1.0000000
B          6.000000      0.0000000    0.0000000
B          9.000000      0.0000000    1.0000000
B          12.000000     0.0000000    0.0000000
Charge=1.0 Atoms=5
H          0.000000      1.0000000    0.0000000
H          3.000000      0.0000000    0.0000000
H          6.000000      1.0000000    0.0000000
H          9.000000      0.0000000    0.0000000
H          12.000000     1.0000000    0.0000000
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > PipekMezeyLowdin.dal <<'%EOF%'
**WAVE FUNCTIONS
.HF
*DENSOPT
.ARH
.START
TRILEVEL
.LCM
.PML
2 2
.NO L2OPT
*END OF INPUT  
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >PipekMezeyLowdin.check
cat >>PipekMezeyLowdin.check <<'%EOF%'

log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# HF ENERGY 
CRIT1=`$GREP "Final HF energy\: * \-123\.59945" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=2
ERROR[1]="HF ENERGY NOT CORRECT -"

# KURTOSIS
CRIT1=`$GREP "Maximum fourth spread and orb\.number \: * 2\.3" $log | wc -l`
TEST[2]=`expr   $CRIT1`
CTRL[2]=1
ERROR[2]="Kurtosis is not correct"

# Memory test for matrices
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`
TEST[3]=`expr  $CRIT1`
CTRL[3]=1
ERROR[3]="Memory leak for matrices -"


PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%




