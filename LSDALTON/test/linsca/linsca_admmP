#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > linsca_admmP.info <<'%EOF%'
   linsca_admmP
   -------------
   Molecule:         HCN
   Wave Function:    HF
   Test Purpose:     Check ADMMP exchange energy: partially-scaled ADMMQ
                     variant. ADMMP equals ADMMS scaling for LDA functional
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > linsca_admmP.mol <<'%EOF%'
BASIS
6-31G* Aux=df-def2 CABS=3-21G JK=3-21G
HCN molecule

Atomtypes=3 Nosymmetry
Charge=1. Atoms=1
H   0.0   0.0    -1.0 
Charge=7. Atoms=1
N   0.0   0.0     1.5
Charge=6. Atoms=1
C   0.0   0.0     0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > linsca_admmP.dal <<'%EOF%'
**GENERAL
.TIME
**INTEGRALS
.DENSFIT
.ADMMP
**WAVE FUNCTIONS
.DFT
B3LYP
*DENSOPT
.VanLenthe
*DFT INPUT
.GRID5
*END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >linsca_admmP.check
cat >> linsca_admmP.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# ENERGY test
CRIT1=`$GREP "Final DFT energy: * -91.4060974[7-8]" $log | wc -l`
CRIT1=`$GREP "Final DFT energy: * -91.8886890" $log | wc -l`
TEST[1]=`expr  $CRIT1`
CTRL[1]=1
ERROR[1]="ENERGY NOT CORRECT -"

# Memory test
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`
TEST[2]=`expr  $CRIT1`
CTRL[2]=1
ERROR[2]="Memory leak -"

PASSED=1
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo ${ERROR[i]}
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
#######################################################################
