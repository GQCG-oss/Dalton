#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > gridgentest.info <<'%EOF%'
   gridgentest
   ---------------
   Molecule:         
   Wave Function:    
   Test Purpose:     gridgen.x
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > gridgentest.mol <<'%EOF%'
BASIS
STO-3G


Atomtypes=2 Nosymmetry Angstrom
Charge=1.0 Atoms=1
H      0.000000      0.0900000    0.0000000
Charge=9.0 Atoms=1
F      1.1010000      0.03000000    0.000000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > gridgentest.dal <<'%EOF%'
**WAVE FUNCTIONS
.HF
*DENSOPT
.ARH
.START
TRILEVEL
.CONVDYN
STANDARD
.LCM
*END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >gridgentest.check
cat >> gridgentest.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# test energy
CRIT1=`$GREP "Done" $log | wc -l`
TEST[1]=`expr  $CRIT1`
CTRL[1]=2
ERROR[1]="PLT not build"

PASSED=1
for i in 1
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo ${ERROR[i]}
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
#######################################################################
