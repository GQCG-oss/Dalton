#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > plt_dens.info <<'%EOF%'
   Electrostatic potential using PLT driver
   ----------------------------------------
   Molecule:         H2O
   Wave Function:    HF / 3-21G
   Test Purpose:     Test construction of PLT file for electrostatic potential (KK)
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > plt_dens.mol <<'%EOF%'
BASIS
3-21G


Atomtypes=2    Charge=0   Nosymmetry
Charge=1.00   Atoms=2    
H          0.09976190      1.47254919     -0.88247375
H          0.20473356     -1.47539463     -0.88479802
Charge=8.00   Atoms=1    
O          0.29550454      0.00284544      0.18457177
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > plt_dens.dal <<'%EOF%'
**WAVE FUNCTIONS
.HF
*DENSOPT
.ARH DAVID
.START
TRILEVEL
.CONVDYN
TIGHT
**PLT
.TESTPLT
.DENS
.INPUT
dens.restart
.OUTPUT
dens.plt
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >plt_dens.check
cat >>plt_dens.check <<'%EOF%'

log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# HF ENERGY 
CRIT1=`$GREP "Final HF energy: * \-75\.5859597" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=1
ERROR[1]="HF ENERGY NOT CORRECT -"

# Sum of calculated PLT grid points
CRIT1=`$GREP "PLT TEST: Sum of values = * 355\.2" $log | wc -l`
TEST[2]=`expr   $CRIT1`
CTRL[2]=1
ERROR[2]="Sum of electron density gridpoints is not correct"

# Maximum grid point value
CRIT1=`$GREP "PLT TEST: Maximum value = *22\.38" $log | wc -l`
TEST[3]=`expr   $CRIT1`
CTRL[3]=1
ERROR[3]="Max electron density gridpoint value is not correct"

# Memory test for total memory                                             
CRIT1=`$GREP "Allocated memory \(TOTAL\): * 0 byte" $log | wc -l`         
TEST[4]=`expr  $CRIT1`                                                    
CTRL[4]=1                                                                 
ERROR[4]="Memory leak -"

# MPI Memory test
CRIT1=`$GREP "[0-9][0-9] byte  \- Should be zero \- otherwise a leakage is present" $log | wc -l`
TEST[5]=`expr  $CRIT1`
CTRL[5]=0
ERROR[5]="MPI Memory leak -"

PASSED=1
for i in 1 2 3 4 5
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%




