SUBROUTINE init_standalone(LMAX,NBAST,FILE)

   USE mm_global_paras_mod
   IMPLICIT NONE
   INTEGER, INTENT(IN) :: LMAX, NBAST
   INTEGER :: IDUMMY
   CHARACTER(*) FILE

   CALL GPOPEN(LUPRI,FILE,'UNKNOWN',' ','FORMATTED',IDUMMY,.FALSE.)
   CALL mm_get_external_parameters(LMAX,NBAST)

END SUBROUTINE init_standalone

SUBROUTINE close_standalone
   USE mm_global_paras_mod
   IMPLICIT NONE
   CALL GPCLOSE(LUPRI,'KEEP')
END SUBROUTINE close_standalone

SUBROUTINE mm_get_external_parameters(LMAX,NBAST)

   USE mm_global_paras_mod
   IMPLICIT NONE
   INTEGER, INTENT(OUT) :: LMAX, NBAST
   INTEGER :: ID, LUINTM
   REAL(REALK)   :: RD

   LUINTM = 0
   CALL GPOPEN(LUINTM,INPUT_FILE2,'UNKNOWN',' ','UNFORMATTED',ID,.FALSE.)
   REWIND (LUINTM)
   READ (LUINTM) LMAX, NBAST, ID,ID,ID
   CALL GPCLOSE(LUINTM,'KEEP')

END SUBROUTINE mm_get_external_parameters

!===============================================================================

MODULE mm_standalone_drv

   USE mm_global_paras_mod
   IMPLICIT NONE
   PRIVATE
   PUBLIC :: mm_standalone_driver

CONTAINS

!-------------------------------------------------------------------------------

   SUBROUTINE mm_standalone_driver

      USE mm_stats_mod
      USE mm_scheme_builder

      IMPLICIT NONE
      INTEGER, PARAMETER :: MAX_WORK = 25000000
      CHARACTER(6)  :: n_el
      INTEGER :: LMAX, NBAST
      INTEGER :: NLEVEL, TLMAX, ALGORITHM, LEXTRA, T_CONTRACTOR
      LOGICAL       :: UMAT,BRFREE,DYNLMAX,ALL_SQUARE,TREE_TEST,GRID_TEST
      LOGICAL       :: NO_BOX_PRETESTS,INC_NN
      REAL(REALK)   :: GRAIN, RPQMIN, SCREEN
      REAL(REALK), ALLOCATABLE :: WORK(:), Fock_matrix(:,:)
    
      ALLOCATE(WORK(MAX_WORK))
    
      CALL init_standalone(LMAX,NBAST,'mm.out')
      ALLOCATE(Fock_matrix(NBAST,NBAST))
    
      CALL mm_init_defs(NLEVEL,GRAIN,TLMAX,ALGORITHM,                      &
                        UMAT,BRFREE,RPQMIN,DYNLMAX,LEXTRA,                 &
                        ALL_SQUARE,INC_NN,                                 &
                        TREE_TEST,NO_BOX_PRETESTS,                         &
                        GRID_TEST,T_CONTRACTOR,SCREEN)
    
       ! insert changes to defaults here before initialising scheme
      ALGORITHM = DO_FQ
!      ALGORITHM = DO_NN
!      INC_NN = .FALSE.
!      GRAIN = 2.0_realk
      T_CONTRACTOR = 3

!      NO_BOX_PRETESTS = .TRUE.
!      BRFREE = .TRUE.
!      RPQMIN = 1.0d0
!      TREE_TEST = .TRUE.
!      GRID_TEST = .TRUE.

!      READ(*,*) ALGORITHM, T_CONTRACTOR, GRAIN, INC_NN 
!      print *, 'input accepted!'
    
      CALL mm_enable_stats
      CALL mm_init_scheme(NLEVEL,GRAIN,LMAX,TLMAX,ALGORITHM,               &
                          UMAT,BRFREE,RPQMIN,                              &
                          DYNLMAX,LEXTRA,ALL_SQUARE,INC_NN,                &
                          TREE_TEST,NO_BOX_PRETESTS,                       &
                          GRID_TEST,T_CONTRACTOR,SCREEN)
    
      write(lupri,*) "NBAST", NBAST
      write(lupri,*) "LMAX ", LMAX

!      n_el = 'NUC_AT'
!      CALL mm_get_energy(zero,n_el,WORK,MAX_WORK)
!      n_el = 'ONE_EL'
!      CALL mm_get_energy(zero,n_el,WORK,MAX_WORK)
!      n_el = 'TWO_EL'
!      CALL mm_get_energy(zero,n_el,WORK,MAX_WORK)
!      write(lupri,*)

!      n_el = 'ONE_EL'
!      CALL mm_get_J_matrix(n_el,Fock_matrix,NBAST,NBAST,WORK,MAX_WORK)
      n_el = 'TWO_EL'
      CALL mm_get_J_matrix(n_el,Fock_matrix,NBAST,NBAST,WORK,MAX_WORK)
!      n_el = 'FULL_J'
!      CALL mm_get_J_matrix(n_el,Fock_matrix,NBAST,NBAST,WORK,MAX_WORK)
    
      DEALLOCATE(WORK)
    
      CALL close_standalone
      print *, "done!"
   
   END SUBROUTINE mm_standalone_driver

!-------------------------------------------------------------------------------

END MODULE mm_standalone_drv

!===============================================================================

PROGRAM stand_alone

   USE mm_global_paras_mod
   USE mm_standalone_drv
   IMPLICIT NONE

   MM_STANDALONE = .TRUE.
   CALL mm_standalone_driver

END PROGRAM stand_alone

!===============================================================================

