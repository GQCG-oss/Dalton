#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > tripeptide_pariK.info <<'%EOF%'
   tripeptide_pariK
   -------------
   Molecule:         C60/6-31G
   Wave Function:    HF
   Profile:          Exchange Matrix
   CPU Time:         9 min 30 seconds
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > tripeptide_pariK.mol <<'%EOF%'
BASIS
cc-pVTZ Aux=cc-pVTZdenfit
Tripeptide
EXCITATION DIAGNOSTIC
Atomtypes=4 Nosymmetry
Charge=6.0 Atoms=7
C       8.9166338246           -4.5440192320            0.0000000000
C       7.3852882718           -2.1288853323            0.0000000000
C       3.1854652693           -0.2654561847            0.0000000000
C       0.4698240653           -1.2091525370            0.0000000000
C      -3.9623343842           -0.0188491583            0.0000000000
C      -5.4665660242            2.4380112407            0.0000000000
C      -9.7529384032            4.2468858666            0.0000000000
Charge=7.0 Atoms=3
N       4.8349469665           -2.4260938859            0.0000000000
N      -1.3165956203            0.6142990835            0.0000000000
N      -8.0112706847            2.1266880821            0.0000000000
Charge=8.0 Atoms=3
O       8.3794295207           -0.0158271862            0.0000000000
O      -0.0607792405           -3.4896893286            0.0000000000
O      -4.4042555029            4.5179641544            0.0000000000
Charge=1.0 Atoms=13
H       7.7509420415           -6.2476653523            0.0000000000
H      10.1355663262           -4.5548495168            1.6655443832
H      10.1355663262           -4.5548495168           -1.6655443832
H       3.9698109778           -4.1359147256            0.0000000000
H       3.5295187825            0.9281887752            1.6611245342
H       3.5295187825            0.9281887752           -1.6611245342
H      -0.9089521381            2.4912532708            0.0000000000
H      -4.4452018045           -1.1580714998            1.6644659350
H      -4.4452018045           -1.1580714998           -1.6644659350
H      -8.7173507249            0.3496319546            0.0000000000
H      -8.6197436029            5.9645992343            0.0000000000
H     -10.9474378217            4.2172340828            1.6847465838
H     -10.9474378217            4.2172340828           -1.6847465838
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > tripeptide_pariK.dal <<'%EOF%'
**PROFILE
.EXCHANGE
**INTEGRALS
.PARI-K
**WAVE FUNCTIONS
.HF
*DENSOPT
*END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >tripeptide_pariK.check
cat >> tripeptide_pariK.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi
CRIT1=`$GREP "Exchange energy, mat_dotproduct\(D,K\)\= * \-XXX\.XXXXXX" $log | wc -l`
TEST[1]=`expr  $CRIT1`
CTRL[1]=1
ERROR[1]="ENERGY NOT CORRECT -"

PASSED=1
for i in 1
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo ${ERROR[i]}
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo PROF ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
#######################################################################
