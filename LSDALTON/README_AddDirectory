The README file details how to add a new directory (ex: rsp_properties/)
containing a new file (molecular_hessian.f90) and how to include all 
dependencies for a correct compilation.

#####################################################################
I.   Create your new directory
(ex: rsp_properties/)

#####################################################################
II.  Create one new file in your new directory
(ex: rsp_properties/molecular_hessian.f90)

#####################################################################
III. Create a new Makefile in the new directory.
Copy for example linears/Makefile and modify it:
- name the new library: librsp_properties
- include dependencies on other directories: -I../lsutil -I../LSint
- include f() objects: molecular_hessian.o

#####################################################################
IV. Modify ./Makefile: the former DALTON Makefile at the root
(carefull, the order matter)

- DALTON_LIBS =... -Lrsp_properties -lrsp_properties  \
- MODULES = ... RSP_OBJ ... give a new shortname for your module (ex: RSP_OBJ)
- SUBDIRS = ... rsp_properties
- Create your new object module at the right location with his dependencies to others objects, and eventually add it to the main object (LSD_OBJ)
	LSD_OBJ : ... RSP_OBJ
		cd ..
	...
	RSP_OBJ : LSU_OBJ LSI_OBJ
		cd rsp_properties && $(MAKE) all

#####################################################################
V. Modify cmake/Sources.cmake at the right location with respect
to your dependencies.

-	set(RSP_PROPERTIES_SOURCES
	    rsp_properties/molecular_hessian.f90
	    )

#####################################################################
VI. Modify cmake/Compilers.cmake
-	set_source_files_properties(${LSDALTONMAIN_FORTRAN_SOURCES} ...  ${RSP_PROPERTIES_SOURCES}
        	PROPERTIES COMPILE_FLAGS
		...)	
- add do for main of the "set_source_files_properties(...)"

#####################################################################
VII. Modify CmakeLists.txt

...
add_library(
    rsp_propertieslib
    ${RSP_PROPERTIES_SOURCES}
    )
add_dependencies(rsp_propertieslib lsintlib)
add_dependencies(rsp_propertieslib lsutillib_common)
add_dependencies(rsp_propertieslib matrixmlib)
add_dependencies(rsp_propertieslib matrixolib)
add_dependencies(rsp_propertieslib matrixulib)
add_dependencies(rsp_propertieslib lsutiltypelib_common)
add_dependencies(rsp_propertieslib pdpacklib)
add_dependencies(rsp_propertieslib lsutillib)
add_dependencies(rsp_propertieslib lsintlib)
...

and add rsp_propertieslib to the target_link_libraries list (several places) - here the order is important! Your directory lib must be lower than the directories it is called from (below lsdaltonmain) and above the directories it calls (most likely above lsintlib )

 target_link_libraries(
    externloc.x
    lsdaltonmain
    geooptlib
    declib
    ddynamlib
    pbclib
    linearslib
    rsp_propertieslib
    lsintlib
    dftfunclib
    fmmlib
    lsutillib
    lsutiltypelib_common
    pdpacklib
    matrixulib
    matrixolib
    matrixmlib
    lsutillib_common	
    ${LIBS}
    )

#####################################################################
VIII. Try to compile ;-) Remember to compile both with cmake and Makefile.config
                         You may have to re-create a new Cmake build.

