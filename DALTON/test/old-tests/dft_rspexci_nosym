#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > dft_rspexci_nosym.info <<'%EOF%'
   dft_rspexci_nosym
   --------------------
   Molecule:         H2O
   Wave Functions:   DFT B3LYP / cc-pVDZ
   Test Purpose:     DFT B3LYP response test w/o symmetry:
                     excitation energies
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > dft_rspexci_nosym.mol <<'%EOF%'
BASIS 
cc-pVDZ
H2O

    2    0
        8.    1        
O     0.0  0.0000000000 0.0
        1.    2    
H1    1.430    0.0  1.1
H2   -1.430    0.0  1.1
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > dft_rspexci_nosym.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE 
**INTEGRALS
.PROPRINT
**WAVE FUNCTIONS
.DFT
 B3LYP
**RESPONSE 
*LINEAR
.SINGLE RESIDUE
.ROOTS
 3
**END OF DALTON INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >dft_rspexci_nosym.check
cat >>dft_rspexci_nosym.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

CRIT1=`$GREP "Final DFT energy\:  * \-76\.38305" $log | wc -l`
CRIT3=`$GREP "Electronic energy\: * \-85\.60122" $log | wc -l`
CRIT2=`$GREP "Nuclear repulsion\: *    9\.218170507464" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=3
ERROR[1]="DFT/B3LYP ENERGY NOT CORRECT"

# Excitation energies
CRIT1=`$GREP "  0*\.28013.* au" $log | wc -l`
CRIT2=`$GREP "  0*\.34860.* au" $log | wc -l`
CRIT3=`$GREP "  0*\.36477.* au" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 `
CTRL[2]=3
ERROR[2]="EXCITATION ENERGIES NOT CORRECT"

# PBHT diagnostic
CRIT1=`$GREP "LAMBDA =  * 0*\.4218" $log | wc -l`
CRIT2=`$GREP "LAMBDA =  * 0*\.3534" $log | wc -l`
CRIT3=`$GREP "LAMBDA =  * 0*\.4842" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 `
CTRL[3]=3
ERROR[3]="PBHT OVERLAP DIAGNOSTIC NOT CORRECT"

PASSED=1
for i in 1 2 3
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
