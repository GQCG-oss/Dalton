#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > choles_cc2_excdiis.info <<'%EOF%'
   choles_cc2_excdiis
   -----------------
   Molecule:         furan (C4OH4)
   Wave Functions:   Turbomole-SVP
   Test Purpose:     Cholesky CC2 excitation energies
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > choles_cc2_excdiis.mol <<'%EOF%'
BASIS
Turbomole-SVP
............
............
Atomtypes=3 Angstrom
Charge=6 Atoms=4
C  0.0000    1.0935    0.3466
C  0.0000   -1.0935    0.3466
C  0.0000    0.7174   -0.9581
C  0.0000   -0.7174   -0.9581
Charge=8 Atoms=1
O  0.0000    0.0000    1.1590
Charge=1 Atoms=4
H  0.0000    2.0468    0.8491
H  0.0000   -2.0468    0.8491
H  0.0000    1.3728   -1.8160
H  0.0000   -1.3728   -1.8160
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > choles_cc2_excdiis.dal <<'%EOF%'
**DALTON
.RUN WAVE
.CHOLES
**INTEGRALS
.DIPLEN
**CHOLESKY
.REDUCE
.SPANDI
  1.0d-3
.THRCOM
 1.0D-6
!.RSTDIA
!.RSTCHO
**WAVE FUNCTION
.CC
*SCF INPUT
.THRESH
 1.0D-8
.MAX DIIS
  100
*ORBITAL
.MOSTART
 HUCKEL
.NOSUPSYM
*CC INP
.PRINT
  1
.FREEZE
  5   0
.CCS
.CC2
*CCEXCI
.CHEXDI
.DV4DIS
.NCCEXCI
  2   1   0   0
**END OF DALTON INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >choles_cc2_excdiis.check
cat >>choles_cc2_excdiis.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

# SCF and  MP2 CC2 energies:
CRIT1=`$GREP "Total SCF" $log | $GREP "\-228.4535836" | wc -l`
CRIT2=`$GREP "Total CC2" $log | $GREP "\-229.1682694" | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2`
CTRL[1]=5
ERROR[1]="ENERGIES NOT CORRECT"


# Amplitudes
CRIT1=`$GREP "Number of t1 amplitudes" $log | $GREP "288" | wc -l`
CRIT2=`$GREP "Number of t2 amplitudes" $log | $GREP "115497" | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2`
CTRL[2]=4
ERROR[2]="NUMBER OF AMPLITUDES NOT CORRECT"


# CCS excitations
CRIT1=`$GREP "\^1A1" $log | grep "0.310" | wc -l`
CRIT2=`$GREP "\^1A1" $log | grep "0.353" | wc -l`
CRIT3=`$GREP "\^1B1" $log | grep "0.340" | wc -l`
TEST[3]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[3]=3
ERROR[3]="CCS EXCITATION ENERGIES NOT CORRECT"



# CC2 excitations
CRIT1=`$GREP "\^1A1" $log | grep "0.261" | wc -l`
CRIT2=`$GREP "\^1A1" $log | grep "0.339" | wc -l`
CRIT3=`$GREP "\^1B1" $log | grep "0.338" | wc -l`
TEST[4]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=3
ERROR[4]="CC2 EXCITATION ENERGIES NOT CORRECT"



PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi


%EOF%
chmod +x choles_cc2_excdiis.check
#######################################################################
