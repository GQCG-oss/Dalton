#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > pcmsoppa_excit.info <<'%EOF%'
   pcmsoppa_excit
   -----------
   Molecule:         Acrolein
   Wave Function:    PCM-SOPPA/RPA / 3-21G
   Test Purpose:     Test of energies and excitation energies
                     through RESPONSE using the PCM
%EOF%
#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > pcmsoppa_excit.mol <<'%EOF%'
BASIS
3-21G
Acrolein
------------------------
AtomTypes=3 NoSymmetry Angstrom
Charge=6.0 Atoms=3
C             -0.145335   -0.546770    0.000607
C              1.274009   -0.912471   -0.000167
C              1.630116   -2.207690   -0.000132
Charge=8.0 Atoms=1
O             -0.560104    0.608977    0.000534
Charge=1.0 Atoms=4
H             -0.871904   -1.386459    0.001253
H              2.004448   -0.101417   -0.000710
H              0.879028   -3.000685    0.000484
H              2.675323   -2.516779   -0.000673
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > pcmsoppa_excit.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
*PCM
.SOLVNT
WATER
.NPCMMT
 0
.ICESPH
 0
.NEQRSP
*PCMCAV
.AREATS
 0.4
**INTEGRAL
.DIPLEN
**WAVE FUNCTIONS
.HF
.MP2
**RESPONSE
.SOPPA
.MAXRM
 3000
*LINEAR
.SINGLE RESIDUE
.DIPLEN
.ROOTS
 2
**END OF DALTON INPUT
%EOF%
#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > pcmsoppa_excit.check
cat >> pcmsoppa_excit.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

#
# TOTAL ENERGIES
#
CRIT1=`$GREP "@    Final HF energy:            \-189.6966797" $log | wc -l`
CRIT2=`$GREP "@    Nuclear repulsion:           102.6648468" $log | wc -l`
CRIT3=`$GREP "@    Electronic energy:          \-292.3501327" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=3
ERROR[1]="TOTAL ENERGIES NOT CORRECT"
#
# EXCITATION ENERGIES
#
CRIT1=`$GREP "@ Excitation energy :  0.127554" $log | wc -l`
CRIT2=`$GREP "@ Excitation energy :  0.246573" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2`
CTRL[2]=2
ERROR[2]="EXCITATION ENERGIES NOT CORRECT"

PASSED=1 
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%
chmod +x pcmsoppa_excit.check
#######################################################################
