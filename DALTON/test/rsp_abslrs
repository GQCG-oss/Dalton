#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION                                                   #
#######################################################################
cat > rsp_abslrs.info <<'%EOF%'
   rsp_abslrs
   -------
   Molecule:         CH4
   Wave Function:    HF
   Test Purpose:     Response calculations (first order)with damping (absorption) 
                     using the solver with symmetrized trial vectors)
%EOF%

#######################################################################
#  MOLECULE INPUT                                                     #
#######################################################################
cat > rsp_abslrs.mol <<'%EOF%'
BASIS
cc-pVDZ
methan
----------
Atomtypes=2 Generators=0  Angstrom
Charge=6.0 Atoms=1
C   -4.37078673  2.07865165  0.00000000
Charge=1.0 Atoms=4
H   -4.01413230  1.06984165  0.00000000
H   -4.01411389  2.58304984  0.87365150
H   -4.01411389  2.58304984  -0.87365150
H   -5.44078673  2.07866484  0.00000000
FINISH
%EOF%

#######################################################################
#  DALTON INPUT                                                       #
#######################################################################
cat > rsp_abslrs.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
.DIRECT
**INTEGRALS
.DIPLEN
**WAVE FUNCTION
.HF
**RESPONSE
*ABSORP
.ALPHA
.DAMPING
 0.004556
.FREQ I
0.4425 0.49 0.0025
.MAXRM
 800
.THCLR
 1.0D-5
**END OF DALTON INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT                                                       #
#######################################################################
echo $CHECK_SHELL > rsp_abslrs.check
cat >> rsp_abslrs.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# ?
CRIT1=`$GREP "Final HF energy\: * \-40\.197487777" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="HF energy is NOT CORRECT"

# ?
CRIT1=`$GREP " XDIPLEN * XDIPLEN * 0*\.442500 * 51\.727... * 5\.690" $log | wc -l`
CRIT2=`$GREP " YDIPLEN * YDIPLEN * 0*\.442500 * 51\.727... * 5\.691" $log | wc -l`
CRIT3=`$GREP " ZDIPLEN * ZDIPLEN * 0*\.442500 * 51\.727... * 5\.690" $log | wc -l`
CRIT4=`$GREP " XDIPLEN * XDIPLEN * 0*\.475000 * \-57\.450... * 228\.05" $log | wc -l`
CRIT5=`$GREP " YDIPLEN * YDIPLEN * 0*\.475000 * \-57\.453... * 228\.05" $log | wc -l`
CRIT6=`$GREP " ZDIPLEN * ZDIPLEN * 0*\.475000 * \-57\.448... * 228\.05" $log | wc -l`
CRIT7=`$GREP " XDIPLEN * XDIPLEN * 0*\.490000 * \-43\.396... * 18\.891" $log | wc -l`
CRIT8=`$GREP " YDIPLEN * YDIPLEN * 0*\.490000 * \-43\.396... * 18\.891" $log | wc -l`
CRIT9=`$GREP " ZDIPLEN * ZDIPLEN * 0*\.490000 * \-43\.396... * 18\.891" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9`
CTRL[2]=9
ERROR[2]="Polarizability is NOT CORRECT"

PASSED=1
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
