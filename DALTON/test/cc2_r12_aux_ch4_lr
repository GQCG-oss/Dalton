#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > cc2_r12_aux_ch4_lr.info <<'%EOF%'
   cc2_r12_aux_ch4_lr
   -------------
   Molecule:         Methane (CH4)
   Wave Function:    CC2-R12 / 6-311G**
   Test Purpose:     Check CC2-R12 linear response without symmetry
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > cc2_r12_aux_ch4_lr.mol <<'%EOF%'
BASIS
6-311G** 6-311++G(3df,3pd)
CH4: CC2-R12/A linear response without symmetry

    4    0
 1      6.    1
C      0.000000000000000   0.000000000000000   0.000000000000000       *
 1      1.    4
H      1.276731000000000   1.276731000000000   1.276731000000000       *
H     -1.276731000000000  -1.276731000000000   1.276731000000000       *
H     -1.276731000000000   1.276731000000000  -1.276731000000000       *
H      1.276731000000000  -1.276731000000000  -1.276731000000000       *
 2      6.    1
C      0.000000000000000   0.000000000000000   0.000000000000000       *
 2      1.    4
H      1.276731000000000   1.276731000000000   1.276731000000000       *
H     -1.276731000000000  -1.276731000000000   1.276731000000000       *
H     -1.276731000000000   1.276731000000000  -1.276731000000000       *
H      1.276731000000000  -1.276731000000000  -1.276731000000000       *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > cc2_r12_aux_ch4_lr.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
.DIRECT
*MOLBAS
.R12AUX
**INTEGRALS
.R12
.DIPLEN
.SECMOM
**WAVE FUNCTIONS
.CC
*SCF INPUT
.THRESHOLD
 1.0D-10
*ORBITALS
.MOSTART
 H1DIAG
*CC INPUT
.CC2
.PRINT
 3
.FREEZE
 1 0
.THRENR
 1.0D-14
.THRLEQ
 1.0D-12
*CCLR
.OPERAT
XDIPLEN XDIPLEN
ZDIPLEN ZDIPLEN
XXSECMOMXDIPLEN
XXSECMOMZDIPLEN
XXSECMOMXXSECMOM
*R12 INPUT
.CC2
 1A
**END OF DALTON INPUT
%EOF%

#######################################################################
 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >cc2_r12_aux_ch4_lr.check
cat >>cc2_r12_aux_ch4_lr.check <<'%EOF%'
log=$1

GREP="grep"

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

#
#            Total SCF   energy:                   -40.1917720926
#            Total MP2-R12/A energy:               -40.3918078442
#            Total CC2-R12/A energy:               -40.3929123948
#
# XDIPLEN  (unrel.)  0.0000   XDIPLEN  (unrel.)  0.0000      15.514431
# ZDIPLEN  (unrel.)  0.0000   ZDIPLEN  (unrel.)  0.0000      15.514431
# XXSECMOM (unrel.)  0.0000   XDIPLEN  (unrel.)  0.0000    -0.19471944E-12
# XXSECMOM (unrel.)  0.0000   ZDIPLEN  (unrel.)  0.0000     0.18814337E-12
# XXSECMOM (unrel.)  0.0000   XXSECMOM (unrel.)  0.0000      56.232170
#

CRIT1=`$GREP "Total MP2-R12/A energy:               -40.391807844" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=2
ERROR[1]="MP2-R12/A ENERGY NOT CORRECT"
CRIT2=`$GREP "Total CC2-R12/A energy:               -40.392912394" $log | wc -l`
TEST[2]=`expr   $CRIT2`
CTRL[2]=2
ERROR[2]="CC2-R12/A ENERGY NOT CORRECT"
#
CRIT3=`$GREP "XDIPLEN *(unrel.) .* *15.514431" $log | wc -l`
TEST[3]=`expr   $CRIT3`
CTRL[3]=1
ERROR[3]="CC2-R12/A XX COMPONENT OF POLARIZABILITY NOT CORRECT"
CRIT4=`$GREP "ZDIPLEN *(unrel.) .* *15.514431" $log | wc -l`
TEST[4]=`expr   $CRIT4`
CTRL[4]=1
ERROR[4]="CC2-R12/A ZZ COMPONENT OF POLARIZABILITY NOT CORRECT"
CRIT5=`$GREP "XXSECMOM *(unrel.) .* *56.232170" $log | wc -l`
TEST[5]=`expr   $CRIT5`
CTRL[5]=1
ERROR[5]="CC2-R12/A XX-XX COMPONENT OF SECOND MOMENT OF CHARGE NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
