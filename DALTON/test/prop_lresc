#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > prop_lresc.info <<'%EOF%'
   prop_lresc
   -------------
   Molecule:         FH
   Wave Function:    HF
   Test Purpose:     LRESC correction to Fluorine Shielding constant
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > prop_lresc.mol <<'%EOF%'
INTGRL
Calculation of LRESC corrections to Fluorine atom on FH
Title line 2
Atomtypes=2 Generators=0     Integrals=1.00D-15 Angstroms 
Charge=9.0 Atoms=1 Blocks=3    1    1    1
F      0.00000  0.00000  0.00000
   10    0
5789645.000000
130088.0000000
19500.00000000
2923.00000000
664.50000000
60.62000000
21.42000000
2.25700000
0.30410000
0.09158000
    6    0
1184.760
394.920
43.8800000
9.9260000
0.9132000
0.0736100
    3    0
27.9630
3.1070000
0.8550000
Charge=1.0 Atoms=1 Blocks=2   1    1
H   0.000000   0.000000 1.732500786 
    6    0 
1496.0000000
225.0000000
33.8700000
1.1590000
0.1027000
0.0252600
    2    0 
1.4070000
0.1020000
FINISH
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > prop_lresc.dal <<'%EOF%'
**DALTON
.RUN PROPERTIES
!*MOLBAS
!.UNCONT
**INTEGRALS
.LRINTS
.GAUGEO
0.0000 0.0000 0.0000  
**WAVE FUNCTIONS
.HF
**PROPERTIES
.LRESC   
*LROPTS 
.PRTALL
!.PRINT
!2
.SELECT
1
**END OF DALTON INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >prop_lresc.check
cat >>prop_lresc.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "F * 1 * 9\.0000 * 43 * 43 * \[10s6p3d\|10s6p3d\]" $log | wc -l`
CRIT2=`$GREP "H * 1 * 1\.0000 * 12 * 12 * \[6s2p\|6s2p\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 10\.0000 * 55 * 55" $log | wc -l`
CRIT4=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=4
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z *  3\.2739519969 " $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7`
CTRL[2]=10
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

## Symmetry
##CRIT1=`$GREP "Number of coordinates in each symmetry\: * 3 * 3 * 2 * 1" $log | wc -l`
##CRIT2=`$GREP "Number of orbitals in each symmetry\: * 25 * 16 * 10 * 4" $log | wc -l`
##TEST[3]=`expr	$CRIT1 \+ $CRIT2`
##CTRL[3]=2
##ERROR[3]="SYMMETRY NOT CORRECT"

# Energies
CRIT1=`$GREP "Final HF energy \: * \-95\.783502842510" $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=3
ERROR[4]="ENERGIES NOT CORRECT"

# LRESC setup 
CRIT1=`$GREP "LRESC Corrections for Shielding"  $log | wc -l`
CRIT2=`$GREP "Selected Atom  \: \# 1\: F" $log | wc -l`
CRIT3=`$GREP "Atom coordinates\:"  $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[5]=2
ERROR[5]="LRESC SETUP NOT SET CORRECTLY"

# Paramagnetic Corrections
CRIT1=`$GREP "Lkin \:  * \ 0\.46314 * " $log | wc -l`
CRIT2=`$GREP "Anisotropic coupling * \: * \-13\.2904 Hz" $log | wc -l`
CRIT3=`$GREP "Asymmetry * \: * (0| )\.5682" $log | wc -l`
CRIT4=`$GREP "S parameter * \: * \-13\.9872 Hz" $log | wc -l`
CRIT5=`$GREP "A parameter * \: * (\-0|\-)\.0366 Hz" $log | wc -l`
CRIT6=`$GREP "Isotropic DSO contribution\: * (\-0|\-)\.0493 Hz" $log | wc -l`
CRIT7=`$GREP "Isotropic PSO contribution\: * \-10\.5390 Hz" $log | wc -l`
CRIT8=`$GREP "Isotropic SD contribution \: * (\-0|\-)\.2594 Hz" $log | wc -l`
CRIT9=`$GREP "Isotropic FC contribution \: * \-70\.5929 Hz" $log | wc -l`
CRIT10=`$GREP "Isotropic coupling * \: * \-12\.5016 Hz" $log | wc -l`
CRIT11=`$GREP "Anisotropic coupling * \: * \-2\.0402 Hz" $log | wc -l`
CRIT12=`$GREP "Asymmetry * \: * (0| )\.5682" $log | wc -l`
CRIT13=`$GREP "S parameter * \: * \-2\.1471 Hz" $log | wc -l`
CRIT14=`$GREP "A parameter * \: * (\-0|\-)\.0056 Hz" $log | wc -l`
CRIT15=`$GREP "Isotropic DSO contribution\: * (\-0|\-)\.0076 Hz" $log | wc -l`
CRIT16=`$GREP "Isotropic PSO contribution\: * \-1\.6178 Hz" $log | wc -l`
CRIT17=`$GREP "Isotropic SD contribution \: * (\-0|\-)\.0398 Hz" $log | wc -l`
CRIT18=`$GREP "Isotropic FC contribution \: * \-10\.8364 Hz" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18`
CTRL[6]=40
ERROR[6]="LRESC PARAMAGNETIC CORRECTIONS NOT CORRECT"

# H-H coupling
CRIT1=`$GREP "Isotropic coupling * \: * \-11\.9277 Hz" $log | wc -l`
CRIT2=`$GREP "Anisotropic coupling * \: * \-37\.8903 Hz" $log | wc -l`
CRIT3=`$GREP "Asymmetry * \: * (\-0|\-)\.0676" $log | wc -l`
CRIT4=`$GREP "S parameter * \: * 37\.9192 Hz" $log | wc -l`
CRIT5=`$GREP "A parameter * \: * 2\.5137 Hz" $log | wc -l`
CRIT6=`$GREP "Isotropic DSO contribution\: * \-6\.7673 Hz" $log | wc -l`
CRIT7=`$GREP "Isotropic PSO contribution\: * 7\.8265 Hz" $log | wc -l`
CRIT8=`$GREP "Isotropic SD contribution \: * (0| )\.9376 Hz" $log | wc -l`
CRIT9=`$GREP "Isotropic FC contribution \: * \-13\.9246 Hz" $log | wc -l`
CRIT10=`$GREP "Isotropic coupling * \: * \-1\.8310 Hz" $log | wc -l`
CRIT11=`$GREP "Anisotropic coupling * \: * \-5\.8164 Hz" $log | wc -l`
CRIT12=`$GREP "Asymmetry * \: * (\-0|\-)\.0676" $log | wc -l`
CRIT13=`$GREP "S parameter * \: * 5\.8208 Hz" $log | wc -l`
CRIT14=`$GREP "A parameter * \: * (0| )\.3859 Hz" $log | wc -l`
CRIT15=`$GREP "Isotropic DSO contribution\: * \-1\.0388 Hz" $log | wc -l`
CRIT16=`$GREP "Isotropic PSO contribution\: * 1\.2014 Hz" $log | wc -l`
CRIT17=`$GREP "Isotropic SD contribution \: * (0| )\.1439 Hz" $log | wc -l`
CRIT18=`$GREP "Isotropic FC contribution \: * \-2\.1375 Hz" $log | wc -l`
CRIT19=`$GREP "Isotropic coupling * \: * (\-0|\-)\.2811 Hz" $log | wc -l`
CRIT20=`$GREP "Anisotropic coupling * \: * (\-0|\-)\.8929 Hz" $log | wc -l`
CRIT21=`$GREP "Asymmetry * \: * (\-0|\-)\.0676" $log | wc -l`
CRIT22=`$GREP "S parameter * \: * (0| )\.8935 Hz" $log | wc -l`
CRIT23=`$GREP "A parameter * \: * (0| )\.0592 Hz" $log | wc -l`
CRIT24=`$GREP "Isotropic DSO contribution\: * (\-0|\-)\.1595 Hz" $log | wc -l`
CRIT25=`$GREP "Isotropic PSO contribution\: * (0| )\.1844 Hz" $log | wc -l`
CRIT26=`$GREP "Isotropic SD contribution \: * (0| )\.0221 Hz" $log | wc -l`
CRIT27=`$GREP "Isotropic FC contribution \: * (\-0|\-)\.3281 Hz" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27`
CTRL[7]=44
ERROR[7]="LRESC DIAMAGNETIC CORRECTIONS NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
