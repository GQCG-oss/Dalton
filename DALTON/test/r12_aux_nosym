#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > r12_aux_nosym.info <<'%EOF%'
   r12_aux_nosym
   -------------
   Molecule:         Methane (CH4)
   Wave Function:    MP2-R12 / 6-311G**
   Test Purpose:     Check R12 method with auxiliary basis but without symmetry
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > r12_aux_nosym.mol <<'%EOF%'
BASIS
6-311G** 6-311++G(3df,3pd)
Direct MP2-R12/B calculation without symmetry

    4    0        
 1      6.    1
C      1.090000000000000  -0.120000000000000   7.289010000000000       *
 1      1.    4
H      2.871530832048570   0.173652834453088   8.565741000000001       *
H     -0.691530832048569  -0.413652834453088   8.565741000000001       *
H      0.796347165546912   1.661530832048570   6.012279000000000       *
H      1.383652834453088  -1.901530832048569   6.012279000000000       *
 2      6.    1
C      1.090000000000000  -0.120000000000000   7.289010000000000       *
 2      1.    4
H      2.871530832048570   0.173652834453088   8.565741000000001       *
H     -0.691530832048569  -0.413652834453088   8.565741000000001       *
H      0.796347165546912   1.661530832048570   6.012279000000000       *
H      1.383652834453088  -1.901530832048569   6.012279000000000       *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > r12_aux_nosym.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
.DIRECT
**INTEGRALS
.R12
**WAVE FUNCTIONS
.CC
*SCF INPUT
.THRESHOLD
 1D-10
*CC INPUT
.MP2
.PRINT
 3
*ORBITALS
.MOSTART
 H1DIAG
**END OF DALTON INPUT
%EOF%

#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >r12_aux_nosym.check
cat >>r12_aux_nosym.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

#                       ! Original MP2-R12 method !
#             MP2-R12/A   correlation energy =   -0.276347821
#             MP2-R12/B   correlation energy =   -0.249692209
#                       ! Improved MP2-R12 method !
#             MP2-R12/A   correlation energy =   -0.252772048
#             MP2-R12/B   correlation energy =   -0.241231264
#
CRIT1=`$GREP "MP2-R12/B   correlation energy =   (-0| -)\.24123126" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="MP2-R12/B ENERGY NOT CORRECT"

PASSED=1
for i in 1 
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
