#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > pehf_fixsol_iter_1.info <<'%EOF%'
   pehf_fixsol_iter_1
   ----------------
   Molecule:         Acrolein, two classical water molecules and
                     FIXSOL solvation
   Wave Function:    PE-HF / STO-3G
   Test Purpose:     Test of PE library using FIXSOL with iterative
                     solver for induced moments.
%EOF%
#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > pehf_fixsol_iter_1.mol <<'%EOF%'
BASIS
STO-3G
Acrolein
------------------------
AtomTypes=3 NoSymmetry Angstrom
Charge=6.0 Atoms=3
C             -0.145335   -0.546770    0.000607
C              1.274009   -0.912471   -0.000167
C              1.630116   -2.207690   -0.000132
Charge=8.0 Atoms=1
O             -0.560104    0.608977    0.000534
Charge=1.0 Atoms=4
H             -0.871904   -1.386459    0.001253
H              2.004448   -0.101417   -0.000710
H              0.879028   -3.000685    0.000484
H              2.675323   -2.516779   -0.000673
%EOF%
#######################################################################
#  POTENTIAL INPUT
#######################################################################
cat > pehf_fixsol_iter_1.pot <<'%EOF%'
! Two water molecules modelled by a Polarizable Embedding potential
@COORDINATES
10
AA
O   -3.3285510  -0.1032300  -0.0004160
H   -2.5037950  0.4132210   0.0003390
H   -4.0392140  0.5467290   -0.0008500
X   -2.9161730  0.1549955   -0.0000385
X   -3.6838825  0.2217495   -0.0006330
O   1.7422970   2.3413610   -0.0007450
H   0.8416780   1.9718070   -0.0008200
H   1.6325590   3.2983010   0.0041540
X   1.2919875   2.1565840   -0.0007825
X   1.6874280   2.8198310   0.0017045
@MULTIPOLES
ORDER 0
6
1    -0.7423294438
2     0.3699305781
3     0.3723988657
6    -0.7424407021
7     0.3699635356
8     0.3724771666
ORDER 1
10
1        0.0303539300        0.3280749969        0.0000894127
2       -0.1005787187       -0.0557286568       -0.0000906399
3        0.0911510444       -0.0729658327        0.0000575297
4       -0.1154554696       -0.1098625035       -0.0001131928
5        0.0925537150       -0.1281941897        0.0000470915
6       -0.2840371815        0.1671869101        0.0013661730
7        0.1039146227        0.0490621032        0.0000401115
8        0.0058194611       -0.1165815150       -0.0005822607
9        0.1562106237        0.0289341838       -0.0001592549
10       0.0501665747       -0.1493857957       -0.0008283012
ORDER 2
10
1       -3.9516312016       -0.0561791973        0.0008348984       -4.5778807726        0.0000430036       -5.0206878337
2       -0.5774205281       -0.0533068952       -0.0000246837       -0.6043997755       -0.0000510833       -0.5595888419
3       -0.5583105371        0.0466697048        0.0000093367       -0.6224134008        0.0000240992       -0.5582982578
4        0.6931173508        0.3993825482        0.0004427892        0.4811735442        0.0003651060        0.2335453026
5        0.5497923459       -0.4072157699        0.0001632249        0.6322989679       -0.0002450231        0.2419436597
6       -4.4188113058        0.2801417448        0.0002126277       -4.1129942280        0.0039064597       -5.0206529493
7       -0.6455428297       -0.0041180935        0.0001453595       -0.5362599824        0.0001224056       -0.5596286658
8       -0.5562677027        0.0450154899        0.0002165578       -0.6244100291       -0.0004104801       -0.5583164804
9        0.9309922644        0.2280573432       -0.0002276453        0.2429875998       -0.0003906527        0.2330344430
10       0.2176177849       -0.1663997493       -0.0007688598        0.9642929866        0.0038606681        0.2416297737
@POLARIZABILITIES
ORDER 1 1
10
1        1.5931619660        0.0800886126       -0.0012113893        2.5255643422        0.0013486011        3.3670040387
2        0.7929865198        0.1542303414        0.0001503753        0.6015087761        0.0002890322        0.5925152779
3        0.7209493065       -0.1783490996        0.0000586528        0.6420261847        0.0000623389        0.5751449171
4        3.4974039172        2.1355046659        0.0022286584        1.8455550714        0.0014941130        1.4124398311
5        2.6916145417       -2.2463816416        0.0003377505        2.5542051973       -0.0013254304        1.4293331897
6        2.2823444229       -0.4207398269       -0.0006457588        1.8324399300       -0.0069062619        3.3666855109
7        0.8132771942        0.1387943320        0.0004103386        0.5814638105       -0.0000004496        0.5927954021
8        0.4993246061       -0.0196042351        0.0000571000        0.8612729797        0.0020132268        0.5750737753
9        4.2946372081        1.2694080541        0.0004092117        1.0566337570       -0.0044943748        1.4133256363
10       0.6174280837       -0.4402546796       -0.0002937434        4.6220075983        0.0174865911        1.4307100148
EXCLISTS
10 5
1 2 3 4 5
2 1 3 4 5
3 1 2 4 5
4 1 2 3 5
5 1 2 3 4
6 7 8 9 10
7 6 8 9 10
8 6 7 9 10
9 6 7 8 10
10 6 7 8 9
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > pehf_fixsol_iter_1.dal <<'%EOF%'
**DALTON
.RUN WAVE FUNCTION
.PEQM
*PEQM
.VERBOSE
.SOLVAT
.FIXSOL
.DIIS
**WAVE FUNCTIONS
.HF
**END OF
%EOF%
#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > pehf_fixsol_iter_1.check
cat >> pehf_fixsol_iter_1.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

#
# Energy tests
#
 CRIT1=`$GREP "Monopoles * \-0*\.015153......" $log | wc -l`
 CRIT2=`$GREP "Dipoles * 0*\.004164......" $log | wc -l`
 CRIT3=`$GREP "Quadrupoles  * \-0*\.004953......" $log | wc -l`
 CRIT4=`$GREP "Electronic * \-0*\.06698[56]......" $log | wc -l`
 CRIT5=`$GREP "Nuclear * 0*\.06653[56]......" $log | wc -l`
 CRIT6=`$GREP "Multipole * 0*\.000058......" $log | wc -l`
 CRIT7=`$GREP "Electronic * 0*\.0074(69|70)......" $log | wc -l`
 CRIT8=`$GREP "Nuclear * \-0*\.00815[45]......" $log | wc -l`
 CRIT9=`$GREP "Multipole * \-0*\.013387......" $log | wc -l`
CRIT10=`$GREP "Total PE energy\: * \-0*\.030406......" $log | wc -l`
CRIT11=`$GREP "Final HF energy\: * \-188\.3286376....." $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11`
CTRL[1]=11
ERROR[1]="PE-HF ENERGY CONTRIBUTIONS NOT CORRECT"

#
# Induced dipole moments in environment
#
 CRIT1=`$GREP " 1 * 0*\.007571.. * \-0*\.019395.. * (|-0)\.000058.." $log | wc -l`
 CRIT2=`$GREP " 2 * 0*\.01207[34].. * 0*\.001556.. * 0*\.000027.." $log | wc -l`
 CRIT3=`$GREP " 3 * 0*\.010251.. * \-0*\.010292.. * (|-0)\.000045.." $log | wc -l`
 CRIT4=`$GREP " 4 * 0*\.01531[78].. * 0*\.006692.. * 0*\.000029.." $log | wc -l`
 CRIT5=`$GREP " 5 * 0*\.04812[23].. * \-0*\.047741.. * \-0*\.000047.." $log | wc -l`
 CRIT6=`$GREP " 6 * 0*\.007106.. * \-0*\.015187.. * \-0*\.000168.." $log | wc -l`
 CRIT7=`$GREP " 7 * \-0*\.0102(79|80).. * \-0*\.009265.. * \-0*\.000085.." $log | wc -l`
 CRIT8=`$GREP " 8 * 0*\.001885.. * \-0*\.014142.. * \-0*\.000040.." $log | wc -l`
 CRIT9=`$GREP " 9 * \-0*\.02133[23].. * \-0*\.012088.. * \-0*\.000114.." $log | wc -l`
CRIT10=`$GREP "10 * 0*\.007492.. * \-0*\.061790.. * \-0*\.000274.." $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[2]=10
ERROR[2]="INDUCED DIPOLE MOMENTS NOT CORRECT"

PASSED=1
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi
%EOF%
#######################################################################
