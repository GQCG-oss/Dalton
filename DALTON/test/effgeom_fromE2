#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > effgeom_fromE2.info <<'%EOF%'
   effgeom_fromE2
   --------------
   Molecule:         CO
   Wave Function:    SCF / STO-3G
   Test Purpose:     Effective geometry from energies using normal
                     coordinates
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > effgeom_fromE2.mol <<'%EOF%'
BASIS
STO-3G
CO

Atomtypes=2
Atoms=1 Charge=6.0
C          0.0000000000            0.0000000000           -1.0823225614
Charge=8.0 Atoms=1
O          0.0000000000            0.0000000000            1.0823225614
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > effgeom_fromE2.dal <<'%EOF%'
**DALTON INPUT
.NMDDRV
**NMDDRV
.DORDR
  3  0
.SYMMETRY
  C9v
.NORMAL 
.VIBANA
*PROPAV
.EFFECTIVE GEOMETRY
**WAVE FUNCTIONS
.HF
*SCF INP
.THRESH
 1.0D-12
**END OF DALTON INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >effgeom_fromE2.check
cat >>effgeom_fromE2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Starting geometry and energy
CRIT1=`$GREP "bond distance\: * O * C * 1\.145481" $log | wc -l`
CRIT2=`$GREP "Final * HF energy\: * \-111\.22544951413[67]" $log | wc -l`
CRIT3=`$GREP "Nuclear repulsion\: * 22\.174535444365" $log | wc -l`
CRIT4=`$GREP "Electronic energy\: * \-133\.39998495850[12]" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=20
ERROR[1]="STARTING GEOMETRY/ENERGY NOT CORRECT"

# Symmetry input.
CRIT1=`$GREP "1\. irep\:" $log | wc -l`
CRIT2=`$GREP "1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00" $log | wc -l`
CRIT3=`$GREP "2\. irep\:" $log | wc -l`
CRIT4=`$GREP "1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 * 1\.00 \-1\.00 \-1\.00 \-1\.00 \-1\.00 \-1\.00 \-1\.00 \-1\.00 \-1\.00 \-1\.00" $log | wc -l`
CRIT5=`$GREP "3\. irep\:" $log | wc -l`
CRIT6=`$GREP "1\.00 * (0| )\.77 * (0| )\.17 (\-0| \-)\.50 (\-0| \-)\.94 (\-0| \-)\.94 (\-0| \-)\.50 * (0| )\.17 * (0| )\.77 * 1\.00 * (0| )\.77 * (0| )\.17 (\-0| \-)\.50 (\-0| \-)\.94 (\-0| \-)\.94 (\-0| \-)\.50 * (0| )\.17 * (0| )\.77" $log | wc -l`
CRIT7=`$GREP "(0| )\.00 * (0| )\.64 * (0| )\.98 * (0| )\.87 * (0| )\.34 (\-0| \-)\.34 (\-0| \-)\.87 (\-0| \-)\.98 (\-0| \-)\.64 * (0| )\.00 * (0| )\.64 * (0| )\.98 * (0| )\.87 * (0| )\.34 (\-0| \-)\.34 (\-0| \-)\.87 (\-0| \-)\.98 (\-0| \-)\.64" $log | wc -l`
CRIT8=`$GREP "(0| )\.00 (\-0| \-)\.64 (\-0| \-)\.98 (\-0| \-)\.87 (\-0| \-)\.34 * (0| )\.34 * (0| )\.87 * (0| )\.98 * (0| )\.64 * (0| )\.00 * (0| )\.64 * (0| )\.98 * (0| )\.87 * (0| )\.34 (\-0| \-)\.34 (\-0| \-)\.87 (\-0| \-)\.98 (\-0| \-)\.64" $log | wc -l`
CRIT9=`$GREP "1\.00 * (0| )\.77 * (0| )\.17 (\-0| \-)\.50 (\-0| \-)\.94 (\-0| \-)\.94 (\-0| \-)\.50 * (0| )\.17 * (0| )\.77 \-1\.00 (\-0| \-)\.77 (\-0| \-)\.17 * (0| )\.50 * (0| )\.94 * (0| )\.94 * (0| )\.50 (\-0| \-)\.17 (\-0| \-)\.77" $log | wc -l`
CRIT10=`$GREP "4\. irep\:" $log | wc -l`
CRIT11=`$GREP "1\.00 * (0| )\.17 (\-0| \-)\.94 (\-0| \-)\.50 * (0| )\.77 * (0| )\.77 (\-0| \-)\.50 (\-0| \-)\.94 * (0| )\.17 * 1\.00 * (0| )\.17 (\-0| \-)\.94 (\-0| \-)\.50 * (0| )\.77 * (0| )\.77 (\-0| \-)\.50 (\-0| \-)\.94 * (0| )\.17" $log | wc -l`
CRIT12=`$GREP "(0| )\.00 * (0| )\.98 * (0| )\.34 (\-0| \-)\.87 (\-0| \-)\.64 * (0| )\.64 * (0| )\.87 (\-0| \-)\.34 (\-0| \-)\.98 * (0| )\.00 * (0| )\.98 * (0| )\.34 (\-0| \-)\.87 (\-0| \-)\.64 * (0| )\.64 * (0| )\.87 (\-0| \-)\.34 (\-0| \-)\.98" $log | wc -l`
CRIT13=`$GREP "(0| )\.00 (\-0| \-)\.98 (\-0| \-)\.34 * (0| )\.87 * (0| )\.64 (\-0| \-)\.64 (\-0| \-)\.87 * (0| )\.34 * (0| )\.98 * (0| )\.00 * (0| )\.98 * (0| )\.34 (\-0| \-)\.87 (\-0| \-)\.64 * (0| )\.64 * (0| )\.87 (\-0| \-)\.34 (\-0| \-)\.98" $log | wc -l`
CRIT14=`$GREP "1\.00 * (0| )\.17 (\-0| \-)\.94 (\-0| \-)\.50 * (0| )\.77 * (0| )\.77 (\-0| \-)\.50 (\-0| \-)\.94 * (0| )\.17 \-1\.00 (\-0| \-)\.17 * (0| )\.94 * (0| )\.50 (\-0| \-)\.77 (\-0| \-)\.77 * (0| )\.50 * (0| )\.94 (\-0| \-)\.17" $log | wc -l`
CRIT15=`$GREP "5\. irep\:" $log | wc -l`
CRIT16=`$GREP "1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50" $log | wc -l`
CRIT17=`$GREP "(\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87" $log | wc -l`
CRIT18=`$GREP "(\-0|0|\-| )\.00 (\-0| \-)\.87 * (0| )\.87 * (\-0|0|\-| )\.00 (\-0| \-)\.87 * (0| )\.87 * (\-0|0|\-| )\.00 (\-0| \-)\.87 * (0| )\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87 * (\-0|0|\-| )\.00 * (0| )\.87 (\-0| \-)\.87" $log | wc -l`
CRIT19=`$GREP "1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50 * 1\.00 (\-0| \-)\.50 (\-0| \-)\.50 \-1\.00 * (0| )\.50 * (0| )\.50 \-1\.00 * (0| )\.50 * (0| )\.50 \-1\.00 * (0| )\.50 * (0| )\.50" $log | wc -l`
CRIT20=`$GREP "6\. irep\:" $log | wc -l`
CRIT21=`$GREP "1\.00 (\-0| \-)\.94 * (0| )\.77 (\-0| \-)\.50 * (0| )\.17 * (0| )\.17 (\-0| \-)\.50 * (0| )\.77 (\-0| \-)\.94 * 1\.00 (\-0| \-)\.94 * (0| )\.77 (\-0| \-)\.50 * (0| )\.17 * (0| )\.17 (\-0| \-)\.50 * (0| )\.77 (\-0| \-)\.94" $log | wc -l`
CRIT22=`$GREP "(0| )\.00 * (0| )\.34 (\-0| \-)\.64 * (0| )\.87 (\-0| \-)\.98 * (0| )\.98 (\-0| \-)\.87 * (0| )\.64 (\-0| \-)\.34 * (0| )\.00 * (0| )\.34 (\-0| \-)\.64 * (0| )\.87 (\-0| \-)\.98 * (0| )\.98 (\-0| \-)\.87 * (0| )\.64 (\-0| \-)\.34" $log | wc -l`
CRIT23=`$GREP "(0| )\.00 (\-0| \-)\.34 * (0| )\.64 (\-0| \-)\.87 * (0| )\.98 (\-0| \-)\.98 * (0| )\.87 (\-0| \-)\.64 * (0| )\.34 * (0| )\.00 * (0| )\.34 (\-0| \-)\.64 * (0| )\.87 (\-0| \-)\.98 * (0| )\.98 (\-0| \-)\.87 * (0| )\.64 (\-0| \-)\.34" $log | wc -l`
CRIT24=`$GREP "1\.00 (\-0| \-)\.94 * (0| )\.77 (\-0| \-)\.50 * (0| )\.17 * (0| )\.17 (\-0| \-)\.50 * (0| )\.77 (\-0| \-)\.94 \-1\.00 * (0| )\.94 (\-0| \-)\.77 * (0| )\.50 (\-0| \-)\.17 (\-0| \-)\.17 * (0| )\.50 (\-0| \-)\.77 * (0| )\.94" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24`
CTRL[2]=30
ERROR[2]="SYMMETRY INPUT NOT CORRECT"

# Hessian and harm. frequencies.
CRIT1=`$GREP "1/ *1 * 1\.573[0-9][0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "1/ *2 * \-1\.574[0-9][0-9][0-9] * 1\.573[0-9][0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "3/ *3 * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9]" $log | wc -l`
CRIT4=`$GREP "3/ *4 * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (\-0| \-)\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9]" $log | wc -l`
CRIT5=`$GREP "3/ *5 * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9]" $log | wc -l`
CRIT6=`$GREP "3/ *6 * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9] * (\-0| \-)\.000[0-9][0-9][0-9] * (0| )\.000[0-9][0-9][0-9]" $log | wc -l`
CRIT7=`$GREP "1 * 2463\.[0-9][0-9] * (0| )\.0112[0-9][0-9]" $log | wc -l`
CRIT8=`$GREP "(0| )\.7998986" $log | wc -l`
CRIT9=`$GREP "(\-0| \-)\.6001352" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9`
CTRL[3]=9
ERROR[3]="HESSIAN/FREQ NOT CORRECT"

# Qubic force field, eff. geometry
CRIT1=`$GREP "1 * 3\.085[0-9][0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "14\.327[0-9][0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "Number of energy * calculations done\: * 18" $log | wc -l`
CRIT4=`$GREP "C * 0*\.0000000* * 0*\.0000000* * \-0*\.00337" $log | wc -l`
CRIT5=`$GREP "O * 0*\.0000000* * 0*\.0000000* *   0*\.00253" $log | wc -l`
CRIT6=`$GREP "C * 0*\.0000000* * 0*\.0000000* *  \-1\.24014" $log | wc -l`
CRIT7=`$GREP "O * 0*\.0000000* * 0*\.0000000* *   0*\.93040" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7`
CTRL[4]=7
ERROR[4]="EFFECTIVE GEOMETRY NOT CORRECT"

PASSED=1
for i in 1 2 3 4 
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
