#!/bin/ksh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

# Integral setup
CRIT1=`$GREP "Calculation of one\- and two\-electron Hamiltonian integrals\." $log | wc -l`
CRIT1b=`$GREP "Calculation of one\-electron Hamiltonian integrals\." $log | wc -l`
CRIT2=`$GREP "The following one\-electron property integrals are calculated" $log | wc -l`
CRIT3=`$GREP "\- overlap integrals" $log | wc -l`
CRIT4=`$GREP "\- Fermi contact integrals" $log | wc -l`
CRIT5=`$GREP "\(Dirac delta function integrals\)" $log | wc -l`
CRIT6=`$GREP "\- spin\-dipole integrals" $log | wc -l`
CRIT7=`$GREP "\(electron spin \- nuclear moment coupling\)" $log | wc -l`
CRIT8=`$GREP "two-electron integrals are transformed to P-supermatrix elements" $log | wc -l`
CRIT8b=`$GREP "Fock matrices are calculated directly and in parallel without use of integrals on disk" $log |wc -l`
CRIT9=`$GREP "Integrals for all indirect spin\-spin coupling and/or shielding tensors are calculated\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT1b \+ $CRIT8b`
CTRL[1]=9
ERROR[1]="INTEGRAL SETUP NOT CORRECT"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 6 * 3" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 50 * 24" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2`
CTRL[2]=2
ERROR[2]="SYMMETRY NOT CORRECT"

# Energy
CRIT1=`$GREP "Final MCSCF energy\: * \-90\.2755499943[0-9][0-9]" $log | wc -l`
TEST[3]=`expr	$CRIT1`
CTRL[3]=1
ERROR[3]="ENERGY NOT CORRECT"

# ESR parameters
CRIT1=`$GREP "TRIPLET OPERATOR\: \"FC Be 01\" LAGRANGIAN\: * (0| )\.571695 AVERAGE\: * 2\.805693 TOTAL\: * 3\.37738." $log | wc -l`
CRIT2=`$GREP "TRIPLET OPERATOR\: \"FC O * 02\" LAGRANGIAN\: (\-0| \-)\.00802[0-9] AVERAGE\: * (0| )\.5528(8|9). TOTAL\: * (0| )\.5448(6|7)[0-9]" $log | wc -l`
CRIT3=`$GREP "TRIPLET OPERATOR\: \"FC H * 03\" LAGRANGIAN\: * (0| )\.003256 AVERAGE\: * (0| )\.008743 TOTAL\: * (0| )\.011999" $log | wc -l`
CRIT4=`$GREP "TRIPLET OPERATOR\: \"SD * 001 z\" LAGRANGIAN\: * (0| )\.002178 AVERAGE\: (\-0| \-)\.043424 TOTAL\: (\-0| \-)\.041246" $log | wc -l`
CRIT5=`$GREP "TRIPLET OPERATOR\: \"SD * 002 z\" LAGRANGIAN\: (\-0| \-)\.019432 AVERAGE\: (\-0| \-)\.04419. TOTAL\: (\-0| \-)\.06362." $log | wc -l`
CRIT6=`$GREP "TRIPLET OPERATOR\: \"SD * 003 z\" LAGRANGIAN\: * (0| )\.001676 AVERAGE\: (\-0| \-)\.003111 TOTAL\: (\-0| \-)\.001434" $log | wc -l`
CRIT7=`$GREP "TRIPLET OPERATOR\: \"SD * 004 x\" LAGRANGIAN\: (\-0| \-)\.004355 AVERAGE\: * (0| )\.086848 TOTAL\: * (0| )\.082493" $log | wc -l`
CRIT8=`$GREP "TRIPLET OPERATOR\: \"SD * 004 y\" LAGRANGIAN\: (\-0| \-)\.000012 AVERAGE\: (\-0| \-)\.000118 TOTAL\: (\-0| \-)\.000130" $log | wc -l`
CRIT9=`$GREP "TRIPLET OPERATOR\: \"SD * 005 x\" LAGRANGIAN\: (\-0| \-)\.000012 AVERAGE\: (\-0| \-)\.000118 TOTAL\: (\-0| \-)\.000130" $log | wc -l`
CRIT10=`$GREP "TRIPLET OPERATOR\: \"SD * 005 y\" LAGRANGIAN\: * (0| )\.002178 AVERAGE\: (\-0| \-)\.043424 TOTAL\: (\-0| \-)\.041246" $log | wc -l`
CRIT11=`$GREP "TRIPLET OPERATOR\: \"SD * 006 x\" LAGRANGIAN\: * (0| )\.03885(8|9) AVERAGE\: * (0| )\.08837(6|7) TOTAL\: * (0| )\.12723." $log | wc -l`
CRIT12=`$GREP "TRIPLET OPERATOR\: \"SD * 006 y\" LAGRANGIAN\: (\-0| \-)\.000332 AVERAGE\: (\-0| \-)\.0000(79|80) TOTAL\: (\-0| \-)\.000411" $log | wc -l`
CRIT13=`$GREP "TRIPLET OPERATOR\: \"SD * 007 x\" LAGRANGIAN\: (\-0| \-)\.000332 AVERAGE\: (\-0| \-)\.0000(79|80) TOTAL\: (\-0| \-)\.000411" $log | wc -l`
CRIT14=`$GREP "TRIPLET OPERATOR\: \"SD * 007 y\" LAGRANGIAN\: (\-0| \-)\.01942(6|7) AVERAGE\: (\-0| \-)\.044185 TOTAL\: (\-0| \-)\.063612" $log | wc -l`
CRIT15=`$GREP "TRIPLET OPERATOR\: \"SD * 008 x\" LAGRANGIAN\: (\-0| \-)\.003353 AVERAGE\: * (0| )\.006221 TOTAL\: * (0| )\.00286(8|9)" $log | wc -l`
CRIT16=`$GREP "TRIPLET OPERATOR\: \"SD * 008 y\" LAGRANGIAN\: * (0| )\.000036 AVERAGE\: (\-0| \-)\.000005 TOTAL\: * (0| )\.000030" $log | wc -l`
CRIT17=`$GREP "TRIPLET OPERATOR\: \"SD * 009 x\" LAGRANGIAN\: * (0| )\.000036 AVERAGE\: (\-0| \-)\.000005 TOTAL\: * (0| )\.000030" $log | wc -l`
CRIT18=`$GREP "TRIPLET OPERATOR\: \"SD * 009 y\" LAGRANGIAN\: * (0| )\.001676 AVERAGE\: (\-0| \-)\.003111 TOTAL\: (\-0| \-)\.001434" $log | wc -l`
CRIT19=`$GREP "TRIPLET OPERATOR\: \"SD * 001 x\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT20=`$GREP "TRIPLET OPERATOR\: \"SD * 001 y\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT21=`$GREP "TRIPLET OPERATOR\: \"SD * 002 x\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT22=`$GREP "TRIPLET OPERATOR\: \"SD * 002 y\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT23=`$GREP "TRIPLET OPERATOR\: \"SD * 003 x\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT24=`$GREP "TRIPLET OPERATOR\: \"SD * 003 y\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT25=`$GREP "TRIPLET OPERATOR\: \"SD * 004 z\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT26=`$GREP "TRIPLET OPERATOR\: \"SD * 005 z\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT27=`$GREP "TRIPLET OPERATOR\: \"SD * 006 z\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT28=`$GREP "TRIPLET OPERATOR\: \"SD * 007 z\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT29=`$GREP "TRIPLET OPERATOR\: \"SD * 008 z\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
CRIT30=`$GREP "TRIPLET OPERATOR\: \"SD * 009 z\" contribution \= (0| )\.0 by symmetry" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27 \+ $CRIT28 \+ $CRIT29 \+ $CRIT30`
CTRL[4]=30
ERROR[4]="ESR PARAMETERS NOT CORRECT"

PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

