#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > dftmm_5.info <<'%EOF%'
   dftmm_5
   -----------
   Molecule:         CH2O(DFT)/2 H2O(MM)
   Wave Function:    B3LYP / STO-3G  
   Test Purpose:     Test of DFT/MM first hyperpolarizability 
%EOF%
#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > dftmm_5.mol <<'%EOF%'
ATOMBASIS
CH2O PLUS 2 WATERS
------------------------
    5    0         1 1.00D-12
        6.0   1    Basis=STO-3G
C           -1.588367    -.770650     .029109 0 1
        8.0   1    Basis=STO-3G
O           -1.657083     .436069    -.009750 0 2
        1.0   2    Basis=STO-3G
H           -.620668   -1.294822      .054251 0 3
H           -2.508043   -1.382001     .040282 0 4
   -0.669     2   Basis=MM
O             .975536    1.507219    -.082590 1 1
O            1.633705   -1.233280    -.078786 2 1
    0.3345    4   Basis=MM
H             .023200    1.300096    -.088063 1 2
H            1.113831    2.040431     .704778 1 3
H            1.600739    -.258639    -.086953 2 2
H            2.303878   -1.461228     .570065 2 3
%EOF%
#######################################################################
#  QM/MM INTERACTION INPUT
#######################################################################
cat > dftmm_5.pot <<'%EOF%'
**SYSTP
.NUMMTP
 1
.TYPE
 0
.MODEL
 SPC
.CHARGS
 4
 0.0000
 0.0000
 0.0000
 0.0000
*******
.TYPE
 1-2
.MODEL
 SPC_E01
.ALPISO
 1
 9.501
*******
**TWOIA (i,j=0,1,2,...,N; if i=0 then j.neq.0)
.LJ_A
 2
 0.00000
 0.00000
.LJ_B
 2
 0.000
 0.000
**END OF
%EOF%
#
#######################################################################
#  DALTON INPUT
#######################################################################
cat > dftmm_5.dal <<'%EOF%'
**DALTON
.RUN RESPONSE
*QM3
.PRINT
 1
.QM3
.THRDIP
 1.0D-12
.MAXDIP
 180
**INTEGRALS
.DIPLEN
.NUCPOT
.NELFLD
.PRINT
 2
**WAVE FUNCTIONS
.DFT
B3LYP
*SCF INPUT
.THRESH
1.0D-12
**RESPONSE
*QUADRATIC
.DIPLEN
.SHG
.FREQUE
 1
 0.040
.THCLR
1.0D-9
**END OF DALTON INPUT
%EOF%
#
#######################################################################
#  CHECK SCRIPT
#######################################################################
#
echo $CHECK_SHELL >dftmm_5.check
cat >>dftmm_5.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi
#
# Test of first hyperpolarizability
#

 CRIT1=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;X\,X\) \=   *  \-1\.16564[0-9][0-9][0-9]" $log | wc -l`
 CRIT2=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;X\,X\) \=   *   6\.67002[0-9][0-9][0-9]" $log | wc -l`
 CRIT3=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;X\,X\) \=   *   ( \-|\-0)\.27992[0-9][0-9][0-9]" $log | wc -l`
 CRIT4=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Y\,X\) \=   *   6\.78192[0-9][0-9][0-9]" $log | wc -l`
 CRIT5=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Y\,X\) \=   *   ( |0)\.30935[0-9][0-9][0-9]" $log | wc -l`
 CRIT6=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Y\,X\) \=   *   ( |0)\.05758[0-9][0-9][0-9]" $log | wc -l`
 CRIT7=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Z\,X\) \=   *   ( \-|\-0)\.28959[0-9][0-9][0-9]" $log | wc -l`
 CRIT8=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Z\,X\) \=   *   ( |0)\.05795[0-9][0-9][0-9]" $log | wc -l`
 CRIT9=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Z\,X\) \=   *   ( \-|\-0)\.05646[0-9][0-9][0-9]" $log | wc -l`
CRIT10=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;X\,Y\) \= beta\(X\,Y\,X\)" $log | wc -l`
CRIT11=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;X\,Y\) \= beta\(Y\,Y\,X\)" $log | wc -l`
CRIT12=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;X\,Y\) \= beta\(Z\,Y\,X\)" $log | wc -l`
CRIT13=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Y\,Y\) \=    *  ( |0)\.31558[0-9][0-9][0-9]" $log | wc -l`
CRIT14=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Y\,Y\) \=    *  3\.82717[0-9][0-9][0-9]" $log | wc -l`
CRIT15=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Y\,Y\) \=    *  ( \-|\-0)\.13767[0-9][0-9][0-9]" $log | wc -l`
CRIT16=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Z\,Y\) \=    *  ( |0)\.05790[0-9][0-9][0-9]" $log | wc -l`
CRIT17=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Z\,Y\) \=    *  ( \-|\-0)\.14096[0-9][0-9][0-9]" $log | wc -l`
CRIT18=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Z\,Y\) \=    *  ( |0)\.42301[0-9][0-9][0-9]" $log | wc -l`
CRIT19=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;X\,Z\) \= beta\(X\,Z\,X\)" $log | wc -l`
CRIT20=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;X\,Z\) \= beta\(Y\,Z\,X\)" $log | wc -l`
CRIT21=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;X\,Z\) \= beta\(Z\,Z\,X\)" $log | wc -l`
CRIT22=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Y\,Z\) \= beta\(X\,Z\,Y\)" $log | wc -l`
CRIT23=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Y\,Z\) \= beta\(Y\,Z\,Y\)" $log | wc -l`
CRIT24=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Y\,Z\) \= beta\(Z\,Z\,Y\)" $log | wc -l`
CRIT25=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Z\,Z\) \=     * ( \-|\-0)\.03674[0-9][0-9][0-9]" $log | wc -l`
CRIT26=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Z\,Z\) \=     * ( |0)\.34328[0-9][0-9][0-9]" $log | wc -l`
CRIT27=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Z\,Z\) \=     * ( \-|\-0)\.00417[0-9][0-9][0-9]" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ $CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ $CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ $CRIT25 \+ $CRIT26 \+ $CRIT27 `
CTRL[1]=27
ERROR[1]="DFT/MM FIRST HYPERPOLARIZABILITY NOT CORRECT"

PASSED=1 
for i in 1 
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%
chmod +x dftmm_5.check
#######################################################################
