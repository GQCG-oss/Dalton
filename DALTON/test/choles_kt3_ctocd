#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > choles_kt3_ctocd.info << '%EOF%'
   choles_kt3_ctocd
    ---------------
   Molecule:         HCP
   Wave Function:    KT3 / Turbomole-TZP
   Test Purpose:     Cholesky KT3 energy and CTOCD shieldings
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > choles_kt3_ctocd.mol << '%EOF%'
BASIS
Turbomole-TZP
HCP Turbomole-TZP
......
    3  0           a  0.10E-14
        6.    1
C         0.0000000        0.00000000         0.000000
        1.    1
H         0.0000000        0.00000000        -1.0686323668
       15.    1
P         0.0000000        0.00000000         1.5421482850
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > choles_kt3_ctocd.dal << '%EOF%'
**DALTON INPUT
.RUN PROPERTIES
.CHOLES
**CHOLES
.REDUCE
.SPANDI
  1.0d-3
!.RSTDIA
!.RSTCHO
.THRCOM
 1.0D-8
**WAVE FUNCTIONS
.DFT
 KT3
**PROPERTIES
.CTOCD
.SHIELD
**END OF DALTON INPUT
%EOF%

#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > choles_kt3_ctocd.check
cat >> choles_kt3_ctocd.check << '%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

# KT3 energy
CRIT1=`$GREP "Final * DFT energy: * -383\.2383416" $log | wc -l`
TEST[1]=$CRIT1
CTRL[1]=1
ERROR[1]="KT3 ENERGY NOT CORRECT"

# Dipole moment
CRIT1=`$GREP  " \-0*\.1713.." $log | wc -l`
TEST[2]=$CRIT1
CTRL[2]=1
ERROR[2]="DIPOLE MOMENT NOT CORRECT"

# Shieldings
CRIT1=`$GREP "Shielding constant\: * \-134\.133. ppm" $log | wc -l`
CRIT2=`$GREP "Anisotropy\: * 346\.735. ppm" $log | wc -l`
CRIT3=`$GREP "Asymmetry\: * (0| )\.000." $log | wc -l`

CRIT4=`$GREP "Shielding constant\: * 23\.811. ppm" $log | wc -l`
CRIT5=`$GREP "Anisotropy\: * 9\.478. ppm" $log | wc -l`
CRIT6=`$GREP "Asymmetry\: * (0| )\.000." $log | wc -l`

CRIT7=`$GREP "Shielding constant\: * \-411\.865. ppm" $log | wc -l`
CRIT8=`$GREP "Anisotropy\: * 882\.196. ppm" $log | wc -l`
CRIT9=`$GREP "Asymmetry\: * (0| )\.000." $log | wc -l`

TEST[3]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ $CRIT6  \
           \+ $CRIT7  \+ $CRIT8  \+ $CRIT9`

CTRL[3]=39
ERROR[3]="SHILEDINGS NOT CORRECT"


PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
