#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi

#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > gen1int_water_cart.info <<'%EOF%'
   gen1int_water_cart
   -------------
   Molecule:         H2O
   Test Purpose:     Check Gen1int module using water molecule, Cartesian
                     basis sets, and without symmetry
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > gen1int_water_cart.mol <<'%EOF%'
ATOMBASIS
test GEN1INT using water molecule, Cartesian basis sets, without symmetry
you may test f, g, h,i orbitals using cc-pVTZ, cc-pVQZ, cc-pV5Z, cc-pV6Z
Atomtypes=2  Charge=0  Nosymmetry  Cartesian
Charge=8.0  Atoms=1  Basis=cc-pV6Z
O1         0.000000000           -0.224905893            0.000000000
Charge=1.0  Atoms=2  Basis=cc-pV6Z
H1         1.452350000            0.899623000            0.000000000
H2        -1.452350000            0.899623000            0.000000000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > gen1int_water_cart.dal <<'%EOF%'
**DALTON INPUT
.INTEGRALS
.DIRECT
**INTEGRAL
.GENINT
*END OF
**END OF INPUT
%EOF%

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >gen1int_water_cart.check
cat >>gen1int_water_cart.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# gets the number of failed Gen1Int tests
NUM_FAILED=`$GREP "Gen1Int failed" $log | wc -l`

if [ $NUM_FAILED -eq 0 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi
%EOF%
