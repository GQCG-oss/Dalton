#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > energy_stex.info <<'%EOF%'
   energy_stex
   --------------
   Molecule:         H2O
   Wave Functions:   HF/CCATZ
   Test Purpose:     Three-step STEX calculation
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > energy_stex.mol <<'%EOF%'
INTGRL
base CCATZ (gaussiane sferiche)  , nessuna simmetria

    2    0
        6.    1    3    1    1    1
C      0.0000 0.0000 0.00000
F  11    5    0
8236.      0.000531   -0.000113   0.000000   0.000000  0.0
1235.      0.004108   -0.000878   0.000000   0.000000  0.0
280.8      0.021087   -0.004540   0.000000   0.000000  0.0
79.27      0.081853   -0.018133   0.000000   0.000000  0.0
25.59      0.234817   -0.055760   0.000000   0.000000  0.0
8.997      0.434401   -0.126895   0.000000   0.000000  0.0
3.319      0.346129   -0.170352   0.000000   0.000000  0.0
0.9059     0.039378    0.140382   1.000000   0.000000  0.0
0.3643    -0.008983    0.598684   0.000000   0.000000  0.0
0.1285     0.002385    0.395389   0.000000   1.000000  0.0
0.04402    0.000000    0.000000   0.000000   0.000000  1.0
F   6    4    0
18.71      0.014031    0.000000   0.000000  0.0
4.133      0.086866    0.000000   0.000000  0.0
1.200      0.290216    0.000000   0.000000  0.0
0.3827     0.501008    1.000000   0.000000  0.0
0.1209     0.343406    0.000000   1.000000  0.0
0.03569    0.000000    0.000000   0.000000  1.0
F   3    3    0
1.097      1.000000    0.000000  0.0
0.318      0.000000    1.000000  0.0
0.100      0.000000    0.000000  1.0
        8.    1    3    1    1    1
O      0.0000 0.0000 2.13200
F  11    5    0
15330.     0.000508   -0.000115   0.000000   0.000000  0.0
2299.      0.003929   -0.000895   0.000000   0.000000  0.0
522.4      0.020243   -0.004636   0.000000   0.000000  0.0
147.3      0.079181   -0.018724   0.000000   0.000000  0.0
47.55      0.230687   -0.058463   0.000000   0.000000  0.0
16.76      0.433118   -0.136463   0.000000   0.000000  0.0
6.207      0.350260   -0.175740   0.000000   0.000000  0.0
1.752      0.042728    0.160934   1.000000   0.000000  0.0
0.6882    -0.008154    0.603418   0.000000   0.000000  0.0
0.2384     0.002381    0.378765   0.000000   1.000000  0.0
0.073760   0.0         0.0        0.0        0.0       1.000000
F   6    4    0
34.46      0.015928    0.000000   0.000000   0.0
7.749      0.099740    0.000000   0.000000   0.0
2.280      0.310492    0.000000   0.000000   0.0
0.7156     0.491026    1.000000   0.000000   0.0
0.2140     0.336337    0.000000   1.000000   0.0
0.05974    0.0         0.0        0.0        1.000000
F   3    3    0
2.314      1.000000    0.000000   0.0
0.645      0.000000    1.000000   0.0
0.214000   0.0         0.0        1.000000
%EOF%
cat > energy_stex__4.mol <<'%EOF%'
INTGRL
base CCATZ (gaussiane sferiche)  , nessuna simmetria
picolla base aumentata s,p,d su O   
    3    0
        6.    1    3    1    1    1
C      0.0000 0.0000 0.00000
F  11    5    0
8236.      0.000531   -0.000113   0.000000   0.000000  0.0
1235.      0.004108   -0.000878   0.000000   0.000000  0.0
280.8      0.021087   -0.004540   0.000000   0.000000  0.0
79.27      0.081853   -0.018133   0.000000   0.000000  0.0
25.59      0.234817   -0.055760   0.000000   0.000000  0.0
8.997      0.434401   -0.126895   0.000000   0.000000  0.0
3.319      0.346129   -0.170352   0.000000   0.000000  0.0
0.9059     0.039378    0.140382   1.000000   0.000000  0.0
0.3643    -0.008983    0.598684   0.000000   0.000000  0.0
0.1285     0.002385    0.395389   0.000000   1.000000  0.0
0.04402    0.000000    0.000000   0.000000   0.000000  1.0
F   6    4    0
18.71      0.014031    0.000000   0.000000  0.0
4.133      0.086866    0.000000   0.000000  0.0
1.200      0.290216    0.000000   0.000000  0.0
0.3827     0.501008    1.000000   0.000000  0.0
0.1209     0.343406    0.000000   1.000000  0.0
0.03569    0.000000    0.000000   0.000000  1.0
F   3    3    0
1.097      1.000000    0.000000  0.0
0.318      0.000000    1.000000  0.0
0.100      0.000000    0.000000  1.0
        8.    1    3    1    1    1
O      0.0000 0.0000 2.13200
F  11    5    0
15330.     0.000508   -0.000115   0.000000   0.000000  0.0
2299.      0.003929   -0.000895   0.000000   0.000000  0.0
522.4      0.020243   -0.004636   0.000000   0.000000  0.0
147.3      0.079181   -0.018724   0.000000   0.000000  0.0
47.55      0.230687   -0.058463   0.000000   0.000000  0.0
16.76      0.433118   -0.136463   0.000000   0.000000  0.0
6.207      0.350260   -0.175740   0.000000   0.000000  0.0
1.752      0.042728    0.160934   1.000000   0.000000  0.0
0.6882    -0.008154    0.603418   0.000000   0.000000  0.0
0.2384     0.002381    0.378765   0.000000   1.000000  0.0
0.073760   0.0         0.0        0.0        0.0       1.000000
F   6    4    0
34.46      0.015928    0.000000   0.000000   0.0
7.749      0.099740    0.000000   0.000000   0.0
2.280      0.310492    0.000000   0.000000   0.0
0.7156     0.491026    1.000000   0.000000   0.0
0.2140     0.336337    0.000000   1.000000   0.0
0.05974    0.0         0.0        0.0        1.000000
F   3    3    0
2.314      1.000000    0.000000   0.0
0.645      0.000000    1.000000   0.0
0.214000   0.0         0.0        1.000000
        0.    1    3    1    1    1
AUO    0.0000 0.0000 2.13200
F   5    5
5.00     1 0 0 0 0
3.47     0 1 0 0 0
2.41     0 0 1 0 0
1.774    0 0 0 1 0
1.050    0 0 0 0 1
F   5    5
5.00     1 0 0 0 0
3.47     0 1 0 0 0
2.41     0 0 1 0 0
1.774    0 0 0 1 0
1.050    0 0 0 0 1
F   5    5
5.00     1 0 0 0 0
3.47     0 1 0 0 0
2.41     0 0 1 0 0
1.774    0 0 0 1 0
1.050    0 0 0 0 1
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > energy_stex__1.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
.DIRECT
**INTEGRALS
.DIPLEN
.PRINT
1
**WAVE FUNCTIONS
.HF
.INTERFACE
*ORBITAL
.NOSUPSYM
**RESPONSE
.PROPAV 
XDIPLEN
.PROPAV 
YDIPLEN
.PROPAV 
ZDIPLEN
*END OF INPUT
%EOF%

cat > energy_stex__2.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVEFUNC
.DIRECT
**WAVE FUNCTIONS
.HF
.INTERFACE
*SCF INPUT
.DOUBLY OCCUPIED
 7
.COREHOLE
 1 2
.NODIIS
*ORBITAL
.MOSTART
 NEWORB
.NOSUPSYM
*END OF INPUT
%EOF%

cat > energy_stex__3.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
#.DIRECT
**INTEGRALS
.DIPLEN
**WAVE FUNCTIONS
.HF
.INTERFACE
*SCF INPUT
.DOUBLY OCCUPIED
 7
.COREHOLE
 1 2
.CORERELAX
.NODIIS
*ORBITAL
.MOSTART
 NEWORB
.NOSUPSYM
**RESPONSE
.PROPAV 
XDIPLEN
.PROPAV 
YDIPLEN
.PROPAV 
ZDIPLEN
*END OF INPUT
%EOF%

cat > energy_stex__4.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
#.DIRECT
**INTEGRALS
.DIPLEN
.DIPVEL
**WAVE FUNCTIONS
.STEX
*SCF INPUT
.DOUBLY OCCUP
 7 
*STEX
.XAS
.OPEN SHELLS
 1 
 7 
.COEFFICIENTS
 +1.0
 -2.0
.PRINT
  2
*ORBITAL
.MOSTART
 H1DIAG
.AO DEL
1.D-8
.THRSSY
1.0D-7
.CMOMAXL
1.D5
.NOSUPSYM
*END OF INPUT
%EOF%

#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >energy_stex__1.check
cat >>energy_stex__1.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "C * 1 * 6\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT2=`$GREP "O * 1 * 8\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 14\.0000 * 88 * 64" $log | wc -l`
CRIT4=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=4
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (2| )\.1320000000" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7`
CTRL[2]=7
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Energy
CRIT1=`$GREP "Final HF energy\: * \-112\.77814446" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="HF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

#Local setup
tar=energy_stex.tar
gunzip $tar.gz
tar xvf  $tar SIRIFC
mv -v SIRIFC SIRIFC1
tar rvf $tar SIRIFC1
gzip $tar

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
echo $CHECK_SHELL >energy_stex__2.check
cat >>energy_stex__2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "C * 1 * 6\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT2=`$GREP "O * 1 * 8\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 14\.0000 * 88 * 64" $log | wc -l`
CRIT4=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=4
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (2| )\.1320000000" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7`
CTRL[2]=7
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Final energy
CRIT1=`$GREP "Final HF energy\: * \-101\.8166604" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="HF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} : ${TEST[i]} .ne. ${CTRL[i]} ; "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
echo $CHECK_SHELL >energy_stex__3.check
cat >>energy_stex__3.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "C * 1 * 6\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT2=`$GREP "O * 1 * 8\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 14\.0000 * 88 * 64" $log | wc -l`
CRIT4=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=4
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (2| )\.1320000000" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7`
CTRL[2]=7
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Final energy
CRIT1=`$GREP "Final HF energy\: * \-101\.8483588" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="HF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} : ${TEST[i]} .ne. ${CTRL[i]} ; "
     PASSED=0
   fi
done

#Local setup
tar=energy_stex.tar
gunzip $tar.gz
tar xvf  $tar SIRIFC
mv -v SIRIFC SIRIFC2
tar rvf $tar SIRIFC2
gzip $tar

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
echo $CHECK_SHELL >energy_stex__4.check
cat >>energy_stex__4.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "C * 1 * 6\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT2=`$GREP "O * 1 * 8\.0000 * 44 * 32 * \[11s6p3d\|5s4p3d\]" $log | wc -l`
CRIT3=`$GREP "AU * 1 * 0\.0000 * 45 * 45 * \[5s5p5d\|5s5p5d\]" $log | wc -l`
CRIT4=`$GREP "total\: * 3 * 14\.0000 * 133 * 109" $log | wc -l`
CRIT5=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=5
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 9" $log | wc -l`
CRIT2=`$GREP "1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (2| )\.1320000000" $log | wc -l`
CRIT8=`$GREP "7 * x * (0| )\.0000000000" $log | wc -l`
CRIT9=`$GREP "8 * y * (0| )\.0000000000" $log | wc -l`
CRIT10=`$GREP "9 * z * (2| )\.1320000000" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[2]=10
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Stex setup
CRIT1=`$GREP "Static exchange calculation" $log | wc -l`
CRIT2=`$GREP "orbital \(symmetry\)    7 \(1\)" $log | wc -l`
CRIT3=`$GREP "J coefficients      1.0" $log | wc -l`
CRIT4=`$GREP "K coefficients     -2.0" $log | wc -l`
CRIT5=`$GREP "14.76838420 * -0.80058961 * 6.72184662 * 1.90108339 * 0.87484960" $log | wc -l`
TEST[3]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[3]=5
ERROR[3]="STEX CALCULATION NOT CORRECT"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} : ${TEST[i]} .ne. ${CTRL[i]} ; "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
