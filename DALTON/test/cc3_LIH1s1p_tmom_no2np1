#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi

#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > cc3_LIH1s1p_tmom_no2np1.info <<%EOF%
   cc3_LIH1s1p_tmom_no2np1
   -----------
   Molecule:         LIH
   Theory Level:     CC3 / (two-function basis)
   Test Purpose:     Transition moment between the ground and an
                     excited state; non-totally symmetric operator.
                     (NOT exploitng 2n+1 rule!)
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > cc3_LIH1s1p_tmom_no2np1.mol <<%EOF%
BASIS
cc-pVDZ
CC3 polarizability 
LiH molecule
    2    2  X  Y      1.00D-15
        3.0   1    2    0    1
Li    0.0000000000000000   0.000000000   0.20000000
        1.0   1    1    1
H     0.0000000000000000   0.000000000  -0.60000000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > cc3_LIH1s1p_tmom_no2np1.dal <<%EOF%
**DALTON
.RUN WAVE FUNCTIONS
**INTEGRAL
.DIPLEN
.DIPVEL
.ANGMOM
**WAVE FUNCTION
.CC
*SCF INPUT
.THRESH
 1.0D-12
!.NODIIS
*ORBITAL INPUT
.MOSTART
 H1DIAG
*CC INP
.CC3
.PRINT
 1
.THRENR
1.0D-12
.THRLEQ
1.0D-12
.MAX IT
 100
*CCEXCI
.THREXC
 1.0D-9
.TOLSC
 1.0D-8
.NCCEXCI
 0 1 0 0
 0 0 0 0
*CCOPA
.OPERATOR
XDIPLEN
.NO2N+1
**END OF DALTON
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > cc3_LIH1s1p_tmom_no2np1.check
cat >>cc3_LIH1s1p_tmom_no2np1.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

# SCF, MP2 and CC3 energies:
CRIT1=`$GREP "Total SCF   energy: * -6\.8631724538" $log | wc -l`
CRIT2=`$GREP "Total MP2   energy: * -6\.8980596685" $log | wc -l`
CRIT3=`$GREP "Total CC3   energy: * -6\.9161293098" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3` 
CTRL[1]=6
ERROR[1]="ENERGIES NOT CORRECT"


# CC3 transition moments:
CRIT1=`$GREP  " *\| XDIPLEN *\| * (\-| )1\.42988471 *\| * (\-| )2\.40690326 *\| *3\.44159419 *\|" $log | wc -l`

TEST[2]=$CRIT1
CTRL[2]=1
ERROR[2]="CC3 TRANSITION MOMENT NOT CORRECT"

# CC3 excitation energies:
CRIT1=`$GREP  " *\| *\^1B1 *\| *1 *\| *( |0)\.1144759 *\| *3\.11505 *\| *25124\.5(5|6). *\| *72\... *\|" $log | wc -l`
TEST[3]=$CRIT1
CTRL[3]=1
ERROR[3]="CC3 EXCITATION ENERGIES NOT CORRECT"

PASSED=1
for i in 1 2 3
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
