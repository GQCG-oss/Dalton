#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi

#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > dpt_h2s_finp.info <<%EOF%
   dpt_h2s_finp
   ------------
   Molecule:       H2S in C2v
   Wave Function:  CCSD, CCSD(T) / cc-pVDZ
   Test Purpose:   Finite-field (+0.1) first-order DPT correction
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > dpt_h2s_finp.mol <<%EOF%
BASIS
cc-pVDZ          
Finite-field (+0.1) first-order DPT correction

    2    2  X  Y      1.00D-15
       16.0   1
S       0.00000000000000    0.00000000000000    0.00000000000000       *
        1.0   1
H       1.82237883747756    0.00000000000000    1.75080674629681       *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > dpt_h2s_finp.dal <<%EOF%
**DALTON INPUT
.RUN WAVE FUNCTIONS
**INTEGRAL
.FINDPT
 0.1
**WAVE FUNCTION
.CC
*SCF INP
.THRESH
 1.0D-10
*CC INP
.CCSD
.CC(T)
.PRINT
 4
.THRENR
1.0D-10
.THRLEQ
1.0D-07
**END OF DALTON INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >dpt_h2s_finp.check
cat >>dpt_h2s_finp.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

#             Total CCSD  energy:                  -398.9790221113
#             Total energy CCSD(T):                -398.9825628679

CRIT1=`$GREP "Total CCSD  energy:                  \-398\.97902211" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=4
ERROR[1]="CCSD energy with finite DPT correction not correct"

CRIT2=`$GREP "\-398\.98256286" $log | wc -l`
TEST[2]=`expr   $CRIT2`
CTRL[2]=3
ERROR[2]="CCSD(T) energy with finite DPT correction not correct"

PASSED=1
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%

chmod +x dpt_h2s_finp.check
#######################################################################
