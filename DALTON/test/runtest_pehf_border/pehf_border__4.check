#!/bin/ksh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

#
# quantum-classical border option
#
 CRIT1=`$GREP "from site:    37" $log | wc -l`
 CRIT2=`$GREP "from site:     9" $log | wc -l`
 CRIT3=`$GREP "from site:    26" $log | wc -l`
 CRIT4=`$GREP "from site:    39" $log | wc -l`
 CRIT5=`$GREP "from site:     1" $log | wc -l`
 CRIT6=`$GREP "from site:    10" $log | wc -l`
 CRIT7=`$GREP "to neighbouring sites:    25    27" $log | wc -l`
 CRIT8=`$GREP "to neighbouring sites:     2     4" $log | wc -l`
 CRIT9=`$GREP "to neighbouring sites:    42    25" $log | wc -l`
CRIT10=`$GREP "to neighbouring sites:     4    13" $log | wc -l`
CRIT11=`$GREP "Redistributing multipoles upto 1st order" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 `
CTRL[1]=18
ERROR[1]="REDISTRIBUTION OF PARAMETERS NOT CORRECT"

#
# redistribution of charges
#
CRIT1=`$GREP "C * 2 * ( |0)\.3206" $log | wc -l`
CRIT2=`$GREP "C * 4 * (\-|\-0)\.0699" $log | wc -l`
CRIT3=`$GREP "H * 13 * ( |0)\.1850" $log | wc -l`
CRIT4=`$GREP "N * 25 * (\-|\-0)\.2349" $log | wc -l`
CRIT5=`$GREP "C * 27 * (\-|\-0)\.2329" $log | wc -l`
CRIT6=`$GREP "H * 42 * ( |0)\.2036" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 `
CTRL[2]=6
ERROR[2]="REDISTRIBUTION OF CHARGES NOT CORRECT"

#
# redistribution of ORDER 1
#
CRIT1=`$GREP "C * 2 * (\-|\-0)\.2123 * (\-|\-0)\.2682 * ( |0)\.0297" $log | wc -l`
CRIT2=`$GREP "C * 4 * ( |0)\.1369 * (\-|\-0)\.1605 * ( |0)\.1134" $log | wc -l`
CRIT3=`$GREP "H * 13 * ( |0)\.2988 * (\-|\-0)\.1728 * ( |0)\.3768" $log | wc -l`
CRIT4=`$GREP "N * 25 * ( |0)\.0541 * ( |0)\.0703 * ( |0)\.0140" $log | wc -l`
CRIT5=`$GREP "C * 27 * ( |0)\.2476 * ( |0)\.2260 * (\-|\-0)\.1596" $log | wc -l`
CRIT6=`$GREP "H * 42 * ( |0)\.2383 * (\-|\-0)\.0044 * ( |0)\.3294" $log | wc -l`
TEST[3]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 `
CTRL[3]=6
ERROR[3]="REDISTRIBUTION OF DIPOLES NOT CORRECT"

PASSED=1 
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi
