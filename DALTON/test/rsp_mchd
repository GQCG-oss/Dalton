#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > rsp_mchd.info <<'%EOF%'
   rsp_mchd
   ------------
   Molecule:         H2O2
   Wave Function:    SCF / aug-cc-pVDZ
   Test Purpose:     Magneto-chiral birefringence and dichroism 
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_mchd.mol <<'%EOF%'
BASIS
aug-cc-pVDZ
Hydrogen Peroxide - optimized geometry
optimized with CCSD(T)/cc-pCVQZ 
AtomTypes=2
Charge=8.0 Atoms=2
O   1.3697920000     0.0000000000    -0.0587737580
O  -1.3697920000    -0.0000000000    -0.0587737580
Charge=1.0 Atoms=2
H   1.6852310000    -1.4904930000     0.9327822420
H  -1.6852310000     1.4904930000     0.9327822420
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_mchd.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
.DIRECT
**INTEGRALS
.DIPLEN
.ANGMOM
.THETA
**WAVE FUNCTION INPUT
.HF
*SCF INPUT
.THRESH
 1.0D-08
**RESPONSE INPUT
*ABSORP
.MCHD
.BFREQ
 1
 0.072
.DAMPING
 0.004556
.MAXRM
 1000
.THCLR
 1.0D-6
**END OF DALTON INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >rsp_mchd.check
cat >>rsp_mchd.check <<'%EOF%'
log=$1
#
if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# SCF energy
CRIT1=`$GREP "@    Final HF energy: * \-150\.80196543[0-9][0-9][0-9][0-9]" $log | wc -l`
TEST[1]=`expr   $CRIT1`
CTRL[1]=1
ERROR[1]="SCF ENERGY NOT CORRECT"

# Number of wave functions
CRIT1=`$GREP "Quadratic response function no" $log | wc -l`
TEST[2]=`expr  $CRIT1`
CTRL[2]=41
ERROR[2]="NUMBER OF RESPONSE FUNCTIONS NOT CORRECT"

# Damped polarizability
CRIT1=`$GREP " * 1 * XDIPLEN * XDIPLEN * 0.000000 * 19.0258[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT2=`$GREP " * 2 * YDIPLEN * YDIPLEN * 0.000000 * 11.9438[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT3=`$GREP " * 3 * ZDIPLEN * ZDIPLEN * 0.000000 * 10.6631[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT4=`$GREP " * 4 * XDIPLEN * YDIPLEN * 0.000000 * 1.8251[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT5=`$GREP " * 5 * XDIPLEN * ZDIPLEN * 0.000000 * 0.000000 * 0.000000" $log | wc -l`
CRIT6=`$GREP " * 6 * YDIPLEN * ZDIPLEN * 0.000000 * 0.000000 * 0.000000" $log | wc -l`
CRIT7=`$GREP "Averaged value * 0\.000000 * 13\.8776[0-9][0-9] * -?0\.000000" $log | wc -l`
CRIT8=`$GREP " * 7 * XDIPLEN * XDIPLEN * 0.072000 * 19.4047[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT9=`$GREP " * 8 * YDIPLEN * YDIPLEN * 0.072000 * 12.0732[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT10=`$GREP " * 9 * ZDIPLEN * ZDIPLEN * 0.072000 * 10.7801[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT11=`$GREP " * 10 * XDIPLEN * YDIPLEN * 0.072000 * 1.8631[0-9][0-9] * -?0.000000" $log | wc -l`
CRIT12=`$GREP " * 11 * XDIPLEN * ZDIPLEN * 0.072000 * 0.000000 * 0.000000" $log | wc -l`
CRIT13=`$GREP " * 12 * YDIPLEN * ZDIPLEN * 0.072000 * 0.000000 * 0.000000" $log | wc -l`
CRIT14=`$GREP "Averaged value * 0\.072000 * 14.0860[0-9][0-9] * 0.0270[0-9][0-9]" $log | wc -l`
TEST[3]=`expr  $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \
               $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ $CRIT13 \+ $CRIT14 `
CTRL[3]=14
ERROR[3]="PROBLEMS WITH DAMPED POLARIZABILITY"

# Avaraged values
CRIT1=`$GREP "DBGJC * 0\.004556 * 0\.072000 * 0\.089064 * 0\.012744 * 0\.049104 * 0\.472241 * 0\.095864 * 0\.013451" $log | wc -l`
TEST[4]=`expr  $CRIT1`
CTRL[4]=1
ERROR[4]="THE FINAL VALUES OF MCHD OR BIREFRINGENCE ARE WRONG"



PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done
#
if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
