#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > cc_rsp_twophot5.info <<'%EOF%'
   cc_rsp_twophot5
   ---------------
   Molecule:         HF in C2
   Wave Function:    CCSD / 6-31G**
   Test Purpose:     Twophoton transition moments
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > cc_rsp_twophot5.mol <<'%EOF%'
BASIS
6-31G**
Hydrogen flourid
small test basis
    2    1  Y         1.00D-15
        9.0   1    
F     0.0000000000000000  0.0000000000000000 1.76320000000000000      
        1.0   1
H     0.0000000000000000  0.0000000000000000 0.00000000000000000      
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > cc_rsp_twophot5.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTIONS
**INTEGRAL
.DIPLEN
**WAVE FUNCTIONS
.CC
*SCF INPUT 
.THRESH
 1.0d-12
*CC INPUT 
.CCSD
.NSYM
 2
.THRENR
 1.0d-10
.THRLEQ
 1.0d-9
.PRINT
  5
.MAX ITER
  300
*CCEXCI
.NCCEXCI
 0 5 
.THREXC
 1.0d-8
*CCOPA
.DIPLEN
*CCTPA
.SELSTA
 2 3 0.01
.OPERATOR
YDIPLEN XDIPLEN
XDIPLEN YDIPLEN
**END OF DALTON INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >cc_rsp_twophot5.check
cat >>cc_rsp_twophot5.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi

# SCF, MP2 and CCSD energies:
CRIT1=`$GREP "Final * HF energy:" $log | $GREP "\-100.008919(8|9)." | wc -l`
CRIT2=`$GREP "Total MP2   energy:                  \-100.193662(5|6)." $log | wc -l`
CRIT3=`$GREP "Total CCSD  energy:                  \-100.1977909." $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=5
ERROR[1]="ENERGIES NOT CORRECT"


# CCSD twophoton transition moment:
#  +-------------------+----------------+----------------+----------------+
#  |    A        B     | M_0f(  0.0000) | M_f0(  0.0000) | S^0f(  0.0000) |
#  +-------------------+----------------+----------------+----------------+
#  | YDIPLEN  XDIPLEN  |    -0.16529861 |    -0.04922990 |     0.00813763 |
#  | XDIPLEN  YDIPLEN  |    -0.16529861 |    -0.04922990 |     0.00813763 |
#  +-------------------+----------------+----------------+----------------+
CRIT1=`$GREP "YDIPLEN *XDIPLEN *. *(0| |\-0|\-)\.165298.. *. *(0| |\-0|\-)\.049229.. *. *(0| )\.008137.." $log | wc -l`
CRIT2=`$GREP "XDIPLEN *YDIPLEN *. *(0| |\-0|\-)\.165298.. *. *(0| |\-0|\-)\.049229.. *. *(0| )\.008137.." $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2`
CTRL[2]=2
ERROR[2]="CCSD TWOPHOTON TRANSITION MOMENTS NOT CORRECT"


# CCSD excitation energies
CRIT1=`$GREP "\^1A.  \|    3   \|     1\.328216.  \|      36\.142(5|6).  \|    291509\....  \|   ( |0)\.35" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="CC EXCITATION ENERGIES NOT CORRECT"


PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%
#######################################################################
