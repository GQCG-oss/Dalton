#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > extpcm_hf_energy.info <<'%EOF%'
   extpcm_hf_energy
   -------------
   Molecule:         CH4 
   Wave Functions:   PCM-SCF / STO-3G
   Test Purpose:     Check energy calculation with PCMSolver module
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > extpcm_hf_energy.mol <<'%EOF%'
BASIS
STO-3G
Methane
using the STO-3G basis
Atomtypes=2 Nosymmetry
Charge=6.0 Atoms=1
C      .000000000   .000000000  .000000000
Charge=1.0 Atoms=4
H1     .629889144   .629889144  .629889144
H2    -.629889144  -.629889144  .629889144
H3     .629889144  -.629889144 -.629889144
H4    -.629889144   .629889144 -.629889144
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > extpcm_hf_energy.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE
.EXTPCM
*EXTPCM
.OLDINT
**WAVE FUNCTIONS
.SCF
**END OF DALTON INPUT
%EOF%
#######################################################################

#######################################################################
#  PCMSOLVER INPUT
#######################################################################
cat > extpcm_hf_energy.pcm <<'%EOF%'
Units = AU
Medium 
{
		SolverType = IEFPCM
		Solvent = Water 
}

Cavity 
{
		Type = GePol
		Area = 357.106482748 
                Mode = Implicit 
}
%EOF%



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >extpcm_hf_energy.check
cat >>extpcm_hf_energy.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -i -a"
else
   GREP="egrep -i"
fi

# Nuclear repulsion energy:
CRIT1=`$GREP "Nuclear repulsion: * 25.365934555[0-9]" $log | wc -l`
TEST[1]=`expr $CRIT1`
CTRL[1]=1
ERROR[1]="NUCLEAR REPULSION ENERGY NOT CORRECT"

# Electronic energy:
CRIT1=`$GREP "Electronic energy: * \-62\.567439632[0-9]" $log | wc -l`
TEST[2]=`expr $CRIT1`
CTRL[2]=1
ERROR[2]="ELECTRONIC ENERGY NOT CORRECT"

# Solvation energy:
CRIT1=`$GREP "Solvation energy: * \-0\.000171654[0-9]" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="SOLVATION ENERGY NOT CORRECT"

# SCF energy:
CRIT1=`$GREP "Final HF energy: * \-37\.201676731[0-9]" $log | wc -l`
TEST[4]=`expr $CRIT1`
CTRL[4]=1
ERROR[4]="SCF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
