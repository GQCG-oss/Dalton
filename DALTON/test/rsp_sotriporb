
#######################################################################
#  TEST DESCRIPTION
#######################################################################
testcase=`basename $0`
cat > $testcase.info <<%EOF%
   $testcase
   -------------
   Molecule:         H
   Wave Functions:   MCSCF (RAS) / STO-3G
   Test Purpose:     Run two equal triplet linear response calculations 
                     ci and orbital rotations:
                     1. Orbital rotations
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > $testcase.mol <<%EOF%
INTGRL
Energy calculation without symmetry
Basis set specified with ATOMBASIS
    1    
        1.    1    2    1    1
H     0 0 1.0
    1    1
1.0       1.0
    1    1
1.0       1.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > $testcase.dal <<%EOF%
**DALTON INPUT
.RUN RESPONSE
**INTEGRAL
.DIPLEN
.SPIN-ORBIT
**WAVE FUNCTIONS
.MCSCF
*CONFIG
.ELECTRONS
 2
.INACTIVE
 0 0 0 0 0 0 0 0
.RAS1 SPACE
 1 0 0 0 0 0 0 0
.RAS2 SPACE
 0 1 0 0 0 0 0 0
.RAS3 SPACE
 0 0 1 0 0 0 0 0
.RAS1 ELEC
 1 2
.RAS3 ELEC
 0 0
.SYMMETRY
 2
.SPIN MULT
 1
*CI VECTOR
.PLUS COM
*OPTIMIZATION
.DETERMINANTS
**RESPONSE
.TRPFLG
*LINEAR
.SINGLE RESIDUE
.PRINT
 3
.PROPRT
Z2SPNORB
.ROOTS
 0 0 1 0 0 0 0 0
**END OF DALTON INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/sh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# ?
CRIT1=`$GREP "Final MCSCF energy\: * 2\.468763964419" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="ENERGY NOT CORRECT"

# ?
CRIT1=`$GREP "Orbital variables\. * KZWOPT\: * 1" $log | wc -l`
CRIT2=`$GREP "Configuration variables\. * KZCONF\: * 0" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2`
CTRL[2]=2
ERROR[2]="SETUP NOT CORRECT"

# ?
CRIT1=`$GREP "Index\(r\,s\) * r * s * \(r s\) operator * \(s r\) operator" $log | wc -l`
CRIT2=`$GREP "\-\-\-\-\-\-\-\-\-\- * \-\-\-\-\- * \-\-\-\-\- * \-\-\-\-\-\-\-\-\-\-\-\-\-\- * \-\-\-\-\-\-\-\-\-\-\-\-\-\-" $log | wc -l`
CRIT3=`$GREP "1 * 2\(2\) * 3\(3\) * (\-0| \-)\.7522527781 * (\-0| \-)\.7522527781" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[3]=3
ERROR[3]="GRADIENT NOT CORRECT"

# ?
CRIT1=`$GREP "\@ STATE NO\: * 1 \*TRANSITION MOM(D|E)NT\: \-1\.00146197E\-05 \*ENERGY\(eV\)\: * \-1(0| )\.234919" $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=1
ERROR[4]="TRANSITION NOT CORRECT"


PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

' > $testcase.check
#######################################################################
