#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > pehf_fixsol_direct_2.info <<'%EOF%'
   pehf_fixsol_direct_2
   ------------------
   Molecule:         Acrolein and FIXSOL solvation
   Wave Function:    PE-HF / STO-3G
   Test Purpose:     Test of energies using FIXSOL solvation and
                     direct solver.
%EOF%
#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > pehf_fixsol_direct_2.mol <<'%EOF%'
BASIS
STO-3G
Acrolein
------------------------
AtomTypes=3 NoSymmetry Angstrom
Charge=6.0 Atoms=3
C             -0.145335   -0.546770    0.000607
C              1.274009   -0.912471   -0.000167
C              1.630116   -2.207690   -0.000132
Charge=8.0 Atoms=1
O             -0.560104    0.608977    0.000534
Charge=1.0 Atoms=4
H             -0.871904   -1.386459    0.001253
H              2.004448   -0.101417   -0.000710
H              0.879028   -3.000685    0.000484
H              2.675323   -2.516779   -0.000673
%EOF%
#######################################################################
#  DALTON INPUT
#######################################################################
cat > pehf_fixsol_direct_2.dal <<'%EOF%'
**DALTON
.RUN WAVEFUNCTION
.PEQM
*PEQM
.FIXSOL
.DIRECT
.SOLVAT
**WAVE FUNCTIONS
.HF
**END OF
%EOF%
#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > pehf_fixsol_direct_2.check
cat >> pehf_fixsol_direct_2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

#
# Potential readin test
#
CRIT1=`$GREP "Direct solver for induced moments will be used\." $log | wc -l`
CRIT2=`$GREP "Continuum solvation in H2O solvent\." $log | wc -l`
CRIT3=`$GREP "Number of surface points\: * 228" $log | wc -l`
CRIT4=`$GREP "Surface area .* 107\.103" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=4
ERROR[1]="INCORRECT POTENTIAL"

#
# Energy tests
#
CRIT1=`$GREP "Electronic * 0*\.005768......" $log | wc -l`
CRIT2=`$GREP "Nuclear * \-0*\.009101......" $log | wc -l`
CRIT3=`$GREP "Total PE energy\: * \-0*\.00333[23]......" $log | wc -l`
CRIT4=`$GREP "Final HF energy\: * \-188\.3029232....." $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 `
CTRL[2]=4
ERROR[2]="PE-HF ENERGY CONTRIBUTIONS NOT CORRECT"

PASSED=1
for i in 1 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi
%EOF%
#######################################################################
