#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > dft_ac_th.info <<'%EOF%'
   DFT-AC  
   ------------
   Molecule:         N2 
   Wave Function:    DFT / HCTH(ac) / aug-cc-pVDZ
   Test Purpose:     Calculate excitation energies of N2 with an 
                     asymptotically corrected (ac) functional. The 
                     gradient-regulated ac is used. 
                     Experimental IPs are used as input.                     
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > dft_ac_th.mol <<'%EOF%'
BASIS
aug-cc-pVDZ
N2 AC Test
------------
Atomtypes=1 Cartesian Angstrom
Atoms=2 Charge=7.0
N    0.0 0.0  0.0
N    0.0 0.0  1.098
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > dft_ac_th.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVEFUNCTION
.DIRECT
.PROPERTIES
**WAVEFUNCTION
.DFT
 HCTH93
*DFT INPUT
.DFTAC
LB94
GRAC
0.567 0.567 0.5 40.0
**PROPERTIES
.EXCITA
*EXCITA
.NEXCIT
2 2 2 2 2 2 2 6
**END OF INPUT
%EOF%
#######################################################################

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >dft_ac_th.check
cat >>dft_ac_th.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Check 1:
CRIT1=`$GREP "Final DFT energy:           -109.5126913" $log | wc -l`
TEST[1]=`expr $CRIT1`
CTRL[1]=1
ERROR[1]="DFT ENERGY NOT CORRECT"

# Check 2:
CRIT1=`$GREP "1  *    1  *   ( |0)\.4646" $log | wc -l`
CRIT2=`$GREP "1  *    2  *   ( |0)\.5318" $log | wc -l`
CRIT3=`$GREP "2  *    1  *   ( |0)\.4856" $log | wc -l`
CRIT4=`$GREP "2  *    2   *  ( |0)\.4988" $log | wc -l`
CRIT5=`$GREP "3  *    1   *  ( |0)\.4856" $log | wc -l`
CRIT6=`$GREP "3  *    2   *  ( |0)\.4988" $log | wc -l`
CRIT7=`$GREP "4  *    1   *  ( |0)\.5349" $log | wc -l`
CRIT8=`$GREP "4  *    2   *  ( |0)\.5364" $log | wc -l`
CRIT9=`$GREP "5  *    1   *  ( |0)\.3726" $log | wc -l`
CRIT10=`$GREP "5 *     2  *   ( |0)\.4773" $log | wc -l`
CRIT11=`$GREP "6 *     1  *   ( |0)\.3381" $log | wc -l`
CRIT12=`$GREP "6 *     2  *   ( |0)\.5282" $log | wc -l`
CRIT13=`$GREP "7 *     1  *   ( |0)\.3381" $log | wc -l`
CRIT14=`$GREP "7 *     2  *   ( |0)\.5282" $log | wc -l`
CRIT15=`$GREP "8 *     1  *   ( |0)\.3594" $log | wc -l`
CRIT16=`$GREP "8 *     2  *   ( |0)\.3726" $log | wc -l`
CRIT17=`$GREP "8 *     3  *   ( |0)\.6190" $log | wc -l`
CRIT18=`$GREP "8 *     4  *   ( |0)\.6190" $log | wc -l`
CRIT19=`$GREP "8 *     5  *   ( |0)\.9150" $log | wc -l`
CRIT20=`$GREP "8 *     6  *   1\.0548" $log | wc -l`
TEST[2]=`expr $CRIT1 + $CRIT2 + $CRIT3 + $CRIT4 + $CRIT5 + $CRIT6 + $CRIT7 + $CRIT8 + $CRIT9 + $CRIT10 + $CRIT11 + $CRIT12 + $CRIT13 + $CRIT14 + $CRIT15 + $CRIT16 + $CRIT17 + $CRIT18 + $CRIT19 + $CRIT20`
CTRL[2]=20
ERROR[2]="EXCITATION ENERGIES NOT CORRECT"

PASSED=1
for i in 1 2 
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} )"
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################

