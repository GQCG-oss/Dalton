#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi

#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > cc2_r12_aux_h2o_a2.info <<'%EOF%'
   cc2_r12_aux_h2o_a2
   -----------
   Molecule:         H2O 
   Wave Function:    CC2-R12/A2/B / 6-311G/6-311++G**
   Test Purpose:     Check CC2-R12/A2/B method with auxiliary basis 
                     - test .R12ORB option
                     - test non-direct mode
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > cc2_r12_aux_h2o_a2.mol <<'%EOF%'
BASIS
6-311G 6-311++G**
H2O without symmetry

    4    0
 1      8.    1
O     0.0 -0.2249058930 0.0
 1      1.    2
H     1.45235 0.899623 0.0
H    -1.45235 0.899623 0.0
 2      8.    1
O     0.0 -0.2249058930 0.0
 2      1.    2
H     1.45235 0.899623 0.0
H    -1.45235 0.899623 0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > cc2_r12_aux_h2o_a2.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
*MOLBAS
.R12AUX
**INTEGRALS
.R12
**WAVE FUNCTION
.CC
*ORBITAL INPUT
.MOSTART
 H1DIAG
.R12ORB
 1
*SCF INPUT
.THRESH
 1.0D-10
*CC INPUT
.CC2
.PRINT
 3 
.FREEZE
 1 0
.THRENR
 1.0D-12
.MAX IT
 100
.MAXRED
 400
.MXLRV
 400
*CCEXCI
.THREXC
 1.D-10
.NCCEXCI
 8 
*R12 INPUT
.NO HYB
.CC2
 2B
**END OF DALTON INPUT
%EOF%

#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >cc2_r12_aux_h2o_a2.check
cat >>cc2_r12_aux_h2o_a2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

if $GREP -q "not implemented for parallel calculations" $log; then
   echo "TEST ENDED AS EXPECTED"
   exit 0
fi


#           Total SCF   energy:                   -76.0085552989
#           Total MP2-R12/B energy:               -76.2604786891
#           Total CC2-R12/B energy:               -76.2624773272
#
#    Total energies in Hartree:
#            1 ^1A        -75.9710072313
#            2 ^1A        -75.8902490817
#            3 ^1A        -75.8819379068
#            4 ^1A        -75.7971528462
#            5 ^1A        -75.7236754481
#            6 ^1A        -75.6201313757
#            7 ^1A        -75.6092812760
#            8 ^1A        -75.5661683737
#
CRIT1=`$GREP "Total MP2-R12/B energy: *-76\.2604786891" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=2
ERROR[1]="MP2-R12/B ENERGY NOT CORRECT"
CRIT2=`$GREP "Total CC2-R12/B energy: *-76\.2624773272" $log | wc -l`
TEST[2]=`expr	$CRIT2`
CTRL[2]=2
ERROR[2]="CC2-R12/B ENERGY NOT CORRECT"
#
CRIT3=`$GREP "1 \^1A *-75\.97100723.." $log | wc -l`
TEST[3]=`expr	$CRIT3`
CTRL[3]=1
ERROR[3]="CC2-R12/B 1A1 EXCITATION ENERGY NOT CORRECT"
CRIT4=`$GREP "2 \^1A *-75\.89024908.." $log | wc -l`
TEST[4]=`expr	$CRIT4`
CTRL[4]=1
ERROR[4]="CC2-R12/B 2A1 EXCITATION ENERGY NOT CORRECT"
CRIT5=`$GREP "3 \^1A *-75\.88193790.." $log | wc -l`
TEST[5]=`expr	$CRIT5`
CTRL[5]=1
ERROR[5]="CC2-R12/B 3A1 EXCITATION ENERGY NOT CORRECT"
CRIT6=`$GREP "4 \^1A *-75\.79715284.." $log | wc -l`
TEST[6]=`expr	$CRIT6`
CTRL[6]=1
ERROR[6]="CC2-R12/B 4A1 EXCITATION ENERGY NOT CORRECT"
CRIT7=`$GREP "5 \^1A *-75\.72367544.." $log | wc -l`
TEST[7]=`expr   $CRIT7`
CTRL[7]=1
ERROR[7]="CC2-R12/B 5A1 EXCITATION ENERGY NOT CORRECT"
CRIT8=`$GREP "6 \^1A *-75\.62013137.." $log | wc -l`
TEST[8]=`expr   $CRIT8`
CTRL[8]=1
ERROR[8]="CC2-R12/B 6A1 EXCITATION ENERGY NOT CORRECT"
CRIT9=`$GREP "7 \^1A *-75\.60928127.." $log | wc -l`
TEST[9]=`expr   $CRIT9`
CTRL[9]=1
ERROR[9]="CC2-R12/B 7A1 EXCITATION ENERGY NOT CORRECT"
CRIT10=`$GREP "8 \^1A *-75\.56616837.." $log | wc -l`
TEST[10]=`expr   $CRIT10`
CTRL[10]=1
ERROR[10]="CC2-R12/B 8A1 EXCITATION ENERGY NOT CORRECT"


PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10  
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
