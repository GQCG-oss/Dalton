#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > prop_cpp_ecd.info <<'%EOF%'
   prop_cpp_ecd
   --------
   Molecule:         CHBrClF
   Wave Function:    HF
   Test Purpose:     Electronic circular dichroism (ECD) using CPP
                     the algorithm with symmetrized trial vectors
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > prop_cpp_ecd.mol <<'%EOF%'
BASIS                                                                          
3-21G                                                                          
CHBrClF                                                                        
--------------------------------------------                                   
Atomtypes=5 Generators=0   Angstrom                                            
Charge=6.0 Atoms=1                                                             
C     0.000000   0.000000    0.000000                                          
Charge=1.0 Atoms=1                                                             
H     0.000000   0.000000    1.089000                                          
Charge=17.0 Atoms=1                                                            
Cl    1.649918   0.000000   -0.583327                                          
Charge=35.0 Atoms=1                                                            
Br   -0.895669   1.551344   -0.633333                                          
Charge=9.0 Atoms=1                                                             
Cl   -0.626968  -1.085940   -0.443333                                          
FINISH
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > prop_cpp_ecd.dal <<'%EOF%'
**DALTON INPUT                                    
.RUN PROPERTIES                                   
.PARALLEL                                         
**INTEGRALS                                       
.DIPLEN                                           
**WAVE FUNCTION                                   
.HF                                               
**PROPERTIES                                      
.OPTROT                                           
*ABALNR                                           
.DAMPING                                          
 0.0045566                                        
.FREQUENCIES                                      
5                                                 
0.050000 0.0525 0.055 0.0575 0.06                 
**END OF DALTON INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > prop_cpp_ecd.check
cat >> prop_cpp_ecd.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Energy
CRIT1=`$GREP "Final * HF energy\: * \-3154\.438506" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="ENERGY NOT CORRECT"

# Dipole moment
CRIT1=`$GREP " 0*\.7283.. * 1\.851... * 6\.175" $log | wc -l`
TEST[2]=`expr	$CRIT1`
CTRL[2]=1
ERROR[2]="DIPOLE MOMENTS NOT CORRECT"

# Optical Rotation and Electronic Circular Dichroism
CRIT1=`$GREP " Ex * \-0*\.3433... * \-0*\.8345... * \-0*\.7713" $log | wc -l`
CRIT2=`$GREP " Ey * 0\.4891... * 0\.2805... * 0\.0352" $log | wc -l`
CRIT3=`$GREP " Ez * 0\.1160... * 0\.2554... * 0\.0587" $log | wc -l`
CRIT4=`$GREP " Ex *\-0\.03264.. * \-0\.07838.. * \-0\.07230" $log | wc -l`
CRIT5=`$GREP " Ey * 0\.04566.. * 0\.02682.. * 0\.004371" $log | wc -l`
CRIT6=`$GREP " Ez * 0\.01035.. * 0\.02338.. * 0\.005408" $log | wc -l`
CRIT7=`$GREP " Ex *\-0\.3976... * \-0\.9644... * \-0\.8911" $log | wc -l`
CRIT8=`$GREP " Ey * 0\.5647... * 0\.3251... * 0\.0428" $log | wc -l`
CRIT9=`$GREP " Ez * 0\.1330... * 0\.2939... * 0\.0676" $log | wc -l`
CRIT10=`$GREP " Ex *\-0\.03332.. * \-0\.07954.. * \-0\.07330" $log | wc -l`
CRIT11=`$GREP " Ey * 0\.04620.. * 0\.02745.. * 0\.00496" $log | wc -l`
CRIT12=`$GREP " Ez * 0\.01023.. * 0\.02342.. * 0\.005432" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="OR AND ECD NOT CORRECT"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
