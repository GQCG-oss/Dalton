

C*****************************************************************************
      pure subroutine ESRC_PBE(rho_c, gamma_cc, E)
C*****************************************************************************
C   Implemented by E.R. Kjellgren.
C
C   Subroutine generated using Sympy 1.3
C   Generated: February 18, 2019
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho_c, gamma_cc
      real*8, intent(out) :: E
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7
      E = 0.0d0
      x0 = 9.86960440108936d0
      x1 = 0.306852819440055d0
      x2 = 0.682784063255296d0*rho_c**(-0.333333333333333d0)
      x3 = 1d0/x1
      x4 = 2.0d0*(0.194159335344114d0*x2 + 1.0d0)*log(0.5d0*x0*x3/( 0.18
     &970043257475587d0*rho_c**(-0.66666666666666663d0) + 0.800428634999
     &36346d0*rho_c**(-0.5d0) + 5.9825504357710791d0* rho_c**(-0.1666666
     &6666666666d0) + 3.2595509194222925d0*x2) + 1.0d0)
      x5 = exp(x4) - 1.0d0
      x6 = 0.041796946103773d0*gamma_cc*rho_c**(-2.33333333333333d0)*x3
      x7 = 1.0d0 + x6/x5
      E = -rho_c*x1*(x4 - 1.0d0*log(x6*x7/(0.0017469847036017068d0*gamma
     &_cc**2* rho_c**(-4.666666666666667d0)/(x1**2*x5**2) + x7) + 1.0d0)
     &)/x0
      end subroutine


C*****************************************************************************
      pure subroutine D1ESRC_PBE(rho_c, gamma_cc, E, d1E)
C*****************************************************************************
C   Implemented by E.R. Kjellgren.
C
C   Subroutine generated using Sympy 1.3
C   Generated: February 18, 2019
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho_c, gamma_cc
      real*8, intent(out) :: E, d1E(9)
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x
     &13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x2
     &6, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39
     &, x40, x41, x42, x43, x44
      E = 0.0d0
      d1E(:) = 0.0d0
      x0 = 0.466194077035412d0
      x1 = 0.564189583547756d0
      x2 = 0.682784063255296d0
      x3 = rho_c**(-0.333333333333333d0)*x2
      x4 = 0.826307487110758d0
      x5 = 0.406913004517529d0*rho_c**(-0.666666666666667d0)*x0 + 1.4187
     &2281647967d0*rho_c**(-0.5d0)*x1 + 7.24010193431683d0*rho_c **(-0.1
     &66666666666667d0)*x4 + 3.25955091942229d0*x3
      x6 = 9.86960440108936d0
      x7 = 0.306852819440055d0
      x8 = 1d0/x7
      x9 = x6*x8
      x10 = x9/x5
      x11 = log(0.5d0*x10 + 1.0d0)
      x12 = 0.388318670688228d0*x3 + 2.0d0
      x13 = x11*x12
      x14 = gamma_cc*x8
      x15 = exp(x13)
      x16 = x15 - 1.0d0
      x17 = 208.945363813799d0
      x18 = rho_c**(-4.66666666666667d0)*x17
      x19 = 8.36096418563526d-6*x18
      x20 = x19/x16**2
      x21 = 14.4549425392770d0
      x22 = rho_c**(-2.33333333333333d0)
      x23 = x21*x22
      x24 = 0.00289153318944038d0*x23
      x25 = 1d0/x16
      x26 = x14*x25
      x27 = x24*x26 + 1.0d0
      x28 = 1d0/(gamma_cc**2*x20/x7**2 + x27)
      x29 = x24*x27
      x30 = x28*x29
      x31 = x14*x30 + 1.0d0
      x32 = 1.0d0*log(x31)
      x33 = 1d0/x6
      x34 = x33*x7
      x35 = rho_c**(-1.33333333333333d0)
      x36 = x2*x35
      x37 = (0.27127533634502d0*rho_c**(-1.66666666666667d0)*x0 + 0.7093
     &61408239834d0*rho_c**(-1.5d0)*x1 + 1.20668365571947d0*rho_c **(-1.
     &16666666666667d0)*x4 + 1.08651697314076d0*x36)/(x5**2*(x10 + 2.0d0
     &))
      x38 = 0.00674691077536089d0*rho_c**(-3.33333333333333d0)
      x39 = x21*x38
      x40 = x22*x25
      x41 = x15*(-0.258879113792152d0*x11*x36 + 2.0d0*x37*x9*(0.38831867
     &0688228d0*x3 + 2.0d0))
      x42 = 0.00144576659472019d0*x41
      x43 = x26*x30
      x44 = 1.0d0*x28*x33/x31
      E = -rho_c*x34*(x13 - x32)
      d1E(1) = -rho_c*(gamma_cc*x44*(0.00289153318944038d0*x14*x17*x40*(
     &x38 + x40*x42) + x27*x39 - x43*(3.90178328662979d-5*rho_c**(-5.666
     &66666666667d0) *x17*x26 + x14*x20*x41 + x23*x25*x42 + x39)) - 0.12
     &9439556896076d0*x11*x35*x7/x21 + x12*x37) - x13*x34 + x32*x34
      d1E(3) = rho_c*x44*(x19*x26 + x29 - x43*(1.67219283712705d-5*x18*x
     &26 + x24))
      end subroutine


C*****************************************************************************
      pure subroutine D2ESRC_PBE(rho_c, gamma_cc, E, d1E, d2E)
C*****************************************************************************
C   Implemented by E.R. Kjellgren.
C
C   Subroutine generated using Sympy 1.3
C   Generated: February 18, 2019
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho_c, gamma_cc
      real*8, intent(out) :: E, d1E(9), d2E(45)
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x
     &13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x2
     &6, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39
     &, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52,
     & x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, 
     &x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x
     &79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x9
     &2, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104
     &, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115
     &, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126
     &, x127, x128, x129, x130, x131
      E = 0.0d0
      d1E(:) = 0.0d0
      d2E(:) = 0.0d0
      x0 = 0.682784063255296d0
      x1 = rho_c**(-0.333333333333333d0)*x0
      x2 = 0.194159335344114d0*x1 + 1.0d0
      x3 = 0.466194077035412d0
      x4 = 0.564189583547756d0
      x5 = 1.41872281647967d0*x4
      x6 = 0.826307487110758d0
      x7 = 0.406913004517529d0*rho_c**(-0.666666666666667d0)*x3 + rho_c*
     &*(-0.5d0)* x5 + 7.24010193431683d0*rho_c**(-0.166666666666667d0)*x
     &6 + 3.25955091942229d0*x1
      x8 = 9.86960440108936d0
      x9 = 0.306852819440055d0
      x10 = 1d0/x9
      x11 = x10*x8
      x12 = x11/x7
      x13 = log(0.5d0*x12 + 1.0d0)
      x14 = x13*x2
      x15 = 2.0d0*x14
      x16 = gamma_cc*x10
      x17 = exp(x15)
      x18 = x17 - 1.0d0
      x19 = x18**(-2)
      x20 = 208.945363813799d0
      x21 = rho_c**(-4.66666666666667d0)*x20
      x22 = 8.36096418563526d-6*x21
      x23 = x19*x22
      x24 = gamma_cc**2
      x25 = x9**(-2)
      x26 = x24*x25
      x27 = x23*x26
      x28 = 14.4549425392770d0
      x29 = rho_c**(-2.33333333333333d0)
      x30 = x28*x29
      x31 = 0.00289153318944038d0*x30
      x32 = 1d0/x18
      x33 = x16*x32
      x34 = x31*x33 + 1.0d0
      x35 = x27 + x34
      x36 = 1d0/x35
      x37 = x31*x34
      x38 = x36*x37
      x39 = x16*x38 + 1.0d0
      x40 = 1.0d0*log(x39)
      x41 = 1d0/x8
      x42 = x41*x9
      x43 = rho_c**(-1.33333333333333d0)
      x44 = 0.129439556896076d0*x43
      x45 = 1d0/x28
      x46 = x13*x45*x9
      x47 = 2.0d0*x2
      x48 = rho_c**(-1.66666666666667d0)*x3
      x49 = rho_c**(-1.5d0)
      x50 = x0*x43
      x51 = rho_c**(-1.16666666666667d0)*x6
      x52 = 0.709361408239834d0*x4*x49 + 0.27127533634502d0*x48 + 1.0865
     &1697314076d0 *x50 + 1.20668365571947d0*x51
      x53 = x12 + 2.0d0
      x54 = 1d0/x53
      x55 = x54/x7**2
      x56 = x52*x55
      x57 = 0.258879113792152d0*x13
      x58 = x50*x57
      x59 = 0.388318670688228d0*x1 + 2.0d0
      x60 = x11*x59
      x61 = 2.0d0*x56*x60
      x62 = -x58 + x61
      x63 = x17*x32
      x64 = 0.00144576659472019d0*x30
      x65 = x62*x63*x64
      x66 = x16*x17
      x67 = x23*x66
      x68 = rho_c**(-3.33333333333333d0)
      x69 = 0.00674691077536089d0*x68
      x70 = x28*x69
      x71 = rho_c**(-5.66666666666667d0)
      x72 = x20*x33
      x73 = x71*x72
      x74 = x70 + 3.90178328662979d-5*x73
      x75 = x62*x67 + x65 + x74
      x76 = x33*x38
      x77 = -x75*x76
      x78 = x34*x70
      x79 = 0.00144576659472019d0*x29
      x80 = x63*x79
      x81 = x62*x80 + x69
      x82 = 0.00289153318944038d0*x29*x72
      x83 = x78 + x81*x82
      x84 = x77 + x83
      x85 = x36/x39
      x86 = x41*x85
      x87 = gamma_cc*x86
      x88 = 1.67219283712705d-5*x21
      x89 = x33*x88
      x90 = x31 + x89
      x91 = x36*x90
      x92 = x33*x91
      x93 = x22*x33 - x37*x92 + x37
      x94 = 1.0d0*x86
      x95 = rho_c*x94
      x96 = x58 - x61
      x97 = x63*x96
      x98 = -x64*x97 - x67*x96 + x74
      x99 = -x76*x98
      x100 = x83 + x99
      x101 = rho_c**(-2.33333333333333d0)
      x102 = x0*x101
      x103 = x55*(0.452125560575033d0*rho_c**(-2.66666666666667d0)*x3 + 
     &1.06404211235975d0*rho_c**(-2.5d0)*x4 + 1.40779759833938d0*rho_c *
     &*(-2.16666666666667d0)*x6 + 1.44868929752102d0*x102)
      x104 = x52**2/(x53**2*x7**4)
      x105 = x52*x54*(0.542550672690039d0*x48 + x49*x5 + 2.1730339462815
     &3d0*x50 + 2.41336731143894d0*x51)/x7**3
      x106 = x35**(-2)
      x107 = x69 - x80*x96
      x108 = 0.0224897025845363d0*rho_c**(-4.33333333333333d0)
      x109 = x108*x28
      x110 = 0.0134938215507218d0*x68
      x111 = x110*x28
      x112 = x33*x34*x36
      x113 = 0.00578306637888076d0*x29
      x114 = x19*x26
      x115 = x114*x20
      x116 = x96**2
      x117 = x116*exp(4.0d0*x14)
      x118 = x117*x19
      x119 = 0.000722883297360095d0*x63
      x120 = x119*x29
      x121 = 4.0d0*x60
      x122 = 6.97814718907709d0*x10*x43*x56 - 0.690344303445739d0*x102*x
     &13 + x103* x121 + 389.63636413601d0*x104*x25*x59 - x105*x121
      x123 = 7.80356657325958d-5*x73
      x124 = x19*x66
      x125 = x124*x96
      x126 = x106*x37
      x127 = x114*x126
      x128 = x119*x30
      x129 = 4.18048209281763d-6*x124*x21
      x130 = 0.00578306637888076d0*x30
      x131 = x130 + 3.34438567425411d-5*x21*x33
      E = -rho_c*x42*(x15 - x40)
      d1E(1) = -rho_c*(-x44*x46 + x47*x56 + 1.0d0*x84*x87) - x15*x42 + x
     &40*x42
      d1E(3) = x93*x95
      d2E(1) = rho_c*(-1.0d0*x10*x100*x106*x24*x41*(x107*x82 + x78 + x99
     &)/x39**2 - 0.172586075861435d0*x101*x46 + x103*x47 + x104*x11*x47 
     &- x105*x47 + 0.682784063255296d0*x44*x56 + 0.129439556896076d0*x50
     &*x56 + x87 *(x107*x110*x72 - x107*x113*x115*x36*x98 + x109*x34 - x
     &111*x112* x98 + x127*x98*(x111 + x123 - x125*x88 - x31*x97) - x76*
     &( 0.000221101052909021d0*rho_c**(-6.66666666666667d0)*x72 + x109 -
     & x116*x128 - x116*x129 + 1.25414462784529d-5*x117*x16*x21/x18**3 +
     & x118*x64 + x122*x128 + x122*x129 - 7.80356657325958d-5*x125*x20* 
     &x71 - x70*x97) + x82*(x108 - x116*x120 + x118*x79 + x120*x122 - x6
     &9*x97))) - 2.0d0*x100*x87 - 4.0d0*x2*x56 + x43*x45*x57*x9
      d2E(4) = x94*(-rho_c*(x113*x72*x81 - 0.00289153318944038d0*x115*x2
     &9*x81*x91 + x127*x131*x75 - x16*x84*x85*x93 - x27*x36*x75 + 1.9508
     &916433149d-5*x73 - x76*(x123 + x124*x62*x88 + x65 + x70) + x77 - x
     &78*x92 + x78) + x93)
      d2E(6) = -x10*x95*(x32*(0.000146037251001113d0*rho_c**(-7.0d0)*x11
     &2 - x126*x131* x33*x90 + x130*x34*x91 - x88 + x89*x91) + x85*x93**
     &2)
      end subroutine
