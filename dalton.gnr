WRKDIR=`pwd`
export WRKDIR
#
paramlist="$*"
# default extensions
OUTEXT="out"
DALEXT="dal"
MOLEXT="mol"
AUXEXT="MOL NCA ORB IRC TRJ CM HES MOPUN WLK"
#deafult values for options
opta=0
optA=0
optd=0
optD=1
optf=0
optF=0
optn=0
opti=0
opto=0
optstex=0
optvib=0
opthes=0
optloc=0
optI=0
optv=0
optw=0
frl=rel
#
usage (){
          echo
          echo "Usage:    dalton [-a] [-A] [-b directory] [-d] [-D] [-ext log] [-f] [-F] [-i] [-I]"
          echo  "[-m mem] [-N nodes] [-o file] [-t directory] [-v] [-w directory] dal{.$DALEXT} mol{.$MOLEXT}"
          echo
          echo 'Options:'
	  echo ' b dir    change directory where basis sets are searched for to dir'
          echo ' d        delete TMPDIR before calculation starts'
          echo ' D        do not delete TMPDIR after calculation stops'
          echo ' ext log  change default output extension to log'
          echo ' f        copy dal_mol.tar.gz file from WRKDIR to TMPDIR before calculation starts'
          echo ' m mem    set scratch memory to mem Mwords'
          echo ' M mem    set scratch memory to mem Mb'
          echo ' N num    use MPI version with num nodes'
          echo ' o file   redirect output from program to this file in WRKDIR'
          echo ' t dir    change TMPDIR from default to dir'
          echo ' w dir    change WRKDIR from default to dir'
          echo
         }
while [ -n "`echo $1 | grep '^-'`" ]; do
    case $1 in
      -b ) BASDIR=$2
           export BASDIR
	   shift;;
      -d ) optd=1;;
      -D ) optD=0;;
      -ext ) OUTEXT=$2
           shift;;
      -f ) optf=1;;
      -N ) optn=$2
           shift;;
      -m ) WRKMEM=$2
           export WRKMEM
	   shift;;
      -M ) let WRKMEM=$2*128000
           export WRKMEM
           shift;;
      -o ) OUTFIL=$2
           export OUTFIL
	   opto=1
	   shift;;
      -t ) TMPDIR=$2
	   shift;;
      -w ) WRKDIR=`pwd`/$2
	   shift;;
      * ) usage; exit 1;;
   esac
   shift
done
# check for correct input
if [ -z "$1" ]; then
   echo 'Input file[s] not specified'
   usage
   exit 1
fi
if [ -z "$2" ]; then
   molfil=$1
   outnam=$1
else
   molfil=$2
   if [ "$1" = "$2" ]; then
      outnam=$1
   else
      outnam=$1_$2
   fi
fi
#
export TMPDIR
#
echo
echo "   ***************************************** "
echo "   **** OUTPUT FROM DALTON SHELL SCRIPT **** "
echo "   ***************************************** "
echo
echo "   Dalton Release 2.0 (? 2001)"
echo;
echo "   Invocation: $0 $paramlist"
echo; echo "   `date`"
echo;
echo "   Calculation: $1_$molfil  (input files: $1.dal and $molfil.mol)"
echo "   PID        : $$"
echo "   Input dir  : $WRKDIR"
echo "   Scratch dir: $TMPDIR/$outnam"
#echo "  Work memory: $WRKMEM"
echo;
#
if [ ! -d "$TMPDIR" ]; then
   mkdir -p $TMPDIR
fi

    SCRATCHDIR=$TMPDIR/$2;

if [ -d "$TMPDIR" -a -w "$TMPDIR" ]; then
   if [ $optd -eq 1 ] ; then
      rm -rf $TMPDIR/$outnam
   fi
   if [ ! -d "$TMPDIR/$outnam" ]; then
      mkdir -p $TMPDIR/$outnam
   fi
   cd $TMPDIR/$outnam
   if [ -s $WRKDIR/$1.$DALEXT -a -r $WRKDIR/$1.$DALEXT ]; then
      cp $WRKDIR/$1.$DALEXT DALTON.INP
   else
      echo "$WRKDIR/$1.$DALEXT does not exist or is not readable"
      exit 1
   fi
   if [ -s $WRKDIR/$molfil.$MOLEXT -a -r $WRKDIR/$molfil.$MOLEXT ]; then
      cp $WRKDIR/$molfil.$MOLEXT MOLECULE.INP
   else
      echo "$WRKDIR/$molfil.$MOLEXT does not exist or is not readable"
      exit 1
   fi
   if [ $optf -eq 1 ] ; then
      if [ -s $WRKDIR/$outnam.tar.gz -a -r $WRKDIR/$outnam.tar.gz ] ; then
         cp $WRKDIR/$outnam.RST $outnam.tar.gz
	 gunzip $outnam.tar.gz
	 tar xf $outnam.tar
      else
         echo "$WRKDIR/$outnam.tar.gz does not exist or is not readable"
         exit 1
      fi
   fi
else
   echo "$TMPDIR does not exist or is not writeable"
   exit 1
fi
#
if [ $optn -gt 1 ] ; then
   if [ -s $MPIRUN -a -x $MPIRUN ]; then
      if [ -a $DALMPI -a -x $DALMPI ]; then
         $MPIRUN -np $optn $DALMPI
      else
         echo "$DALMPI does not exist or is not executeable"
         exit 1
      fi
   else
      echo "$MPIRUN does not exist or is not executeable"
      exit 1
   fi
else
   if [ -s $DALTON -a -x $DALTON ]; then
      $DALTON
   else
      echo "$DALTON does not exist or is not executeable"
      exit 1
   fi
fi

filelist="SIRIUS.RST RESULTS.RSP RSPVEC SIRIFC DALTON.NCA UNIT1 UNIT2 DALTON.MOL DALTON.ORB DALTON.IRC DALTON.BAS DALTON.TRJ DALTON.CM DALTON.HES DALTON.MOPUN DALTON.WLK molden.inp"

for i in $filelist ; do
	if [ -s $i -a -r $i ] ; then
   	   tarfilelist=$tarfilelist" "$i
	fi
done

if [ -s "first.wrl" -a -r "first.wrl" ] ; then
	tar cf $outnam.tar $tarfilelist *wrl
else
	tar af $outnam.tar *wrl
fi

if [ -s $outnam.tar ] ; then
   gzip $outnam.tar
else
    echo "$outnam.tar has not been created"
fi

if [ -s $outnam.tar.gz ] ; then
	if [ -s $WRKDIR/$outnam.tar.gz ] ; then
	   cp  $WRKDIR/$outnam.tar.gz $WRKDIR/$outnam.tar.gz.bak
      echo "Existing file $WRKDIR/$outnam.tar.gz renamed to $WRKDIR/$outnam.tar.gz.bak"
	fi
   cp $outnam.tar.gz $WRKDIR
else
    echo "$outnam.tar.gz does not exist and has not been copied to working directory"
fi

   if [ -s $WRKDIR/$outnam.$OUTEXT ];then
      cp $WRKDIR/$outnam.$OUTEXT $WRKDIR/$outnam.$OUTEXT.bak
      echo "Existing file $WRKDIR/$outnam.$OUTEXT renamed to $WRKDIR/$outnam.$OUTEXT.bak"
   fi
   if [ $opto -eq 1 ] ; then
      if [ "$OUTFIL" != "$outnam.$OUTEXT" ]; then
         if [ -s $WRKDIR/$OUTFIL -a -r $WRKDIR/$OUTFIL ]; then
            cp $WRKDIR/$OUTFIL $WRKDIR/$outnam.$OUTEXT
            rm -rf $WRKDIR/$OUTFIL
         else	
            echo "$WRKDIR/$OUTFIL has not been created from the present run"
         fi
      fi
   else
      if [ -s DALTON.OUT -a -r DALTON.OUT ]; then
         cp DALTON.OUT $WRKDIR/$outnam.$OUTEXT
      else
         echo "DALTON.OUT has not been created from the present run"
      fi
   fi
cd $WRKDIR
if [ $optD -eq 1 ] ; then
   rm -rf $TMPDIR/$outnam
fi
