#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -e /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -e /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > dft_blyp_nosym.info <<'%EOF%'
   dft_blyp_nosym
   --------------
   Molecule:         HCN
   Wave Function:    DFT BLYP / aug-cc-pVDZ
   Test Purpose:     Check BLYP functional w/o symmetry
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > dft_blyp_nosym.mol <<'%EOF%'
BASIS 
aug-cc-pVDZ
HCN 
aug-cc-pVDZ basis
    3    0
        1.    1    
H   0.3   0.0    -1.0 
        7.    1    
N   0.3   0.0     1.5
        6.    1    
0   0.0   0.0     0.0 
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > dft_blyp_nosym.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE 
**INTEGRALS
.NOSUP
**WAVE FUNCTIONS
.HF
*HF INPUT
.BLYP
*ORBITAL
.NOSUPSYM
*AUXILLIAR
.NOSUPMAT
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >dft_blyp_nosym.check
cat >>dft_blyp_nosym.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Energy                              -92.114499893847
CRIT1=`$GREP "Final * HF energy\: * \-92\.1144998....." $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="DFT/BLYP ENERGY NOT CORRECT"

PASSED=1
for i in 1 
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
