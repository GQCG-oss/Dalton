#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > rsp_soppapolarnosymm.info <<'%EOF%'
   rsp_soppapolarnosymm
   --------------------
   Molecule:         H2O
   Wave Function:    MP2 (SOPPA) / cc-pVDZ
   Test Purpose:     Polarizability and C6/C8. No symmetry
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_soppapolarnosymm.mol <<'%EOF%'
BASIS
cc-pVDZ
SOPPA singlet properties without symmetry.

    2    0
        8.    1
O     0.0 -0.2249058930 0.0
        1.    2
H     1.45235 0.899623 0.0
H    -1.45235 0.899623 0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_soppapolarnosymm.dal <<'%EOF%'
**GENERAL
.RUN RESPONSE
**WAVE FUNCTION
.HF
.MP2
**RESPONSE
.S0MIX
.NOITRA
.SOPPA
*LINEAR
.DIPLEN
.FREQUE
 2
0.0 0.0592
*C6
.DIPLEN
.MAXMOM
  6
*END OF INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >rsp_soppapolarnosymm.check
cat >>rsp_soppapolarnosymm.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "O * 1 * 8 * 26 * 14 * \[9s4p1d\|3s2p1d\]" $log | wc -l`
CRIT2=`$GREP "H * 1 * 1 * 7 * 5 * \[4s1p\|2s1p\]" $log | wc -l`
CRIT3=`$GREP "H * 1 * 1 * 7 * 5 * \[4s1p\|2s1p\]" $log | wc -l`
CRIT4=`$GREP "total\: * 3 * 10 * 40 * 24" $log | wc -l`
CRIT5=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=7
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 9" $log | wc -l`
CRIT2=`$GREP "1 * O * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (\-0|\-)\.2249058930" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * H * x * 1\.4523500000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.8996230000" $log | wc -l`
CRIT7=`$GREP "6 * z * (0| )\.0000000000" $log | wc -l`
CRIT8=`$GREP "7 * H * x * \-1\.4523500000" $log | wc -l`
CRIT9=`$GREP "8 * y * (0| )\.8996230000" $log | wc -l`
CRIT10=`$GREP "9 * z * (0| )\.0000000000" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[2]=10
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Energies
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-76\.02568148[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-76\.23066682[0-9][0-9]" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="ENERGIES NOT CORRECT"

# Static polarizabilites
CRIT1=`$GREP "\@.*XDIPLEN .* XDIPLEN .* 7\.39668978750[3-5](D|E)\+00" $log | wc -l`
CRIT2=`$GREP "\@.*YDIPLEN .* YDIPLEN .* 5\.50008208901[3-5](D|E)\+00" $log | wc -l`
CRIT3=`$GREP "\@.*ZDIPLEN .* ZDIPLEN .* 3\.20692543155[7-9](D|E)\+00" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=3
ERROR[4]="STATIC POLARIZABILITIES NOT CORRECT"

# Frequency dependant polarizabilites
CRIT1=`$GREP "\@ *a\.u\.\: * 5\.9200000(D|E)\-02" $log | wc -l`
CRIT2=`$GREP "\@.*XDIPLEN .* XDIPLEN .* 7\.46290434031[5-7](D|E)\+00" $log | wc -l`
CRIT3=`$GREP "\@.*YDIPLEN .* YDIPLEN .* 5\.56057357975[7-9](D|E)\+00" $log | wc -l`
CRIT4=`$GREP "\@.*ZDIPLEN .* ZDIPLEN .* 3\.2517963568(5|6)(0|1|9)(D|E)\+00" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[5]=4
ERROR[5]="FREQUENCY DEPENDANT POLARIZABILITIES NOT CORRECT"

# Static C6/C8 polarizabilities
CRIT1=`$GREP "XDIPLEN .* XDIPLEN .* 7\.396690471[6-8]" $log | wc -l`
CRIT2=`$GREP "YDIPLEN .* YDIPLEN .* 5\.500082062[1-3]" $log | wc -l`
CRIT3=`$GREP "ZDIPLEN .* ZDIPLEN .* 3\.206925436[4-6]" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[6]=6
ERROR[6]="STATIC C6/C8 POLARIZABILITIES NOT CORRECT"

# Cauchy moments
CRIT1=`$GREP "0 * 7\.3966904716[5-7]........[0-9](D|E)\+00" $log | wc -l`
CRIT2=`$GREP "2 * 1\.8653675153[1-3]........[0-9](D|E)\+01" $log | wc -l`
CRIT3=`$GREP "4 * 6\.7441133534[5-7]........[0-9](D|E)\+01" $log | wc -l`
CRIT4=`$GREP "6 * 2\.6684327715[4-6]........[0-9](D|E)\+02" $log | wc -l`
CRIT5=`$GREP "8 * 1\.0926032477[5-7]........[0-9](D|E)\+03" $log | wc -l`
CRIT6=`$GREP "10 * 4\.5792681586[1-3]........[0-9](D|E)\+03" $log | wc -l`
CRIT7=`$GREP "12 * 1\.958667941(88|89|90)........[0-9](D|E)\+04" $log | wc -l`
CRIT8=`$GREP "14 * 8\.5338584634[0-2]........[0-9](D|E)\+04" $log | wc -l`
CRIT9=`$GREP "16 * 3\.78002082(699|700|701)........[0-9](D|E)\+05" $log | wc -l`
CRIT10=`$GREP "18 * 1\.698511148(58|59|60)........[0-9](D|E)\+06" $log | wc -l`
CRIT11=`$GREP "20 * 7\.7251553460[0-2]........[0-9](D|E)\+06" $log | wc -l`
CRIT12=`$GREP "22 * 3\.548894110(58|59|60|61)........[0-9](D|E)\+07" $log | wc -l`
CRIT13=`$GREP "24 * 1\.643603714(48|49|50)........[0-9](D|E)\+08" $log | wc -l`
CRIT14=`$GREP "26 * 7\.6613034934[6-8]........[0-9](D|E)\+08" $log | wc -l`
CRIT15=`$GREP "28 * 3\.5893027074[1-3]........[0-9](D|E)\+09" $log | wc -l`
CRIT16=`$GREP "30 * 1\.688225384(18|19|20|21)........[0-9](D|E)\+10" $log | wc -l`
CRIT17=`$GREP "32 * 7\.9647600322[1-3]........[0-9](D|E)\+10" $log | wc -l`
CRIT18=`$GREP "34 * 3\.7664210137[2-4]........[0-9](D|E)\+11" $log | wc -l`
CRIT19=`$GREP "36 * 1\.784263510(09|10|11)........[0-9](D|E)\+12" $log | wc -l`
CRIT20=`$GREP "38 * 8\.4640415866[7-9]........[0-9](D|E)\+12" $log | wc -l`
CRIT21=`$GREP "0 * 5\.500082062(18|19|20)........[0-9](D|E)\+00" $log | wc -l`
CRIT22=`$GREP "2 * 1\.6908256142[2-4]........[0-9](D|E)\+01" $log | wc -l`
CRIT23=`$GREP "4 * 9\.8169248164[3-5]........[0-9](D|E)\+01" $log | wc -l`
CRIT24=`$GREP "6 * 6\.4399999206[6-8]........[0-9](D|E)\+02" $log | wc -l`
CRIT25=`$GREP "8 * 4\.3507747508[4-6]........[0-9](D|E)\+03" $log | wc -l`
CRIT26=`$GREP "10 * 2\.9665746591[2-4]........[0-9](D|E)\+04" $log | wc -l`
CRIT27=`$GREP "12 * 2\.0291887385[1-3]........[0-9](D|E)\+05" $log | wc -l`
CRIT28=`$GREP "14 * 1\.389555391(68|69|70)........[0-9](D|E)\+06" $log | wc -l`
CRIT29=`$GREP "16 * 9\.5192348233[3-5]........[0-9](D|E)\+06" $log | wc -l`
CRIT30=`$GREP "18 * 6\.5221341015[5-7]........[0-9](D|E)\+07" $log | wc -l`
CRIT31=`$GREP "20 * 4\.4688864653[3-5]........[0-9](D|E)\+08" $log | wc -l`
CRIT32=`$GREP "22 * 3\.0620813709[0-2]........[0-9](D|E)\+09" $log | wc -l`
CRIT33=`$GREP "24 * 2\.0981518498[6-8]........[0-9](D|E)\+10" $log | wc -l`
CRIT34=`$GREP "26 * 1\.4376663141[7-9]........[0-9](D|E)\+11" $log | wc -l`
CRIT35=`$GREP "28 * 9\.8509843947[3-5]........[0-9](D|E)\+11" $log | wc -l`
CRIT36=`$GREP "30 * 6\.7499614295[0-2]........[0-9](D|E)\+12" $log | wc -l`
CRIT37=`$GREP "32 * 4\.6251199051[5-7]........[0-9](D|E)\+13" $log | wc -l`
CRIT38=`$GREP "34 * 3\.1691640239[0-2]........[0-9](D|E)\+14" $log | wc -l`
CRIT39=`$GREP "36 * 2\.1715330517[3-5]........[0-9](D|E)\+15" $log | wc -l`
CRIT40=`$GREP "38 * 1\.487949434(38|39|40)........[0-9](D|E)\+16" $log | wc -l`
CRIT41=`$GREP "0 * 3\.2069254365[0-2]........[0-9](D|E)\+00" $log | wc -l`
CRIT42=`$GREP "2 * 1\.2288797507[2-4]........[0-9](D|E)\+01" $log | wc -l`
CRIT43=`$GREP "4 * 1\.4052083983[1-3]........[0-9](D|E)\+02" $log | wc -l`
CRIT44=`$GREP "6 * 1\.722465142(49|50|51)........[0-9](D|E)\+03" $log | wc -l`
CRIT45=`$GREP "8 * 2\.1201463154[2-4]........[0-9](D|E)\+04" $log | wc -l`
CRIT46=`$GREP "10 * 2\.6106302539[7-9]........[0-9](D|E)\+05" $log | wc -l`
CRIT47=`$GREP "12 * 3\.2147152239[6-8]........[0-9](D|E)\+06" $log | wc -l`
CRIT48=`$GREP "14 * 3\.9585999702[7-9]........[0-9](D|E)\+07" $log | wc -l`
CRIT49=`$GREP "16 * 4\.8746220621[5-7]........[0-9](D|E)\+08" $log | wc -l`
CRIT50=`$GREP "18 * 6\.0026124907[6-8]........[0-9](D|E)\+09" $log | wc -l`
CRIT51=`$GREP "20 * 7\.3916206203[6-8]........[0-9](D|E)\+10" $log | wc -l`
CRIT52=`$GREP "22 * 9\.102046070(78|79|80)........[0-9](D|E)\+11" $log | wc -l`
CRIT53=`$GREP "24 * 1\.1208264998[4-6]........[0-9](D|E)\+13" $log | wc -l`
CRIT54=`$GREP "26 * 1\.3801864251[3-5]........[0-9](D|E)\+14" $log | wc -l`
CRIT55=`$GREP "28 * 1\.6995623929[1-3]........[0-9](D|E)\+15" $log | wc -l`
CRIT56=`$GREP "30 * 2\.0928421514[6-8]........[0-9](D|E)\+16" $log | wc -l`
CRIT57=`$GREP "32 * 2\.5771270823[7-9]........[0-9](D|E)\+17" $log | wc -l`
CRIT58=`$GREP "34 * 3\.1734758371[7-9]........[0-9](D|E)\+18" $log | wc -l`
CRIT59=`$GREP "36 * 3\.9078200520[4-6]........[0-9](D|E)\+19" $log | wc -l`
CRIT60=`$GREP "38 * 4\.8120919593[0-2]........[0-9](D|E)\+20" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27 \+ $CRIT28 \+ $CRIT29 \+ $CRIT30 \+ \
		$CRIT31 \+ $CRIT32 \+ $CRIT33 \+ $CRIT34 \+ $CRIT35 \+ $CRIT36 \+ \
		$CRIT37 \+ $CRIT38 \+ $CRIT39 \+ $CRIT40 \+ $CRIT41 \+ $CRIT42 \+ \
		$CRIT43 \+ $CRIT44 \+ $CRIT45 \+ $CRIT46 \+ $CRIT47 \+ $CRIT48 \+ \
		$CRIT49 \+ $CRIT50 \+ $CRIT51 \+ $CRIT52 \+ $CRIT53 \+ $CRIT54 \+ \
		$CRIT55 \+ $CRIT56 \+ $CRIT57 \+ $CRIT58 \+ $CRIT59 \+ $CRIT60`
CTRL[7]=60
DIFF[7]=`expr ${CTRL[7]} \- ${TEST[7]}`
ERROR[7]="${DIFF[7]} OUT OF ${CTRL[7]} CAUCHY MOMENTS NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
