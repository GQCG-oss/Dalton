#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -e /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -e /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > walk_polar.info <<'%EOF%'
   walk_polar
   ----------
   Molecule:         H2O
   Wave Function:    SCF
   Test Purpose:     Geometry optimization using .WALK module (2nd order),
                     with a calculation of static and dynamic
                     polarizabilities using all three different ways of
                     calculating them, vibrational analysis and Cioslowski
                     population anaylsis
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > walk_polar.mol <<'%EOF%'
ATOMBASIS
Geometry optimization using WALK module plus
static and dynamic polarizabilities
    2    2  X  Z
        8.    1 6-311G Pol 1 0.0845D0 3 1.292D0 2 0.0845D0
O     0.0 -0.2249058930 0.0
        1.    1 6-311G Pol 1 0.0360D0 2 0.750D0
H     1.45235 0.899623 0.0
H    -1.45235 0.899623 0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > walk_polar.dal <<'%EOF%'
**GENERAL
.WALK
**WAVE FUNCTION
.HF
**FINAL
.POLARI
.VIBANA
.POPANA
.ALPHA
*ABALNR
.FREQUE
 3
0.0 0.0592 0.096
**RESPONSE
*LINEAR
.DIPLEN
.FREQUE
 2
0.0 0.0592
*END OF INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >walk_polar.check
cat >>walk_polar.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Reading from atombasis:
CRIT1=`$GREP "O * 1 * 8 * 35 * 22 * \[12s6p1d\|5s4p1d\]" $log | wc -l`
CRIT2=`$GREP "H * 2 * 1 * 9 * 7 * \[6s1p\|4s1p\]" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2`
CTRL[1]=2
ERROR[1]="ATOMBASIS NOT READ CORRECTLY"

# Reading molecular geometry:
CRIT1=`$GREP "1 * O * x *  (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "2 *     y * (\-0|\-)\.2249058930" $log | wc -l`
CRIT3=`$GREP "3 *     z *  (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "4 * H * 1 * x *  1\.4523500000" $log | wc -l`
CRIT5=`$GREP "5 *         y *  (0| )\.8996230000" $log | wc -l`
CRIT6=`$GREP "6 *         z *  (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "7 * H * 2 * x * \-1\.4523500000" $log | wc -l`
CRIT8=`$GREP "8 *         y *  (0| )\.8996230000" $log | wc -l`
CRIT9=`$GREP "9 *         z *  (0| )\.0000000000" $log | wc -l`
CRIT10=`$GREP "Total number of coordinates: * 9" $log | wc -l`
TEST[2]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ \
              $CRIT6  \+ $CRIT7  \+ $CRIT8  \+ $CRIT9  \+ $CRIT10`
CTRL[2]=10
ERROR[2]="MOLECULAR GEOMETRY CORRECT"

# Nuclear repulsion energy:
CRIT1=`$GREP "Nuclear repulsion energy : * 9\.0550045256[0-9][0-9]" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="NUCLEAR REPULSION ENERGY NOT CORRECT"

# Wave function:
#CRIT1=`$GREP "Number of closed shell electrons * 10" $log | wc -l`
#CRIT2=`$GREP "Number of electrons in active shells * 0" $log | wc -l`
#CRIT3=`$GREP "Number of active orbitals * 0" $log | wc -l`
#CRIT4=`$GREP "Total number of orbitals * 36" $log | wc -l`
#CRIT5=`$GREP "Spin multiplicity * 1" $log | wc -l`
#CRIT6=`$GREP "Total number of symmetries * 4" $log | wc -l`
#CRIT7=`$GREP "Reference state symmetry * 1" $log | wc -l`
#TEST[4]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ \
#              $CRIT6  \+ $CRIT7`
#CTRL[4]=7
#ERROR[4]="INCORRECT WAVE FUNCTION"

# Symmetry:
CRIT1=`$GREP "Number of coordinates in each symmetry: * 3 * 3 * 2 * 1" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry: * 17 * 11 * 6 * 2" $log | wc -l`
TEST[5]=`expr $CRIT1  \+ $CRIT2`
CTRL[5]=2
ERROR[5]="SYMMETRY IS NOT CORRECT"

# Relativistic corrections:
CRIT1=`$GREP "Darwin correction\: * (0| )\.197451423[0-9] au" $log | wc -l`
CRIT2=`$GREP "Mass\-velocity correction\: * (\-0|\-)\.248963761[0-9] au" $log | wc -l`
CRIT3=`$GREP "Total relativistic correction\: * (\-0|\-)\.051512338[0-9] au \((0| ).0677\%\)" $log | wc -l`
CRIT4=`$GREP "Non\-relativistic \+ relativistic energy\: * \-76\.102971857[0-9] au" $log | wc -l`
TEST[6]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[6]=4
ERROR[6]="RELATIVISTIC CORRECTIONS NOT CORRECT"

# SCF energy, 1st iteration:
CRIT1=`$GREP "Total energy * \-76\.051459519[0-9] au \(Hartrees\)" $log | wc -l`
CRIT2=`$GREP "\-2069\.4654259[0-9] eV" $log | wc -l`
CRIT3=`$GREP "\-199673\.078[0-9] kJ\/mol" $log | wc -l`
TEST[7]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[7]=3
ERROR[7]="INITIAL ENERGY NOT CORRECT"

# Gradient, 1st iteration:
CRIT1=`$GREP "O * y * (\-0|\-)\.041024888[0-9]" $log | wc -l`
CRIT2=`$GREP "H * x * (0| )\.049511335[0-9]" $log | wc -l`
CRIT3=`$GREP "H * y * (0| )\.041024888[0-9]" $log | wc -l`
CRIT4=`$GREP "O * (0| )\.0000000000 * (\-0|\-)\.041024888[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "H * 1 * (0| )\.024755667[0-9] * (0| )\.020512444[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "H * 2 * (\-0|\-)\.024755667[0-9] * (0| )\.020512444[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[8]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6`
CTRL[8]=6
ERROR[8]="INITIAL GRADIENT NOT CORRECT"

# Hessian, 1st iteration:
CRIT1=`$GREP "O * y * (0| )\.47225[0-9]" $log | wc -l`
CRIT2=`$GREP "H * x * (\-0|\-)\.36392[0-9] * (0| )\.78089[0-9]" $log | wc -l`
CRIT3=`$GREP "H * y * (\-0|\-)\.47225[0-9] * (0| )\.36392[0-9] * (0| )\.47225[0-9]" $log | wc -l`
CRIT4=`$GREP "O * x * (0| )\.65773[0-9]" $log | wc -l`
CRIT5=`$GREP "H * x * (\-0|\-)\.65773[0-9] * (0| )\.65773[0-9]" $log | wc -l`
CRIT6=`$GREP "H * y * (\-0|\-)\.48102[0-9] * (0| )\.48102[0-9] * (0| )\.4065[3-4][0-9]" $log | wc -l`
CRIT7=`$GREP "O * z * (0| )\.03648[0-9]" $log | wc -l`
CRIT8=`$GREP "H * z * (\-0|\-)\.03648[0-9] * (0| )\.03648[0-9]" $log | wc -l`
CRIT9=`$GREP "H * z * (0| )\.0340[8-9][0-9]" $log | wc -l`
CRIT10=`$GREP "O * x * (0| )\.65773[0-9]" $log | wc -l`
CRIT11=`$GREP "O * y * (0| )\.000000 * (0| )\.47225[0-9]" $log | wc -l`
CRIT12=`$GREP "O * z * (0| )\.000000 * (0| )\.000000 * (0| )\.03648[0-9]" $log | wc -l`
CRIT13=`$GREP "H * 1 x * (\-0|\-)\.32886[0-9] * (\-0|\-)\.18196[0-9] * (0| )\.000000 * (0| )\.35965[0-9]" $log | wc -l`
CRIT14=`$GREP "H * 1 y * (\-0|\-)\.24051[0-9] * (\-0|\-)\.23612[0-9] * (0| )\.000000 * (0| )\.21123[0-9 * (0| )\.219[6-7][0-9][0-9]" $log | wc -l`
CRIT15=`$GREP "H * 1 z * (0| )\.000000 * (0| )\.000000 * (\-0|\-)\.01824[0-9] * (0| )\.000000 * (0| )\.000000 * (0| )\.01764[0-9]" $log | wc -l`
CRIT16=`$GREP "H * 2 x * (\-0|\-)\.32886[0-9] * (0| )\.18196[0-9] * (0| )\.000000 * (\-0|\-)\.03078[0-9] * (0| )\.02927[0-9] * (0| )\.000000" $log | wc -l`
CRIT17=`$GREP "H * 2 y * (0| )\.24051[0-9] * (\-0|\-)\.23612[0-9] * (0| )\.000000 * (\-0|\-)\.02927[0-9] * (0| )\.01642[0-9] * (0| )\.000000" $log | wc -l`
CRIT18=`$GREP "H * 2 z * (0| )\.000000 * (0| )\.000000 * (\-0|\-)\.01824[0-9] * (0| )\.000000 * (0| )\.000000 * (0| )\.00059[0-9]" $log | wc -l`
CRIT19=`$GREP "H * 2 x * (0| )\.35965[0-9]" $log | wc -l`
CRIT20=`$GREP "H * 2 y * (\-0|\-)\.21123[0-9] * (0| )\.219[6-7][0-9][0-9]" $log | wc -l`
CRIT21=`$GREP "H * 2 z * (0| )\.000000 * (0| )\.000000 * (0| )\.01764[0-9]" $log | wc -l`
TEST[9]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ \
              $CRIT6  \+ $CRIT7  \+ $CRIT8  \+ $CRIT9  \+ $CRIT10 \+ \
              $CRIT11 \+ $CRIT12 \+ $CRIT13 \+ $CRIT14 \+ $CRIT15 \+ \
              $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ $CRIT19 \+ $CRIT20 \+ \
              $CRIT21`
CTRL[9]=22
ERROR[9]="INITIAL HESSIAN NOT CORRECT"

# Dipole moment, 1st iteration:
CRIT1=`$GREP "(0| )\.887038 au * 2\.254625 Debye" $log | wc -l`
CRIT2=`$GREP "y * (0| )\.8870379[0-9] * 2\.2546253[0-9]" $log | wc -l`
TEST[10]=`expr $CRIT1  \+ $CRIT2`
CTRL[10]=2
ERROR[10]="INITIAL DIPOLE MOMENT NOT CORRECT"

# Step, 1st iteration:
CRIT1=`$GREP "O * (0| )\.0000000000 * (0| )\.039540679[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "H * 1 * (\-0|\-)\.035762415[0-9] * (\-0|\-)\.019770339[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "H * 2 * (0| )\.035762415[0-9] * (\-0|\-)\.019770339[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[11]=`expr $CRIT1  \+ $CRIT2 \+ $CRIT3`
CTRL[11]=3
ERROR[11]="INITIAL STEP NOT CORRECT"

# Geometry, 2nd iteration:
CRIT1=`$GREP "O * (0| )\.0000000000 * (\-0|\-)\.185365213[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "H * 1 * 1\.416587584[0-9] * (0| )\.879852660[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "H * 2 * \-1\.416587584[0-9] * (0| )\.879852660[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[12]=`expr $CRIT1  \+ $CRIT2 \+ $CRIT3`
CTRL[12]=6
ERROR[12]="SECOND GEOMETRY NOT CORRECT"

# SCF energy, 2nd iteration:
CRIT1=`$GREP "Total energy * \-76\.053397783[0-9] au \(Hartrees\)" $log | wc -l`
CRIT2=`$GREP "\-2069\.5181688[0-9] eV" $log | wc -l`
CRIT3=`$GREP "\-199678\.167[0-9] kJ\/mol" $log | wc -l`
TEST[13]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[13]=3
ERROR[13]="SECOND ENERGY NOT CORRECT"

# Gradient, 2nd iteration:
CRIT1=`$GREP "O * y * (0| )\.004256062[0-9]" $log | wc -l`
CRIT2=`$GREP "H * x * (\-0|\-)\.006889269[0-9]" $log | wc -l`
CRIT3=`$GREP "H * y * (\-0|\-)\.004256062[0-9]" $log | wc -l`
TEST[14]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[14]=3
ERROR[14]="SECOND GRADIENT NOT CORRECT"

# Hessian, 1st iteration:
CRIT1=`$GREP "O * y * (0| )\.53851[0-9]" $log | wc -l`
CRIT2=`$GREP "H * x * (\-0|\-)\.49820[0-9] * (0| )\.95810[0-9]" $log | wc -l`
CRIT3=`$GREP "H * y * (\-0|\-)\.53851[0-9] * (0| )\.49820[0-9] * (0| )\.53851[0-9]" $log | wc -l`
CRIT4=`$GREP "O * x * (0| )\.8294[8-9][0-9]" $log | wc -l`
CRIT5=`$GREP "H * x * (\-0|\-)\.8294[8-9][0-9] * (0| )\.8294[8-9][0-9]" $log | wc -l`
CRIT6=`$GREP "H * y * (\-0|\-)\.62674[0-9] * (0| )\.62674[0-9] * (0| )\.46642[0-9]" $log | wc -l`
CRIT7=`$GREP "O * z * (\-0|\-)\.00399[0-9]" $log | wc -l`
CRIT8=`$GREP "H * z * (0| )\.00399[0-9] * (\-0|\-)\.00399[0-9]" $log | wc -l`
CRIT9=`$GREP "H * z * (\-0|\-)\.00486[0-9]" $log | wc -l`
TEST[15]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ \
               $CRIT6  \+ $CRIT7  \+ $CRIT8  \+ $CRIT9`
CTRL[15]=10
ERROR[15]="SECOND HESSIAN NOT CORRECT"

# SCF energy, 3rd iteration:
CRIT1=`$GREP "Total energy * \-76\.053423549[0-9] au \(Hartrees\)" $log | wc -l`
TEST[16]=`expr $CRIT1`
CTRL[16]=1
ERROR[16]="THIRD ENERGY NOT CORRECT"

# SCF energy, 4th iteration:
CRIT1=`$GREP "Total energy * \-76\.053423553[0-9] au \(Hartrees\)" $log | wc -l`
#TEST[17]=`expr $CRIT1`
#CTRL[17]=2
#ERROR[17]="FOURTH ENERGY NOT CORRECT"

# Geometry optimization converged:
CRIT1=`$GREP "Norm of molecular gradient: * (0| )\.0000000[0-9][0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "Change in energy since start of walk:(\-0| \-)\.001964033[0-9] au" $log | wc -l`
CRIT3=`$GREP "Geometry optimization has converged." $log | wc -l`
TEST[18]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[18]=3
ERROR[18]="GEOMETRY OPTIMIZATION FAILED"

# Dipole moment gradient:
CRIT1=`$GREP "O * y * (\-0|\-)\.4481791[0-9]" $log | wc -l`
CRIT2=`$GREP "H * x * (\-0|\-)\.0594897[0-9]" $log | wc -l`
CRIT3=`$GREP "H * y * (0| )\.4481791[0-9]" $log | wc -l`
CRIT4=`$GREP "O * x * (\-0|\-)\.5985228[0-9]" $log | wc -l`
CRIT5=`$GREP "H * x * (0| )\.5985228[0-9]" $log | wc -l`
CRIT6=`$GREP "H * y * (\-0|\-)\.1580933[0-9]" $log | wc -l`
CRIT7=`$GREP "O * z * (\-0|\-)\.8091631[0-9]" $log | wc -l`
CRIT8=`$GREP "H * z * (0| )\.8091631[0-9]" $log | wc -l`
TEST[19]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ \
              $CRIT6  \+ $CRIT7  \+ $CRIT8`
CTRL[19]=9
ERROR[19]="DIPOLE MOMENT GRADIENT NOT CORRECT"

# Cioslowski charges:
CRIT1=`$GREP "O * (\-0|\-)\.618622" $log | wc -l`
CRIT2=`$GREP "H * 1 * (0| )\.309311" $log | wc -l`
CRIT3=`$GREP "H * 2 * (0| )\.309311" $log | wc -l`
TEST[20]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[20]=3
ERROR[20]="CIOSLOWSKI CHARGES NOT CORRECT"

# Static polarizabilities:
CRIT1=`$GREP "Ex * 7\.42069[0-9] * (0| )\.000000 * (0| )\.000000" $log | wc -l`
CRIT2=`$GREP "Ey * (0| )\.000000 * 5\.84951[0-9] * (0| )\.000000" $log | wc -l`
CRIT3=`$GREP "Ez * (0| )\.000000 * (0| )\.000000 * 5\.50117[0-9]" $log | wc -l`
TEST[21]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[21]=3
ERROR[21]="STATIC POLARIZABILITIES NOT CORRECT"

# Dynamic polarizabilities:
CRIT1=`$GREP "Ex * 7\.420693[0-9] * (0| )\.0000000 * (0| )\.0000000" $log | wc -l`
CRIT2=`$GREP "Ey * (0| )\.0000000 * 5\.849519[0-9] * (0| )\.0000000" $log | wc -l`
CRIT3=`$GREP "Ez * (0| )\.0000000 * (0| )\.0000000 * 5\.501171[0-9]" $log | wc -l`
CRIT4=`$GREP "Ex * 7\.478371[0-9] * (0| )\.0000000 * (0| )\.0000000" $log | wc -l`
CRIT5=`$GREP "Ey * (0| )\.0000000 * 5\.908600[0-9] * (0| )\.0000000" $log | wc -l`
CRIT6=`$GREP "Ez * (0| )\.0000000 * (0| )\.0000000 * 5\.576153[0-9]" $log | wc -l`
CRIT7=`$GREP "Ex * 7\.575024[0-9] * (0| )\.0000000 * (0| )\.0000000" $log | wc -l`
CRIT8=`$GREP "Ey * (0| )\.0000000 * 6\.009499[0-9] * (0| )\.0000000" $log | wc -l`
CRIT9=`$GREP "Ez * (0| )\.0000000 * (0| )\.0000000 * 5\.707163[0-9]" $log | wc -l`
TEST[22]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ \
              $CRIT6  \+ $CRIT7  \+ $CRIT8  \+ $CRIT9`
CTRL[22]=9
ERROR[22]="DYNAMIC POLARIZABILITIES NOT CORRECT"

# Isotopic masses:
CRIT1=`$GREP "O * 15\.994915" $log | wc -l`
CRIT2=`$GREP "H * 1 * 1\.007825" $log | wc -l`
CRIT3=`$GREP "H * 2 * 1\.007825" $log | wc -l`
TEST[23]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[23]=6
ERROR[23]="ISOTOPIC MASSES NOT CORRECT"

# Rotational constants:
CRIT1=`$GREP "884411\.508[0-9] * 442438\.787[0-9] * 294907\.388[0-9] MHz" $log | wc -l`
CRIT2=`$GREP "29\.50079[0-9] * 14\.7581[6-7][0-9] * 9\.83705[0-9] cm\-1" $log | wc -l`
TEST[24]=`expr $CRIT1  \+ $CRIT2`
CTRL[24]=2
ERROR[24]="ROTATIONAL CONSTANTS NOT CORRECT"

# Vibrational frequencies:
CRIT1=`$GREP "2 * A1 * 4142\.56 * (0| )\.018875" $log | wc -l`
CRIT2=`$GREP "3 * A1 * 1726\.25 * (0| )\.007865" $log | wc -l`
CRIT3=`$GREP "1 * B2 * 4244\.54 * (0| )\.019340" $log | wc -l`
TEST[25]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[25]=3
ERROR[25]="VIBRATIONAL FREQUENCIES NOT CORRECT"

# IR intensities:
CRIT1=`$GREP "2 * A1 * ....... * ........ * 25\.488 * (0| )\.6032" $log | wc -l`
CRIT2=`$GREP "3 * A1 * ....... * ........ * 85\.614 * 2\.0261" $log | wc -l`
CRIT3=`$GREP "1 * B2 * ....... * ........ * 88\.280 * 2\.0892" $log | wc -l`
TEST[26]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[26]=3
ERROR[26]="IR INTENSITIES NOT CORRECT"

# Molecular partition function:
CRIT1=`$GREP "50\.00 * 3\.4600(D\+|E\+)04 * 6\.07 * 1\.0000 * 2\.10090[0-9](D\+|E\+)05" $log | wc -l`
CRIT2=`$GREP "273\.15 * 2\.4136(D\+|E\+)06 * 72\.07 * 1\.0001 * 1\.73963[0-9](D\+|E\+)08" $log | wc -l`
CRIT3=`$GREP "298\.15 * 3\.0043(D\+|E\+)06 * 82\.07 * 1\.0002 * 2\.46621[0-9](D\+|E\+)08" $log | wc -l`
CRIT4=`$GREP "1000\.00 * 6\.1895(D\+|E\+)07 * 498\.61 * 1\.0963 * 3\.38329[0-9](D\+|E\+)10" $log | wc -l`
CRIT5=`$GREP "2000\.00 * 3\.5013(D\+|E\+)08 * 1406\.96 * 1\.5548 * 7\.65921[0-9](D\+|E\+)11" $log | wc -l`
TEST[27]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5`
CTRL[27]=5
ERROR[27]="PARTITION FUNCTION NOT CORRECT"

# Total polarizabilities
CRIT1=`$GREP "EA * 1\.119315 * (0| )\.000000 * (0| )\.000000" $log | wc -l`
CRIT2=`$GREP "EB * (0| )\.000000 * (0| )\.988175 * (0| )\.000000" $log | wc -l`
CRIT3=`$GREP "EC * (0| )\.000000 * (0| )\.000000 * (0| )\.815190" $log | wc -l`
TEST[28]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[28]=4
ERROR[28]="TOTAL POLARIZABILITIES NOT CORRECT"

# Check for integrals:
CRIT1=`$GREP "TRACTL\: Integral transformation abandoned\," $log | wc -l`
CRIT2=`$GREP "the required MO integrals are already available\." $log | wc -l`
TEST[29]=`expr $CRIT1  \+ $CRIT2`
CTRL[29]=2
ERROR[29]="MO INTEGRALS NOT AVAILABLE"

# Linear response:
CRIT1=`$GREP "Value of linear response\: * 5\.84951933[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "Value of linear response\: * 5\.90860075[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "Value of linear response\: * 7\.42069344[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT4=`$GREP "Value of linear response\: * 7\.47837166[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT5=`$GREP "Value of linear response\: * 5\.50117162[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT6=`$GREP "Value of linear response\: * 5\.57615391[0-9][0-9][0-9][0-9]" $log | wc -l`
TEST[30]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ $CRIT6`
CTRL[30]=6
ERROR[30]="LINEAR RESPONSE NOT CORRECT"

PASSED=1
for i in 1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 \
         26 27 28 29 30
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
