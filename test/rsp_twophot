#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > rsp_twophot.info <<'%EOF%'
   rsp_twophot
   -----------
   Molecule:         KUM1
   Wave Function:    SCF / 3-21G
   Test Purpose:     Two-photon absorption
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_twophot.mol <<'%EOF%'
BASIS
3-21G
Two-photon absorption

    2    3  X  Y  Z1
      6.0    4
C      0.6289236   0.0000000   0.0000000
C      1.9404215   0.0000000   0.0000000
C      2.8397340   1.1742575   0.0000000
C      4.1286140   0.7285165   0.0000000
      1.0    2
H      2.4725314   2.1982533   0.0000000
H      5.0413894   1.3219498   0.0000000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_twophot.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
**INTEGRALS
.DIPLEN
**WAVE FUNCTION
.HF
*SCF INPUT
.HF OCC
11 10 7 6 2 2 1 1
*ORBITAL
.MOSTART
 H1DIAG
**RESPONSE
*QUADRATIC
.SINGLE
.TWO-PHOTON
.ROOTS
5 0 0 0 0 0 0 0
*END OF
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >rsp_twophot.check
cat >>rsp_twophot.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Integral setup
CRIT1=`$GREP "Calculation of one\- and two\-electron Hamiltonian integrals\." $log | wc -l`
CRIT2=`$GREP "The following one\-electron property integrals are calculated\:" $log | wc -l`
CRIT3=`$GREP "\- overlap integrals" $log | wc -l`
CRIT4=`$GREP "\- dipole length integrals" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=4
ERROR[1]="INTEGRAL CALCULATION NOT SET UP CORRECTLY"

# Basis set
CRIT1=`$GREP "Basis set used is \"3\-21G\" from the basis set library\." $log | wc -l`
CRIT2=`$GREP "C * 2 * 6 * 15 * 9 * \[6s3p\|3s2p\]" $log | wc -l`
CRIT3=`$GREP "C * 4 * 6 * 15 * 9 * \[6s3p\|3s2p\]" $log | wc -l`
CRIT4=`$GREP "H * 4 * 1 * 3 * 2 * \[3s\|2s\]" $log | wc -l`
CRIT5=`$GREP "total\: * 20 * 80 * 204 * 124" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[2]=8
ERROR[2]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: 60" $log | wc -l`
CRIT2=`$GREP "1 * C * 1 * x * 1\.1884933632" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "4 * C * 2 * x * \-1\.1884933632" $log | wc -l`
CRIT5=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "7 * C * 1 * x * 3\.6668652194" $log | wc -l`
CRIT7=`$GREP "8 * y * (0| )\.0000000000" $log | wc -l`
CRIT8=`$GREP "10 * C * 2 * x * \-3\.6668652194" $log | wc -l`
CRIT9=`$GREP "11 * y * (0| )\.0000000000" $log | wc -l`
CRIT10=`$GREP "12 * z * (0| )\.0000000000" $log | wc -l`
CRIT11=`$GREP "13 * C * 1 * x * 5\.3663195532" $log | wc -l`
CRIT12=`$GREP "14 * y * 2\.2190250857" $log | wc -l`
CRIT13=`$GREP "15 * z * (0| )\.0000000000" $log | wc -l`
CRIT14=`$GREP "16 * C * 2 * x * \-5\.3663195532" $log | wc -l`
CRIT15=`$GREP "17 * y * 2\.2190250857" $log | wc -l`
CRIT16=`$GREP "18 * z * (0| )\.0000000000" $log | wc -l`
CRIT17=`$GREP "19 * C * 3 * x * 5\.3663195532" $log | wc -l`
CRIT18=`$GREP "20 * y * \-2\.2190250857" $log | wc -l`
CRIT19=`$GREP "21 * z * (0| )\.0000000000" $log | wc -l`
CRIT20=`$GREP "22 * C * 4 * x * \-5\.3663195532" $log | wc -l`
CRIT21=`$GREP "23 * y * \-2\.2190250857" $log | wc -l`
CRIT22=`$GREP "24 * z * (0| )\.0000000000" $log | wc -l`
CRIT23=`$GREP "25 * C * 1 * x * 7\.8019497727" $log | wc -l`
CRIT24=`$GREP "26 * y * 1\.3766966690" $log | wc -l`
CRIT25=`$GREP "27 * z * (0| )\.0000000000" $log | wc -l`
CRIT26=`$GREP "28 * C * 2 * x * \-7\.8019497727" $log | wc -l`
CRIT27=`$GREP "29 * y * 1\.3766966690" $log | wc -l`
CRIT28=`$GREP "30 * z * (0| )\.0000000000" $log | wc -l`
CRIT29=`$GREP "31 * C * 3 * x * 7\.8019497727" $log | wc -l`
CRIT30=`$GREP "32 * y * \-1\.3766966690" $log | wc -l`
CRIT31=`$GREP "33 * z * (0| )\.0000000000" $log | wc -l`
CRIT32=`$GREP "34 * C * 4 * x * \-7\.8019497727" $log | wc -l`
CRIT33=`$GREP "35 * y * \-1\.3766966690" $log | wc -l`
CRIT34=`$GREP "36 * z * (0| )\.0000000000" $log | wc -l`
CRIT35=`$GREP "37 * H * 1 * x * 4\.6724072035" $log | wc -l`
CRIT36=`$GREP "38 * y * 4\.1540967100" $log | wc -l`
CRIT37=`$GREP "39 * z * (0| )\.0000000000" $log | wc -l`
CRIT38=`$GREP "40 * H * 2 * x * \-4\.6724072035" $log | wc -l`
CRIT39=`$GREP "41 * y * 4\.1540967100" $log | wc -l`
CRIT40=`$GREP "42 * z * (0| )\.0000000000" $log | wc -l`
CRIT41=`$GREP "43 * H * 3 * x * 4\.6724072035" $log | wc -l`
CRIT42=`$GREP "44 * y * \-4\.1540967100" $log | wc -l`
CRIT43=`$GREP "45 * z * (0| )\.0000000000" $log | wc -l`
CRIT44=`$GREP "46 * H * 4 * x * \-4\.6724072035" $log | wc -l`
CRIT45=`$GREP "47 * y * \-4\.1540967100" $log | wc -l`
CRIT46=`$GREP "48 * z * (0| )\.0000000000" $log | wc -l`
CRIT47=`$GREP "49 * H * 1 * x * 9\.5268453005" $log | wc -l`
CRIT48=`$GREP "50 * y * 2\.4981230848" $log | wc -l`
CRIT49=`$GREP "51 * z * (0| )\.0000000000" $log | wc -l`
CRIT50=`$GREP "52 * H * 2 * x * \-9\.5268453005" $log | wc -l`
CRIT51=`$GREP "53 * y * 2\.4981230848" $log | wc -l`
CRIT52=`$GREP "54 * z * (0| )\.0000000000" $log | wc -l`
CRIT53=`$GREP "55 * H * 3 * x * 9\.5268453005" $log | wc -l`
CRIT54=`$GREP "56 * y * \-2\.4981230848" $log | wc -l`
CRIT55=`$GREP "57 * z * (0| )\.0000000000" $log | wc -l`
CRIT56=`$GREP "58 * H * 4 * x * \-9\.5268453005" $log | wc -l`
CRIT57=`$GREP "59 * y * \-2\.4981230848" $log | wc -l`
CRIT58=`$GREP "60 * z * (0| )\.0000000000" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27 \+ $CRIT28 \+ $CRIT29 \+ $CRIT30 \+ \
		$CRIT31 \+ $CRIT32 \+ $CRIT33 \+ $CRIT34 \+ $CRIT35 \+ $CRIT36 \+ \
		$CRIT37 \+ $CRIT38 \+ $CRIT39 \+ $CRIT40 \+ $CRIT41 \+ $CRIT42 \+ \
		$CRIT43 \+ $CRIT44 \+ $CRIT45 \+ $CRIT46 \+ $CRIT47 \+ $CRIT48 \+ \
		$CRIT49 \+ $CRIT50 \+ $CRIT51 \+ $CRIT52 \+ $CRIT53 \+ $CRIT54 \+ \
		$CRIT55 \+ $CRIT56 \+ $CRIT57 \+ $CRIT58`
CTRL[3]=58
ERROR[3]="GEOMETRY NOT CORRECT"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 10 10 10 10 * 6 * 6 * 4 * 4" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 28 * 28 * 22 * 22 * 8 * 8 * 4 * 4" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2`
CTRL[4]=2
ERROR[4]="SYMMETRY NOT CORRECT"

# Energy
CRIT1=`$GREP "Final * HF energy\: * \-456\.34109108092[0-9]" $log | wc -l`
TEST[5]=`expr   $CRIT1`
CTRL[5]=1
ERROR[5]="FINAL HF ENERGY NOT CORRECT"

# Response calculation
CRIT1=`$GREP "Quadratic Response single residue calculation" $log | wc -l`
CRIT2=`$GREP "Two\-photon transition process computed * \: TWOPHO \=T" $log | wc -l`
CRIT3=`$GREP "Spin of operator A \, ISPINA\= * 0" $log | wc -l`
CRIT4=`$GREP "Spin of operator B \, ISPINB\= * 0" $log | wc -l`
CRIT5=`$GREP "Spin of operator C \, \(Excitation energy\) ISPINC\= * 0" $log | wc -l`
CRIT6=`$GREP "5 B\-frequencies * 1\.000000(D|E)\+00 * 1\.000000(D|E)\+00 * 1\.000000(D|E)\+00 * 1\.000000(D|E)\+00 * 1\.000000(D|E)\+00" $log | wc -l`
CRIT7=`$GREP "1 A OPERATORS OF SYMMETRY NO\: * (2|3|5) AND LABELS\:" $log | wc -l`
CRIT8=`$GREP "1 B OPERATORS OF SYMMETRY NO\: * (2|3|5) AND LABELS\:" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[6]=12
ERROR[6]="RESPONSE CALCULATION NOT SET UP CORRECTLY"

# Two-photon transition tensor
CRIT1=`$GREP "1 * 1 * 6\.9[0-9] * 298\.[0-9] * 162\.[0-9] * (0| )\.[0-9] * (0| )\.0 * (0| )\.0 * (0| )\.0" $log | wc -l`
CRIT2=`$GREP "1 * 2 * 7\.5[0-9] \-1166\.[0-9] * \-15\.[0-9] * (0| )\.[0-9] * (0| )\.0 * (0| )\.0 * (0| )\.0" $log | wc -l`
CRIT3=`$GREP "1 * 3 * 9\.2[0-9] * \-116\.[0-9] * (0| )\.[0-9] * (\-0|\-)\.[0-9] * (0| )\.0 * (0| )\.0 * (0| )\.0" $log | wc -l`
CRIT4=`$GREP "1 * 4 * 9\.4[0-9] * 174\.[0-9] * \-15\.[0-9] * (-| )(0| )\.[0-9] * (0| )\.0 * (0| )\.0 * (0| )\.0" $log | wc -l`
CRIT5=`$GREP "1 * 5 * 12\.5[0-9] * \-77\.[0-9] * 35\.[0-9] * (0| )\.[0-9] * (0| )\.0 * (0| )\.0 * (0| )\.0" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[7]=5
ERROR[7]="TWO-PHOTON TRANSITION TENSOR NOT CORRECT"

# Two-photon transition probabilities
CRIT1=`$GREP "1 * 1 * 6\.9[0-9] * Linear * (0| )\.70[0-9](D|E)\+04 * (0| )\.38[0-9](D|E)\+04 * (0| )\.29[0-9](D|E)\+05 * (0| )\.3[0-9]" $log | wc -l`
CRIT2=`$GREP "1 * 1 * 6\.9[0-9] * Circular * (0| )\.70[0-9](D|E)\+04 * (0| )\.38[0-9](D|E)\+04 * (0| )\.89[0-9](D|E)\+04 * (0| )\.3[0-9]" $log | wc -l`
CRIT3=`$GREP "1 * 2 * 7\.5[0-9] * Linear * (0| )\.46[0-9](D|E)\+05 * (0| )\.45[0-9](D|E)\+05 * (0| )\.27[0-9](D|E)\+06 * (0| )\.6[0-9]" $log | wc -l`
CRIT4=`$GREP "1 * 2 * 7\.5[0-9] * Circular * (0| )\.46[0-9](D|E)\+05 * (0| )\.45[0-9](D|E)\+05 * (0| )\.17[0-9](D|E)\+06 * (0| )\.6[0-9]" $log | wc -l`
CRIT5=`$GREP "1 * 3 * 9\.2[0-9] * Linear * (0| )\.44[0-9](D|E)\+03 * (0| )\.45[0-9](D|E)\+03 * (0| )\.27[0-9](D|E)\+04 * (0| )\.6[0-9]" $log | wc -l`
CRIT6=`$GREP "1 * 3 * 9\.2[0-9] * Circular * (0| )\.44[0-9](D|E)\+03 * (0| )\.45[0-9](D|E)\+03 * (0| )\.18[0-9](D|E)\+04 * (0| )\.6[0-9]" $log | wc -l`
CRIT7=`$GREP "1 * 4 * 9\.4[0-9] * Linear * (0| )\.84[0-9](D|E)\+03 * (0| )\.10[0-9](D|E)\+04 * (0| )\.57[0-9](D|E)\+04 * (0| )\.7[0-9]" $log | wc -l`
CRIT8=`$GREP "1 * 4 * 9\.4[0-9] * Circular * (0| )\.84[0-9](D|E)\+03 * (0| )\.10[0-9](D|E)\+04 * (0| )\.44[0-9](D|E)\+04 * (0| )\.7[0-9]" $log | wc -l`
CRIT9=`$GREP "1 * 5 * 12\.5[0-9] * Linear * (0| )\.59[0-9](D|E)\+02 * (0| )\.24[0-9](D|E)\+03 * (0| )\.10[0-9](D|E)\+04 * 1\.2[0-9]" $log | wc -l`
CRIT10=`$GREP "1 * 5 * 12\.5[0-9] * Circular * (0| )\.59[0-9](D|E)\+02 * (0| )\.24[0-9](D|E)\+03 * (0| )\.13[0-9](D|E)\+04 * 1\.2[0-9]" $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[8]=10
ERROR[8]="TWO-PHOTON TRANSITION PROBABILITIES NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7 8
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
