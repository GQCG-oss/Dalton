#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > cc_rsp_twophot4.info <<'%EOF%'
   cc_rsp_twophot4
   ---------------
   Molecule:         HF in C2
   Wave Function:    CCS / 6-31G**
   Test Purpose:     Twophoton transition moments
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > cc_rsp_twophot4.mol <<'%EOF%'
BASIS
6-31G**
Hydrogen flourid
small test basis
    2    1  Y         1.00D-15
        9.0   1    
F     0.0000000000000000  0.0000000000000000 1.76320000000000000      
        1.0   1
H     0.0000000000000000  0.0000000000000000 0.00000000000000000      
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > cc_rsp_twophot4.dal <<'%EOF%'
**GENERAL
.RUNSIR
**INTEGRAL
.DIPLEN
**SIRIUS
.CC
*SCF INPUT 
.THRESH
 1.0d-12
*CC INPUT 
.CCS
.RESTART
.NSYM
 2
.THRENR
 1.0d-8
.THRLEQ
 1.0d-8
*CCEXCI
.NCCEXCI
  0 3 
.THREXC
 1.0d-8
*CCLRSD
.DIPOLE
*CCSM
.SELSTA
2 3 0.0
.OPERATOR
YDIPLEN XDIPLEN YDIPLEN XDIPLEN
XDIPLEN YDIPLEN XDIPLEN YDIPLEN
*END OF
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >cc_rsp_twophot4.check
cat >>cc_rsp_twophot4.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# SCF, MP2 and CCSD energies:
CRIT1=`$GREP "Final HF energy:" $log | $GREP "\-100.00891992" | wc -l`
TEST[1]=`expr $CRIT1`
CTRL[1]=1
ERROR[1]="ENERGIES NOT CORRECT"


# CCS twophoton transition moment
CRIT1=`$GREP "M\^AB_of\(\-w\): *( |\-|0|\-0)\.364653[0-9]" $log |
       $GREP "M\^CD_fo\(w\): *( |\-|0|\-0)\.143659[0-9]" | wc -l`
CRIT2=`$GREP "M\^CD_of\(\-w\): *( |\-|0|\-0)\.364653[0-9]" $log |
       $GREP "M\^AB_fo\(w\): * ( |\-|0|\-0)\.143659[0-9]" $log | wc -l`
CRIT3=`$GREP "M\^AB_of\(\-w\) x M\^CD_fo\(w\)   = * (5\.|0\.5|\.5|0\.05|\.05)238618[0-9]" $log | wc -l`
CRIT4=`$GREP "M\^CD_of\(\-w\) x M\^AB_fo\(w\)\]\* = * (5\.|0\.5|\.5|0\.05|\.05)238618[0-9]" $log | wc -l`
CRIT5=`$GREP "CCS  S\^of_AB,CD" $log | $GREP "(5\.|0\.5|\.5|0\.05|\.05)238618[0-9]" | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[2]=10
ERROR[2]="CCS TWOPHOTON TRANSITION MOMENTS NOT CORRECT"

# CCS excitation energies
CRIT1=`$GREP "\^1A.  \|    3   \|     1\.455144.  \|      39\.596..  \|    319367\....  \| 100\.00" $log | wc -l`
TEST[3]=`expr $CRIT1`
CTRL[3]=1
ERROR[3]="CC EXCITATION ENERGIES NOT CORRECT"


PASSED=1
for i in 1 2 3 
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%
#######################################################################
