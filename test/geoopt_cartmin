#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > geoopt_cartmin.info <<'%EOF%'
   geoopt_cartmin
   --------------
   Molecule:         C6H5CHO
   Wave Function:    SCF / STO-3G
   Test Purpose:     Minimization in Cartesian coordinates. The initial
                     Hessian is calculated, then updated using the
                     PSB-formula. The rational function method determines
                     the step and Baker's convergence criteria are used
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > geoopt_cartmin.mol <<'%EOF%'
BASIS
STO-3G
First order minimization in Cartesian coordinates, where the initial
Hessian is calculated analytically
Atomtypes=3 Generators=1 Z
Charge=8.0 Atoms=1
O     6.1169594363        0.0000000000        0.0000000000             *
Charge=6.0 Atoms=7
C    -0.4281183799       -2.2595362151        0.0000000000             *
C    -2.9286935224       -1.4347871225        0.0000000000             *
C    -3.4656164013        1.1411808224        0.0000000000             *
C    -1.5061149145        2.8972276388        0.0000000000             *
C     0.9961412279        2.0785184368        0.0000000000             *
C     1.5529020669       -0.5103443405        0.0000000000             *
C     4.3100239391       -1.4696981757        0.0000000000             *
Charge=1.0 Atoms=6
H     4.6927731310       -3.5243404323        0.0000000000             *
H    -0.0483891239       -4.2673340819        0.0000000000             *
H    -4.4516781974       -2.7942683921        0.0000000000             *
H    -5.4051670195        1.7780840801        0.0000000000             *
H    -1.9265366341        4.8949599174        0.0000000000             *
H     2.4915143918        3.4703378645        0.0000000000             *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > geoopt_cartmin.dal <<'%EOF%'
**DALTON INPUT
.OPTIMIZE
*OPTIMIZE
.CARTES
.INITHE
.RF
.PSB
.BAKER
**WAVE FUNCTION
.HF
**END OF DALTON INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >geoopt_cartmin.check
cat >>geoopt_cartmin.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Geometry optimization
CRIT1=`$GREP "1st order method with PSB update will be used\." $log | wc -l`
CRIT2=`$GREP "Optimization will be performed in Cartesian coordinates\." $log | wc -l`
CRIT3=`$GREP "Initial Hessian will be calculated\." $log | wc -l`
CRIT4=`$GREP "Rational function method will be used to control step\." $log | wc -l`
CRIT5=`$GREP "Baker.s convergence criteria will be used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=5
ERROR[1]="GEOMETRY OPTIMIZATION NOT SET UP CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 28 * 14" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 38 * 8" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Initail energy
CRIT1=`$GREP "Final * HF energy\: * \-339\.11787646992[0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=1
ERROR[4]="INITIAL ENERGY NOT CORRECT"

# Initial gradient
CRIT1=`$GREP "C * y * (\-0|\-)\.0107260..[0-9]" $log | wc -l`
CRIT2=`$GREP "C * x * (\-0|\-)\.00889(8|9)...[0-9]" $log | wc -l`
CRIT3=`$GREP "C * y * (\-0|\-)\.0062744..[0-9]" $log | wc -l`
CRIT4=`$GREP "C * x * (\-0|\-)\.0077393..[0-9]" $log | wc -l`
CRIT5=`$GREP "C * y * (0| )\.003485(2|3)..[0-9]" $log | wc -l`
CRIT6=`$GREP "C * x * (\-0|\-)\.0045686..[0-9]" $log | wc -l`
CRIT7=`$GREP "C * y * (0| )\.0116288..[0-9]" $log | wc -l`
CRIT8=`$GREP "C * x * (0| )\.008232(3|4)..[0-9]" $log | wc -l`
CRIT9=`$GREP "C * y * (0| )\.0055831..[0-9]" $log | wc -l`
CRIT10=`$GREP "C * x * (\-0|\-)\.008371(1|2)..[0-9]" $log | wc -l`
CRIT11=`$GREP "C * y * (0| )\.014393(5|6)..[0-9]" $log | wc -l`
CRIT12=`$GREP "C * x * (\-0|\-)\.011686(6|7)..[0-9]" $log | wc -l`
CRIT13=`$GREP "C * y * (\-0|\-)\.0311743..[0-9]" $log | wc -l`
CRIT14=`$GREP "H * x * (0| )\.0134007..[0-9]" $log | wc -l`
CRIT15=`$GREP "H * y * (\-0|\-)\.0005071..[0-9]" $log | wc -l`
CRIT16=`$GREP "H * x * (\-0|\-)\.0032386..[0-9]" $log | wc -l`
CRIT17=`$GREP "H * y * (0| )\.0011563..[0-9]" $log | wc -l`
CRIT18=`$GREP "H * x * (0| )\.0014315..[0-9]" $log | wc -l`
CRIT19=`$GREP "H * y * (0| )\.0015614..[0-9]" $log | wc -l`
CRIT20=`$GREP "H * x * (0| )\.0024594..[0-9]" $log | wc -l`
CRIT21=`$GREP "H * y * (\-0|\-)\.0007489..[0-9]" $log | wc -l`
CRIT22=`$GREP "H * x * (\-0|\-)\.0000302..[0-9]" $log | wc -l`
CRIT23=`$GREP "H * y * (\-0|\-)\.0021104..[0-9]" $log | wc -l`
CRIT24=`$GREP "H * x * (\-0|\-)\.0047062..[0-9]" $log | wc -l`
CRIT25=`$GREP "H * y * (0| )\.0016412..[0-9]" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25`
CTRL[5]=25
ERROR[5]="INITIAL GRADIENT NOT CORRECT"

# Initial Hessian
CRIT1=`$GREP "C * x * (\-0|\-)\.00022[0-9] * (0| )\.00691[0-9] * (0| )\.81264[0-9]" $log | wc -l`
CRIT2=`$GREP "C * y * (0| )\.00964[0-9] * (0| )\.00108[0-9] * (\-0|\-)\.04256[0-9] * 1\.00555[0-9]" $log | wc -l`
CRIT3=`$GREP "C * x * (\-0|\-)\.00260[0-9] * (\-0|\-)\.00058[0-9] * (\-0|\-)\.37699[0-9] * (0| )\.14669[0-9] * (0| )\.92393[0-9]" $log | wc -l`
CRIT4=`$GREP "C * y * (\-0|\-)\.00039[0-9] * (0| )\.00105[0-9] * (\-0|\-)\.03402[0-9] * (\-0|\-)\.21708[0-9] * (0| )\.11020[0-9] * (0| )\.90435[0-9]" $log | wc -l`
CRIT5=`$GREP "C * x * (\-0|\-)\.00004[0-9] * (0| )\.00087[0-9] * (0| )\.04338[0-9] * (0| )\.05053[0-9] * (\-0|\-)\.20871[0-9] * (0| )\.12994[0-9]" $log | wc -l`
CRIT6=`$GREP "C * y * (\-0|\-)\.00098[0-9] * (\-0|\-)\.00005[0-9] * (0| )\.19561[0-9] * (0| )\.01295[0-9] * (\-0|\-)\.05221[0-9] * (\-0|\-)\.39111[0-9]" $log | wc -l`
CRIT7=`$GREP "C * x * (\-0|\-)\.00031[0-9] * (\-0|\-)\.00091[0-9] * (\-0|\-)\.16972[0-9] * (\-0|\-)\.03373[0-9] * (0| )\.13044[0-9] * (\-0|\-)\.14536[0-9]" $log | wc -l`
CRIT8=`$GREP "C * y * (\-0|\-)\.00108[0-9] * (0| )\.00143[0-9] * (\-0|\-)\.03475[0-9] * (\-0|\-)\.00571[0-9] * (\-0|\-)\.00197[0-9] * (\-0|\-)\.06941[0-9]" $log | wc -l`
CRIT9=`$GREP "C * x * (0| )\.00483[0-9] * (0| )\.00164[0-9] * (0| )\.12475[0-9] * (\-0|\-)\.00337[0-9] * (\-0|\-)\.07851[0-9] * (0| )\.08816[0-9]" $log | wc -l`
CRIT10=`$GREP "C * y * (\-0|\-)\.00771[0-9] * (\-0|\-)\.00483[0-9] * (\-0|\-)\.13793[0-9] * (\-0|\-)\.06632[0-9] * (0| )\.08807[0-9] * (\-0|\-)\.09583[0-9]" $log | wc -l`
CRIT11=`$GREP "C * x * (\-0|\-)\.07086[0-9] * (\-0|\-)\.01634[0-9] * (\-0|\-)\.28626[0-9] * (\-0|\-)\.17662[0-9] * (\-0|\-)\.08413[0-9] * (0| )\.02644[0-9]" $log | wc -l`
CRIT12=`$GREP "C * y * (\-0|\-)\.03122[0-9] * (0| )\.02423[0-9] * (\-0|\-)\.01699[0-9] * (\-0|\-)\.28334[0-9] * (\-0|\-)\.11582[0-9] * (0| )\.13470[0-9]" $log | wc -l`
CRIT13=`$GREP "C * x * (\-0|\-)\.59736[0-9] * (\-0|\-)\.39363[0-9] * (\-0|\-)\.03901[0-9] * (0| )\.00255[0-9] * (0| )\.00201[0-9] * (\-0|\-)\.00684[0-9]" $log | wc -l`
CRIT14=`$GREP "C * y * (\-0|\-)\.40960[0-9] * (\-0|\-)\.46531[0-9] * (\-0|\-)\.03006[0-9] * (0| )\.01247[0-9] * (\-0|\-)\.00319[0-9] * (\-0|\-)\.00246[0-9]" $log | wc -l`
CRIT15=`$GREP "H * x * (0| )\.00551[0-9] * (\-0|\-)\.05413[0-9] * (0| )\.00298[0-9] * (0| )\.00149[0-9] * (0| )\.00021[0-9] * (\-0|\-)\.00024[0-9]" $log | wc -l`
CRIT16=`$GREP "H * y * (\-0|\-)\.01448[0-9] * (\-0|\-)\.03675[0-9] * (\-0|\-)\.00086[0-9] * (0| )\.00120[0-9] * (\-0|\-)\.00009[0-9] * (\-0|\-)\.00031[0-9]" $log | wc -l`
CRIT17=`$GREP "H * x * (0| )\.00035[0-9] * (0| )\.00067[0-9] * (\-0|\-)\.09436[0-9] * (0| )\.07147[0-9] * (\-0|\-)\.00008[0-9] * (0| )\.04013[0-9]" $log | wc -l`
CRIT18=`$GREP "H * y * (0| )\.00014[0-9] * (\-0|\-)\.00023[0-9] * (0| )\.07354[0-9] * (\-0|\-)\.46414[0-9] * (\-0|\-)\.00745[0-9] * (\-0|\-)\.00209[0-9]" $log | wc -l`
CRIT19=`$GREP "H * x * (\-0|\-)\.00068[0-9] * (0| )\.00008[0-9] * (\-0|\-)\.01628[0-9] * (\-0|\-)\.02863[0-9] * (\-0|\-)\.30322[0-9] * (\-0|\-)\.19958[0-9]" $log | wc -l`
CRIT20=`$GREP "H * y * (0| )\.00040[0-9] * (\-0|\-)\.00004[0-9] * (0| )\.01817[0-9] * (0| )\.01420[0-9] * (\-0|\-)\.19948[0-9] * (\-0|\-)\.25806[0-9]" $log | wc -l`
CRIT21=`$GREP "H * x * (0| )\.00020[0-9] * (\-0|\-)\.00002[0-9] * (0| )\.00042[0-9] * (0| )\.00095[0-9] * (0| )\.00220[0-9] * (\-0|\-)\.00779[0-9]" $log | wc -l`
CRIT22=`$GREP "H * y * (\-0|\-)\.00001[0-9] * (0| )\.00008[0-9] * (\-0|\-)\.00065[0-9] * (\-0|\-)\.00711[0-9] * (0| )\.03905[0-9] * (\-0|\-)\.00330[0-9]" $log | wc -l`
CRIT23=`$GREP "H * x * (\-0|\-)\.00004[0-9] * (\-0|\-)\.00018[0-9] * (\-0|\-)\.00073[0-9] * (\-0|\-)\.00057[0-9] * (\-0|\-)\.00514[0-9] * (\-0|\-)\.00244[0-9]" $log | wc -l`
CRIT24=`$GREP "H * y * (0| )\.00003[0-9] * (0| )\.00005[0-9] * (\-0|\-)\.00080[0-9] * (0| )\.00206[0-9] * (\-0|\-)\.00428[0-9] * (\-0|\-)\.00144[0-9]" $log | wc -l`
CRIT25=`$GREP "H * x * (0| )\.00029[0-9] * (\-0|\-)\.00015[0-9] * (\-0|\-)\.00059[0-9] * (0| )\.00216[0-9] * (0| )\.00059[0-9] * (0| )\.00180[0-9]" $log | wc -l`
CRIT26=`$GREP "H * y * (\-0|\-)\.00048[0-9] * (0| )\.00113[0-9] * (0| )\.00438[0-9] * (\-0|\-)\.00581[0-9] * (0| )\.00109[0-9] * (0| )\.00100[0-9]" $log | wc -l`
CRIT27=`$GREP "H * z * (0| )\.00000[0-9] * (0| )\.000000 * (0| )\.03563[0-9]" $log | wc -l`
CRIT28=`$GREP "H * x * (0| )\.00235[0-9] * (\-0|\-)\.00019[0-9] * (0| )\.000000 * (0| )\.29921[0-9]" $log | wc -l`
CRIT29=`$GREP "H * y * (\-0|\-)\.00030[0-9] * (0| )\.00150[0-9] * (0| )\.000000 * (0| )\.20940[0-9] * (0| )\.26708[0-9]" $log | wc -l`
CRIT30=`$GREP "H * z * (0| )\.00000[0-9] * (0| )\.000000 * (\-0|\-)\.00606[0-9] * (0| )\.000000 * (0| )\.000000 * (0| )\.03574[0-9]" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27 \+ $CRIT28 \+ $CRIT29 \+ $CRIT30`
CTRL[6]=30
ERROR[6]="INITIAL HESSIAN NOT CORRECT"

# Initial step
CRIT1=`$GREP "O * 6\.08773(68|69|70)..[0-9] * (0| )\.026937...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "C * (\-0|\-)\.416426...[0-9] * \-2\.257137...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "C * \-2\.904261...[0-9] * \-1\.439199...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "C * \-3\.439896...[0-9] * 1\.126939...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "C * \-1\.484906...[0-9] * 2\.876635...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "C * 1\.000113...[0-9] * 2\.058129...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "C * 1\.553514...[0-9] * (\-0|\-)\.51577(1|2)...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT8=`$GREP "C * 4\.27257(28|29|30)..[0-9] * \-1\.395619...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT9=`$GREP "H * 4\.509736...[0-9] * \-3\.471215...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT10=`$GREP "H * (0| )\.000841...[0-9] * \-4\.261554...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT11=`$GREP "H * \-4\.429546...[0-9] * \-2\.802455...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT12=`$GREP "H * \-5\.384354...[0-9] * 1\.766074...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT13=`$GREP "H * \-1\.904599...[0-9] * 4\.879043...[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT14=`$GREP "H * 2\.539474...[0-9] * 3\.409194...[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14`
CTRL[7]=14
ERROR[7]="INITIAL STEP NOT CORRECT"

# Second iteration
CRIT1=`$GREP "Energy at this geometry is * \: * \-339\.12083[0-9]" $log | wc -l`
CRIT2=`$GREP "Norm of gradient * \: * (0| )\.00315[0-9]" $log | wc -l`
CRIT3=`$GREP "Norm of step * \: * (0| )\.02179[0-9]" $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[8]=3
ERROR[8]="SECOND ITERATION NOT CORRECT"

# Final geometry
CRIT1=`$GREP "O * 6\.0902277..[0-9] * (0| )\.0191699..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "C * (\-0|\-)\.4142619..[0-9] * \-2\.2555980..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "C * \-2\.9023975..[0-9] * \-1\.440419(4|5)..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "C * \-3\.4387638..[0-9] * 1\.1259162..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "C * \-1\.4860716..[0-9] * 2\.8783264..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "C * (0| )\.9997361..[0-9] * 2\.0622878..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "C * 1\.5514283..[0-9] * (\-0|\-)\.510594(8|9)..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT8=`$GREP "C * 4\.2698184..[0-9] * \-1\.3974298..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT9=`$GREP "H * 4\.495821(4|5)..[0-9] * \-3\.4708107..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT10=`$GREP "H * (0| )\.0100476..[0-9] * \-4\.2584255..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT11=`$GREP "H * \-4\.4262176..[0-9] * \-2\.8051541..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT12=`$GREP "H * \-5\.3836371..[0-9] * 1\.7630940..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT13=`$GREP "H * \-1\.9074124..[0-9] * 4\.8801902..[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT14=`$GREP "H * 2\.5416824..[0-9] * 3\.4094479..[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[9]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14`
CTRL[9]=56
ERROR[9]="FINAL GEOMETRY NOT CORRECT"

# Geometry converged
CRIT1=`$GREP "Geometry converged in * 3( |  )iterations\!" $log | wc -l`
CRIT2=`$GREP "Energy at final geometry is * \: * \-339\.12084[0-9] a\.u\." $log | wc -l`
CRIT3=`$GREP "Energy change during optimization \: * (\-0|\-)\.00296[0-9] a\.u\." $log | wc -l`
TEST[10]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[10]=3
ERROR[10]="GEOMETRY OPTIMIZATION NOT CONVERGED"

PASSED=1
for i in 1 3 4 5 6 7 8 9 10
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
