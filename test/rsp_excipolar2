#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > rsp_excipolar2.info <<'%EOF%'
   rsp_excipolar2
   --------------
   Molecule:         LiH
   Wave Function:    MCSCF (CAS) / 4-31G
   Test Purpose:     Polarizability of an excited state
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_excipolar2.mol <<'%EOF%'
BASIS
4-31G
Calculation of the polarizability of an excited state

    2    2  X  Y    1 1.00D-12
        1.0   1
H           .0000000000             .0000000000            2.0969699107
        3.0   1
Li          .0000000000             .0000000000            -.9969699107
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_excipolar2.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONS
**WAVE FUNCTIONS
.HF
.MP2
.MCSCF
*SCF INPUT
.DOUBLY OCCUPIED
 2 0 0 0
*CONFIGURATION INPUT
.INACTIVE
 1 0 0 0
.ELECTRONS
 2
.CAS SPACE
 2 0 0 0
.SYMMET
 1
.SPIN MULT
 1
**RESPONS
*CUBIC
.DIPLEN
.DOUBLE
.ROOTS
 2 1 0 0
.FREQUE
 1
0.03
*END OF
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >rsp_excipolar2.check
cat >>rsp_excipolar2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "H * 1 * 1\.0000 * 4 * 2 * \[4s\|2s\]" $log | wc -l`
CRIT2=`$GREP "Li * 1 * 3\.0000 * 17 * 9 * \[8s3p\|3s2p\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 4\.0000 * 21 * 11" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=3
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * 2\.0969699107" $log | wc -l`
CRIT5=`$GREP "4 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (\-0|\-)\.9969699107" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7`
CTRL[2]=7
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 2 * 2 * 2 * 0" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 7 * 2 * 2 * 0" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Energies
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-7\.9773493(6|7).." $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-7\.9901927.." $log | wc -l`
CRIT3=`$GREP "Final MCSCF energy\: * \-7\.9941305(2|3)...." $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=3
ERROR[4]="ENERGIES NOT CORRECT"

# Response setup
CRIT1=`$GREP "Cubic response two\-photon absorption TPAMP\=T" $log | wc -l`
CRIT2=`$GREP "Excited state polarizability requested TPALP\=T" $log | wc -l`
CRIT3=`$GREP "1 B\-frequencies * 3\.000000(D|E)\-02" $log | wc -l`
CRIT4=`$GREP "1 A OPERATORS OF SYMMETRY NO\: * [1-3] AND LABELS\:" $log | wc -l`
CRIT5=`$GREP "1 B OPERATORS OF SYMMETRY NO\: * [1-3] AND LABELS\:" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[5]=9
ERROR[5]="RESPONSE CALCULATION NOT SET UP CORRECTLY"

# Polarizability (ZDIPLEN - Sym 1, State 1 - Sym 1)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 263\.506..... * 263\.506....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-185\.588..... * 77\.918....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * \-33\.531..... * 44\.386....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * \-25\.023..... * 19\.363....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-19\.928..... * (\-0|\-)\.564....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * 15\.392..... * 14\.827....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 1 * 1 * (0| )\.11958[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * 14\.827....." $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[6]=13
ERROR[6]="EXCITED STATE POLARIZABILITY (ZDIPLEN - SYM 1, STATE 1 - SYM 1) NOT CORRECT"

# Polarizability (ZDIPLEN - Sym 1, State 2 - Sym 1)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 137\.464..... * 137\.464....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-121\.441..... * 16\.023....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 27\.813..... * 43\.836....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 34\.788..... * 78\.624....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-18\.273..... * 60\.35(0|1)....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-154\.548..... * \-94\.197....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 2 * 1 * (0| )\.27218[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * \-94\.197....." $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[7]=13
ERROR[7]="EXCITED STATE POLARIZABILITY (ZDIPLEN - SYM 1, STATE 2 - SYM 1) NOT CORRECT"

# Polarizability (XDIPLEN - Sym 2, State 1 - Sym 1)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 100\.474..... * 100\.474....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-21\.704..... * 78\.769....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 13\.413..... * 92\.183....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 26\.948..... * 119\.132....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-44\.507..... * 74\.624....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-372\.949..... * \-298\.32(4|5)....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 1 * 1 * (0| )\.11958[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * \-298\.32(4|5)....." $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[8]=20
ERROR[8]="EXCITED STATE POLARIZABILITY (XDIPLEN - SYM 2, STATE 1 - SYM 1) NOT CORRECT"

# Polarizability (XDIPLEN - Sym 2, State 2 - Sym 1)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 64\.469..... * 64\.469....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-24\.443..... * 40\.025....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 15\.784..... * 55\.810....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 27\.529..... * 83\.339....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-36\.459..... * 46\.880....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-51\.78(1|2)..... * \-4\.901....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 2 * 1 * (0| )\.27218[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * \-4\.901....." $log | wc -l`
TEST[9]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[9]=20
ERROR[9]="EXCITED STATE POLARIZABILITY (XDIPLEN - SYM 2, STATE 2 - SYM 1) NOT CORRECT"

# Polarizability (YDIPLEN - Sym 3, State 1 - Sym 1)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 100\.474..... * 100\.474....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-21\.704..... * 78\.769....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 13\.413..... * 92\.183....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 26\.948..... * 119\.132....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-44\.507..... * 74\.624....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-372\.949..... * \-298\.32(4|5)....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 1 * 1 * (0| )\.11958[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * \-298\.32(4|5)....." $log | wc -l`
TEST[10]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[10]=20
ERROR[10]="EXCITED STATE POLARIZABILITY (YDIPLEN - SYM 3, STATE 1 - SYM 1) NOT CORRECT"

# Polarizability (YDIPLEN - Sym 3, State 2 - Sym 1)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 64\.469..... * 64\.469....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-24\.443..... * 40\.025....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 15\.784..... * 55\.810....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 27\.529..... * 83\.339....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-36\.459..... * 46\.880....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-51\.78(1|2)..... * \-4\.901....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 2 * 1 * (0| )\.27218[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * \-4\.901....." $log | wc -l`
TEST[11]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[11]=20
ERROR[11]="EXCITED STATE POLARIZABILITY (YDIPLEN - SYM 3, STATE 2 - SYM 1) NOT CORRECT"

# Polarizability (ZDIPLEN - Sym 1, State 1 - Sym 2)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 107\.629..... * 107\.629....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-66\.965..... * 40\.663....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 1\.088..... * 41\.752....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 10\.163..... * 51\.916....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-29\.126..... * 22\.790....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-8\.900..... * 13\.889....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 1 * 2 * (0| )\.15776[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * 13\.889....." $log | wc -l`
TEST[12]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[12]=13
ERROR[12]="EXCITED STATE POLARIZABILITY (ZDIPLEN - SYM 1, STATE 1 - SYM 2) NOT CORRECT"

# Polarizability (XDIPLEN - Sym 2, State 1 - Sym 2)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 239\.461..... * 239\.461....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-225\.133..... * 14\.327....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 90\.816..... * 105\.144....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 112\.101..... * 217\.245....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-57\.292..... * 159\.953....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * 174\.688..... * 334\.641....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 1 * 2 * (0| )\.15776[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * 334\.641....." $log | wc -l`
TEST[13]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[13]=13
ERROR[13]="EXCITED STATE POLARIZABILITY (XDIPLEN - SYM 2, STATE 1 - SYM 2) NOT CORRECT"

# Polarizability (YDIPLEN - Sym 3, State 1 - Sym 2)
CRIT1=`$GREP "Na T\[4\] Nb Nc Nd * 117\.543..... * 117\.543....." $log | wc -l`
CRIT2=`$GREP "Na T\[3\] Nx Nyz * \-65\.062..... * 52\.480....." $log | wc -l`
CRIT3=`$GREP "Na X\[3\] Ny Nz * 36\.702..... * 89\.183....." $log | wc -l`
CRIT4=`$GREP "Nx A\[3\] Ny Nz * 53\.717..... * 142\.900....." $log | wc -l`
CRIT5=`$GREP "Na X\[2\] Nyz * \-57\.292..... * 85\.608....." $log | wc -l`
CRIT6=`$GREP "Nx A\[2\] Nyz * \-57\.262..... * 28\.346....." $log | wc -l`
CRIT7=`$GREP "\@ State no\.\, symmetry\, excitation energy\: * 1 * 2 * (0| )\.15776[0-9]" $log | wc -l`
CRIT8=`$GREP "\@ < e \| AB \| f > * \= * 28\.346....." $log | wc -l`
TEST[14]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[14]=13
ERROR[14]="EXCITED STATE POLARIZABILITY (YDIPLEN - SYM 3, STATE 1 - SYM 2) NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
