#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > rsp_polar.info <<'%EOF%'
   rsp_polar
   ---------
   Molecule:         LiH / 4-31G
   Wave Function:    MCSCF (CAS)
   Test Purpose:     Polarizability
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_polar.mol <<'%EOF%'
BASIS
4-31G
Calculation of Polarizability

    2    2  X  Y    1 1.00D-12
        1.0   1
 H           .0000000000             .0000000000            2.0969699107
        3.0   1
 Li          .0000000000             .0000000000            -.9969699107
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_polar.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONS
**WAVEFUNCTION
.HF
.MP2
.MCSCF
*SCF INPUT
.DOUBLY OCCUPIED
 2 0 0 0
*CONFIGURATION INPUT
.INACTIVE
 1 0 0 0
.ELECTRONS
 2
.CAS SPACE
 2 0 0 0
.SYMMET
 1
.SPIN MULT
 1
**RESPONS
*LINEAR
.DIPLEN
.FREQUE
 2
0.00 0.03
*END OF
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >rsp_polar.check
cat >>rsp_polar.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "H * 1 * 1 * 4 * 2 * \[4s\|2s\]" $log | wc -l`
CRIT2=`$GREP "Li * 1 * 3 * 17 * 9 * \[8s3p\|3s2p\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 4 * 21 * 11" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=3
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * H * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * 2\.0969699107" $log | wc -l`
CRIT5=`$GREP "4 * Li * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (\-0|\-)\.9969699107" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7`
CTRL[2]=7
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 2 * 2 * 2 * 0" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 7 * 2 * 2 * 0" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Energies
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-7\.97734936.[0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-7\.99019271.[0-9]" $log | wc -l`
CRIT3=`$GREP "Final MCSCF energy\: * \-7\.9941305296.[0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=3
ERROR[4]="ENERGIES NOT CORRECT"

# Response setup
CRIT1=`$GREP "Linear Response calculation" $log | wc -l`
CRIT2=`$GREP "2 B\-frequencies * (0| )\.000000(D|E)\+00 * 3\.000000(D|E)\-02" $log | wc -l`
CRIT3=`$GREP "1 second order properties calculated with symmetry no\. * [1-3] and labels\:" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[5]=5
ERROR[5]="NOT CORRECT"

# Static polarizabilities
CRIT1=`$GREP "\@.*ZDIPLEN .* ZDIPLEN .* 2\.71965353[0-9][0-9][0-9][0-9](D|E)\+01" $log | wc -l`
CRIT2=`$GREP "\@.*XDIPLEN .* XDIPLEN .* 3\.20164463[0-9][0-9][0-9][0-9](D|E)\+01" $log | wc -l`
CRIT3=`$GREP "\@.*YDIPLEN .* YDIPLEN .* 3\.20164463[0-9][0-9][0-9][0-9](D|E)\+01" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[6]=3
ERROR[6]="STATIC POLARIZABILITIES NOT CORRECT"

# Frequency-dependant polarizabilities
CRIT1=`$GREP "\@.*ZDIPLEN .* ZDIPLEN .* 2\.85201030[0-9][0-9][0-9][0-9](D|E)\+01" $log | wc -l`
CRIT2=`$GREP "\@.*XDIPLEN .* XDIPLEN .* 3\.32128625[0-9][0-9][0-9][0-9](D|E)\+01" $log | wc -l`
CRIT3=`$GREP "\@.*YDIPLEN .* YDIPLEN .* 3\.32128625[0-9][0-9][0-9][0-9](D|E)\+01" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[7]=3
ERROR[7]="FREQUENCY-DEPENDANT POLARIZABILITIES NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
