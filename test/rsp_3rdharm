#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > rsp_3rdharm.info <<'%EOF%'
   rsp_3rdharm
   -----------
   Molecule:         LiH
   Wave Function:    MCSCF (CAS) / 4-31G
   Test Purpose:     Third-Harmonic generation
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_3rdharm.mol <<'%EOF%'
BASIS
4-31G
Calculation of Third-Harmonic

    2    2  X  Y    1 1.00D-12
        1.0   1
H           .0000000000             .0000000000            2.0969699107
        3.0   1
Li          .0000000000             .0000000000            -.9969699107
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_3rdharm.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONS
**WAVE FUNCTIONS
.HF
.MP2
.MCSCF
*SCF INPUT
.DOUBLY OCCUPIED
 2 0 0 0
*CONFIGURATION INPUT
.INACTIVE
 1 0 0 0
.ELECTRONS
 2
.CAS SPACE
 2 0 0 0
.SYMMET
 1
.SPIN MULT
 1
**RESPONS
*CUBIC
.DIPLEN
.THG
.FREQUE
 2
0.00 0.03
*END OF
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >rsp_3rdharm.check
cat >>rsp_3rdharm.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "H * 1 * 1\.0000 * 4 * 2 * \[4s\|2s\]" $log | wc -l`
CRIT2=`$GREP "Li * 1 * 3\.0000 * 17 * 9 * \[8s3p\|3s2p\]" $log | wc -l`
CRIT3=`$GREP "total\: * 2 * 4\.0000 * 21 * 11" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=3
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 6" $log | wc -l`
CRIT2=`$GREP "1 * H * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * 2\.0969699107" $log | wc -l`
CRIT5=`$GREP "4 * Li * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "6 * z * (\-0|\-)\.9969699107" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7`
CTRL[2]=7
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 2 * 2 * 2 * 0" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 7 * 2 * 2 * 0" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Energies
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-7\.97734936.[0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-7\.9901927..[0-9]" $log | wc -l`
CRIT3=`$GREP "Final MCSCF energy\: * \-7\.9941305296.[0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=3
ERROR[4]="ENERGIES NOT CORRECT"

# Response setup
CRIT1=`$GREP "Second hyperpolarizability calculation \: * CRCAL\= T" $log | wc -l`
CRIT2=`$GREP "\- Third harmonic generation calculation" $log | wc -l`
CRIT3=`$GREP "2 B\-frequencies * (0| )\.000000(D|E)\+00 * 3\.000000(D|E)\-02" $log | wc -l`
CRIT4=`$GREP "2 C\-frequencies * (0| )\.000000(D|E)\+00 * 3\.000000(D|E)\-02" $log | wc -l`
CRIT5=`$GREP "2 D\-frequencies * (0| )\.000000(D|E)\+00 * 3\.000000(D|E)\-02" $log | wc -l`
CRIT6=`$GREP "Direct one\-index transformation * \: DIROIT \= T" $log | wc -l`
CRIT7=`$GREP "1 A OPERATORS OF SYMMETRY NO\: * 1 AND LABELS\:" $log | wc -l`
CRIT8=`$GREP "1 A OPERATORS OF SYMMETRY NO\: * 2 AND LABELS\:" $log | wc -l`
CRIT9=`$GREP "1 A OPERATORS OF SYMMETRY NO\: * 3 AND LABELS\:" $log | wc -l`
CRIT10=`$GREP "1 B OPERATORS OF SYMMETRY NO\: * 1 AND LABELS\:" $log | wc -l`
CRIT11=`$GREP "1 B OPERATORS OF SYMMETRY NO\: * 2 AND LABELS\:" $log | wc -l`
CRIT12=`$GREP "1 B OPERATORS OF SYMMETRY NO\: * 3 AND LABELS\:" $log | wc -l`
CRIT13=`$GREP "1 C OPERATORS OF SYMMETRY NO\: * 1 AND LABELS\:" $log | wc -l`
CRIT14=`$GREP "1 C OPERATORS OF SYMMETRY NO\: * 2 AND LABELS\:" $log | wc -l`
CRIT15=`$GREP "1 C OPERATORS OF SYMMETRY NO\: * 3 AND LABELS\:" $log | wc -l`
CRIT16=`$GREP "1 D OPERATORS OF SYMMETRY NO\: * 1 AND LABELS\:" $log | wc -l`
CRIT17=`$GREP "1 D OPERATORS OF SYMMETRY NO\: * 2 AND LABELS\:" $log | wc -l`
CRIT18=`$GREP "1 D OPERATORS OF SYMMETRY NO\: * 3 AND LABELS\:" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18`
CTRL[5]=18
ERROR[5]="RESPONSE CALCULATION NOT SET UP CORRECTLY"

# Frequency 0.00
CRIT1=`$GREP "\@ gamma\(X\;X\,X\,X\) * 40277\.69[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\@ gamma\(X\;X\,Y\,Y\) * 13425\.89[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "\@ gamma\(X\;Y\,Y\,X\) * 13425\.89[0-9][0-9]" $log | wc -l`
CRIT4=`$GREP "\@ gamma\(X\;Y\,X\,Y\) * 13425\.89[0-9][0-9]" $log | wc -l`
CRIT5=`$GREP "\@ gamma\(X\;X\,Z\,Z\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT6=`$GREP "\@ gamma\(X\;Z\,Z\,X\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT7=`$GREP "\@ gamma\(X\;Z\,X\,Z\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT8=`$GREP "\@ gamma\(Y\;Y\,X\,X\) * 13425\.89[0-9][0-9]" $log | wc -l`
CRIT9=`$GREP "\@ gamma\(Y\;X\,X\,Y\) * 13425\.89[0-9][0-9]" $log | wc -l`
CRIT10=`$GREP "\@ gamma\(Y\;X\,Y\,X\) * 13425\.89[0-9][0-9]" $log | wc -l`
CRIT11=`$GREP "\@ gamma\(Y\;Y\,Y\,Y\) * 40277\.69[0-9][0-9]" $log | wc -l`
CRIT12=`$GREP "\@ gamma\(Y\;Y\,Z\,Z\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT13=`$GREP "\@ gamma\(Y\;Z\,Z\,Y\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT14=`$GREP "\@ gamma\(Y\;Z\,Y\,Z\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT15=`$GREP "\@ gamma\(Z\;Z\,X\,X\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT16=`$GREP "\@ gamma\(Z\;X\,X\,Z\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT17=`$GREP "\@ gamma\(Z\;X\,Z\,X\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT18=`$GREP "\@ gamma\(Z\;Z\,Y\,Y\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT19=`$GREP "\@ gamma\(Z\;Y\,Y\,Z\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT20=`$GREP "\@ gamma\(Z\;Y\,Z\,Y\) * 57863\.14[0-9][0-9]" $log | wc -l`
CRIT21=`$GREP "\@ gamma\(Z\;Z\,Z\,Z\) * 215622\.82[0-9][0-9]" $log | wc -l`
CRIT22=`$GREP "\@ Averaged gamma parallel to the applied field is * 110896\.517" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22`
CTRL[6]=22
ERROR[6]="FREQUENCY 0.00 RESULTS NOT CORRECT"

# Frequency 0.03
CRIT1=`$GREP "\@ gamma\(X\;X\,X\,X\) * 95035\.58[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\@ gamma\(X\;X\,Y\,Y\) * 31678\.52[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "\@ gamma\(X\;Y\,Y\,X\) * 31678\.52[0-9][0-9]" $log | wc -l`
CRIT4=`$GREP "\@ gamma\(X\;Y\,X\,Y\) * 31678\.52[0-9][0-9]" $log | wc -l`
CRIT5=`$GREP "\@ gamma\(X\;X\,Z\,Z\) * 137121\.20[0-9][0-9]" $log | wc -l`
CRIT6=`$GREP "\@ gamma\(X\;Z\,Z\,X\) * 137121\.20[0-9][0-9]" $log | wc -l`
CRIT7=`$GREP "\@ gamma\(X\;Z\,X\,Z\) * 137121\.20[0-9][0-9]" $log | wc -l`
CRIT8=`$GREP "\@ gamma\(Y\;Y\,X\,X\) * 31678\.52[0-9][0-9]" $log | wc -l`
CRIT9=`$GREP "\@ gamma\(Y\;X\,X\,Y\) * 31678\.52[0-9][0-9]" $log | wc -l`
CRIT10=`$GREP "\@ gamma\(Y\;X\,Y\,X\) * 31678\.52[0-9][0-9]" $log | wc -l`
CRIT11=`$GREP "\@ gamma\(Y\;Y\,Y\,Y\) * 95035\.58[0-9][0-9]" $log | wc -l`
CRIT12=`$GREP "\@ gamma\(Y\;Y\,Z\,Z\) * 137121\.20[0-9][0-9]" $log | wc -l`
CRIT13=`$GREP "\@ gamma\(Y\;Z\,Z\,Y\) * 137121\.20[0-9][0-9]" $log | wc -l`
CRIT14=`$GREP "\@ gamma\(Y\;Z\,Y\,Z\) * 137121\.20[0-9][0-9]" $log | wc -l`
CRIT15=`$GREP "\@ gamma\(Z\;Z\,X\,X\) * 175505\.78[0-9][0-9]" $log | wc -l`
CRIT16=`$GREP "\@ gamma\(Z\;X\,X\,Z\) * 175505\.78[0-9][0-9]" $log | wc -l`
CRIT17=`$GREP "\@ gamma\(Z\;X\,Z\,X\) * 175505\.78[0-9][0-9]" $log | wc -l`
CRIT18=`$GREP "\@ gamma\(Z\;Z\,Y\,Y\) * 175505\.78[0-9][0-9]" $log | wc -l`
CRIT19=`$GREP "\@ gamma\(Z\;Y\,Y\,Z\) * 175505\.78[0-9][0-9]" $log | wc -l`
CRIT20=`$GREP "\@ gamma\(Z\;Y\,Z\,Y\) * 175505\.78[0-9][0-9]" $log | wc -l`
CRIT21=`$GREP "\@ gamma\(Z\;Z\,Z\,Z\) * 825362\.93[0-9][0-9]" $log | wc -l`
CRIT22=`$GREP "\@ Averaged gamma parallel to the applied field is * 340809\.025.[0-9][0-9]" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22`
CTRL[7]=22
ERROR[7]="FREQUENCY 0.03 RESULTS NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
