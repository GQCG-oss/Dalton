
#######################################################################
#  TEST DESCRIPTION
#######################################################################
#
#*#
#*# walk_vibave3
#*# ------------
#*# Molecule:         H2O
#*# Wave Function:    SCF
#*# Test Purpose:     Vibrational average of shieldings
#*#
#
#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > walk_vibave3.mol <<%EOF%
BASIS
STO-3G
Vibrational averaging of shieldings
(test64)
    2  0 0X  Y        0.10D-14
        8.    1 
O          0.0000000000            0.0000000029           -0.1576517875
        1.    2 
H          0.0000000000            1.4500287658            1.0560138735
H          0.0000000000           -1.4500287779            1.0560138735
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > walk_vibave3.dal <<%EOF%
**DALTON INPUT
.WALK
*WALK
.VIBAVE
.DISPLA
0.05
.ECKART
 O          0.0000000000            0.0000000023           -0.1562893879
 H          0.0000000000            1.4325648509            1.0452027414
 H          0.0000000000           -1.4325648532            1.0452027333
.PRINT
 11
**FINAL
.VIBANA
*VIBANA
.PRINT
 4
**WAVE FUNCTIONS
.HF
*HF INPUT
.THRESH
 1.0D-8
**PROPERTIES
.SHIELD
*RESPONS
.THRESH
 1.0D-6
*LINRES
.SHIELD
.THRESH
 1.0D-6
**START
.SHIELD
*LINRES
.THRESH
 1.0D-6
*RESPONSE
.THRESH
1.0D-6
*END OF INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/ksh
log=$1

if [ `uname` = IRIX64 ]; then
   GREP="egrep"
else
   GREP="egrep -a"
fi

# Basis set
CRIT1=`$GREP "Basis set used is \"STO\-3G\" from the basis set library\." $log | wc -l`
CRIT2=`$GREP "O * 1 * 8 * 15 * 5 * \[6s3p\|2s1p\]" $log | wc -l`
CRIT3=`$GREP "H * 1 * 1 * 3 * 1 * \[3s\|1s\]" $log | wc -l`
CRIT4=`$GREP "total\: * 3 * 10 * 21 * 7" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[1]=5
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "1 * O * x * 0\.0000000000" $log | wc -l`
CRIT2=`$GREP "2 * y * 0\.0000000029" $log | wc -l`
CRIT3=`$GREP "3 * z * \-0\.1576517875" $log | wc -l`
CRIT4=`$GREP "4 * H * x * 0\.0000000000" $log | wc -l`
CRIT5=`$GREP "5 * y * 1\.4500287658" $log | wc -l`
CRIT6=`$GREP "6 * z * 1\.0560138735" $log | wc -l`
CRIT7=`$GREP "7 * H * x * 0\.0000000000" $log | wc -l`
CRIT8=`$GREP "8 * y * \-1\.4500287779" $log | wc -l`
CRIT9=`$GREP "9 * z * 1\.0560138735" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9`
CTRL[2]=9
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Initial energy
CRIT1=`$GREP "Final * HF energy\: * \-74\.96562293891[0-9]" $log | wc -l`
TEST[3]=`expr	$CRIT1`
CTRL[3]=2
ERROR[3]="INITIAL ENERGY NOT CORRECT"

# Numerical differentiation
CRIT1=`$GREP "Walk type\: Numerical differentiation" $log | wc -l`
CRIT2=`$GREP "Vibrational averaging of * molecular properties at an effective geometry" $log | wc -l`
CRIT3=`$GREP "Molecular properties transformed to the following Eckart frame" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=6
ERROR[4]="NUMERICAL DIFFERENTIATION NOT SET UP CORRECTLY"

# Initial gradient
CRIT1=`$GREP "O * 0\.0000000000 * 0\.000000006[0-9] * \-0\.014797372[0-9]" $log | wc -l`
CRIT2=`$GREP "H * 0\.0000000000 * 0\.010609429[0-9] * 0\.007398683[0-9]" $log | wc -l`
CRIT3=`$GREP "H * 0\.0000000000 * \-0\.010609436[0-9] * 0\.007398689[0-9]" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[5]=3
ERROR[5]="INITIAL GRADIENT NOT CORRECT"

# Initial Hessian
CRIT1=`$GREP "O * x * 0\.01219[0-9]" $log | wc -l`
CRIT2=`$GREP "O * y * 0\.000000 * 0\.76252[0-9]" $log | wc -l`
CRIT3=`$GREP "O * z * 0\.000000 * 0\.000000 * 0\.61081[0-9]" $log | wc -l`
CRIT4=`$GREP "H * x * \-0\.00609[0-9] * 0\.000000 * 0\.000000 * 0\.00670[0-9]" $log | wc -l`
CRIT5=`$GREP "H * y * 0\.000000 * \-0\.38126[0-9] * \-0\.19711[0-9] * 0\.000000 * 0\.41629[0-9]" $log | wc -l`
CRIT6=`$GREP "H * z * 0\.000000 * \-0\.31401[0-9] * \-0\.30540[0-9] * 0\.000000 * 0\.25556[0-9] * 0\.28777[0-9]" $log | wc -l`
CRIT7=`$GREP "H * x * \-0\.00609[0-9] * 0\.000000 * 0\.000000 * \-0\.00061[0-9] * 0\.000000 * 0\.000000" $log | wc -l`
CRIT8=`$GREP "H * y * 0\.000000 * \-0\.38126[0-9] * 0\.19711[0-9] * 0\.000000 * \-0\.03503[0-9] * 0\.05844[0-9]" $log | wc -l`
CRIT9=`$GREP "H * z * 0\.000000 * 0\.31401[0-9] * \-0\.30540[0-9] * 0\.000000 * \-0\.05844[0-9] * 0\.01763[0-9]" $log | wc -l`
CRIT10=`$GREP "H * x * 0\.00670[0-9]" $log | wc -l`
CRIT11=`$GREP "H * y * 0\.000000 * 0\.41629[0-9]" $log | wc -l`
CRIT12=`$GREP "H * z * 0\.000000 * \-0\.25556[0-9] * 0\.28777[0-9]" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12`
CTRL[6]=12
ERROR[6]="INITIAL HESSIAN NOT CORRECT"

# Initial shielding for oxygen
CRIT1=`$GREP "Shielding constant\: * 339\.998[0-9] ppm" $log | wc -l`
CRIT2=`$GREP "Anisotropy\: * \-16\.679[0-9] ppm" $log | wc -l`
CRIT3=`$GREP "Asymmetry\: * 0\.819[0-9]" $log | wc -l`
CRIT4=`$GREP "S parameter\: * 18\.452[0-9] ppm" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[7]=4
ERROR[7]="INITIAL CHEMICAL SHIELDING FOR OXYGEN NOT CORRECT"

# Initial shielding for hydrogen
CRIT1=`$GREP "Shielding constant\: * 32\.482[0-9] ppm" $log | wc -l`
CRIT2=`$GREP "Anisotropy\: * 12\.545[0-9] ppm" $log | wc -l`
CRIT3=`$GREP "Asymmetry\: * 0\.466[0-9]" $log | wc -l`
CRIT4=`$GREP "S parameter\: * 12\.992[0-9] ppm" $log | wc -l`
CRIT5=`$GREP "A parameter\: * 1\.357[0-9] ppm" $log | wc -l`
CRIT6=`$GREP "H * y * 0\.00000000 * 38\.6624482[0-9] * 5\.6427660[0-9]" $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6`
CTRL[8]=12
ERROR[8]="INITIAL CHEMICAL SHIELDING FOR HYDROGEN NOT CORRECT"

# Summary of initial shielding
CRIT1=`$GREP "\@1O * 339\.998[0-9] * 478\.010[0-9] \-138\.012[0-9] * \-0\.141[0-9] * 21\.236[0-9] * 15\.175[0-9] * 1\.198[0-9]" $log | wc -l`
CRIT2=`$GREP "\@1H * 32\.482[0-9] * 30\.645[0-9] * 1\.837[0-9] * 0\.461[0-9] * 14\.496[0-9] * 12\.545[0-9] * 0\.466[0-9]" $log | wc -l`
CRIT3=`$GREP "\@2O * 339\.998[0-9] * 478\.010[0-9] \-138\.012[0-9] * \-16\.679[0-9] * 0\.819[0-9] * 18\.452[0-9] * 0\.0000" $log | wc -l`
CRIT4=`$GREP "\@2H * 32\.482[0-9] * 30\.645[0-9] * 1\.837[0-9] * 12\.545[0-9] * 0\.466[0-9] * 12\.992[0-9] * 1\.357[0-9]" $log | wc -l`
TEST[9]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[9]=6
ERROR[9]="SUMMARY OF INITIAL SHIELDING NOT CORRECT"

# Projected gradient
CRIT1=`$GREP "Norm of projected gradient * 0\.02352[0-9]" $log | wc -l`
TEST[10]=`expr	$CRIT1`
CTRL[10]=2
ERROR[10]="PROJECTED GRADIENT NOT CORRECT"

# Projected Hessian
CRIT1=`$GREP "2 * 0\.00000000 * 0\.7590906[0-9] * 0\.0000000[0-9] * 0\.00000000" $log | wc -l`
CRIT2=`$GREP "5 * 0\.00000000 * \-0\.3795453[0-9] * \-0\.1971175[0-9] * 0\.00000000" $log | wc -l`
CRIT3=`$GREP "6 * 0\.00000000 * \-0\.3176772[0-9] * \-0\.3054093[0-9] * 0\.00000000" $log | wc -l`
CRIT4=`$GREP "8 * 0\.00000000 * \-0\.3795453[0-9] * 0\.1971175[0-9] * 0\.00000000" $log | wc -l`
CRIT5=`$GREP "9 * 0\.00000000 * 0\.3176772[0-9] * \-0\.3054093[0-9] * 0\.00000000" $log | wc -l`
CRIT6=`$GREP "2 * \-0\.3795453[0-9] * \-0\.3176772[0-9] * 0\.00000000 * \-0\.3795453[0-9]" $log | wc -l`
CRIT7=`$GREP "5 * 0\.4154403[0-9] * 0\.2573973[0-9] * 0\.00000000 * \-0\.0358950[0-9]" $log | wc -l`
CRIT8=`$GREP "6 * 0\.2573973[0-9] * 0\.2856516[0-9] * 0\.00000000 * 0\.0602798[0-9]" $log | wc -l`
CRIT9=`$GREP "8 * \-0\.0358950[0-9] * 0\.0602798[0-9] * 0\.00000000 * 0\.4154403[0-9]" $log | wc -l`
CRIT10=`$GREP "9 * \-0\.0602798[0-9] * 0\.0197576[0-9] * 0\.00000000 * \-0\.2573973[0-9]" $log | wc -l`
CRIT11=`$GREP "2 * 0\.3176772[0-9]" $log | wc -l`
CRIT12=`$GREP "5 * \-0\.0602798[0-9]" $log | wc -l`
CRIT13=`$GREP "6 * 0\.0197576[0-9]" $log | wc -l`
CRIT14=`$GREP "8 * \-0\.2573973[0-9]" $log | wc -l`
TEST[11]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14`
CTRL[11]=14
ERROR[11]="PROJECTED HESSIAN NOT CORRECT"

# Energy at effective geometry
CRIT1=`$GREP "Energy at effective geometry\: * \-74\.965622938[0-9]" $log | wc -l`
TEST[12]=`expr	$CRIT1`
CTRL[12]=1
ERROR[12]="ENERGY AT EFFECTIVE GEOMETRY NOT CORRECT"

# Gradient at effective geometry
CRIT1=`$GREP "1 * 0\.00000000 * 0\.0000000[0-9] * \-0\.0147973[0-9] * 0\.00000000" $log | wc -l`
CRIT2=`$GREP "1 * 0\.0106094[0-9] * 0\.0073986[0-9] * 0\.00000000 * \-0\.0106094[0-9]" $log | wc -l`
CRIT3=`$GREP "1 * 0\.0073986[0-9]" $log | wc -l`
TEST[13]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[13]=6
ERROR[13]="GRADIENT AT EFFECTIVE GEOMETRY NOT CORRECT"

# Hessian at effective geometry
CRIT1=`$GREP "2 * 0\.00000000 * 0\.7590906[0-9] * 0\.0000000[0-9] * 0\.00000000" $log | wc -l`
CRIT2=`$GREP "5 * 0\.00000000 * \-0\.3795453[0-9] * \-0\.1971175[0-9] * 0\.00000000" $log | wc -l`
CRIT3=`$GREP "6 * 0\.00000000 * \-0\.3176772[0-9] * \-0\.3054093[0-9] * 0\.00000000" $log | wc -l`
CRIT4=`$GREP "8 * 0\.00000000 * \-0\.3795453[0-9] * 0\.1971175[0-9] * 0\.00000000" $log | wc -l`
CRIT5=`$GREP "9 * 0\.00000000 * 0\.3176772[0-9] * \-0\.3054093[0-9] * 0\.00000000" $log | wc -l`
CRIT6=`$GREP "2 * \-0\.3795453[0-9] * \-0\.3176772[0-9] * 0\.00000000 * \-0\.3795453[0-9]" $log | wc -l`
CRIT7=`$GREP "5 * 0\.4154403[0-9] * 0\.2573973[0-9] * 0\.00000000 * \-0\.0358950[0-9]" $log | wc -l`
CRIT8=`$GREP "6 * 0\.2573973[0-9] * 0\.2856516[0-9] * 0\.00000000 * 0\.0602798[0-9]" $log | wc -l`
CRIT9=`$GREP "8 * \-0\.0358950[0-9] * 0\.0602798[0-9] * 0\.00000000 * 0\.4154403[0-9]" $log | wc -l`
CRIT10=`$GREP "9 * \-0\.0602798[0-9] * 0\.0197576[0-9] * 0\.00000000 * \-0\.2573973[0-9]" $log | wc -l`
CRIT11=`$GREP "2 * 0\.3176772[0-9]" $log | wc -l`
CRIT12=`$GREP "5 * \-0\.0602798[0-9]" $log | wc -l`
CRIT13=`$GREP "6 * 0\.0197576[0-9]" $log | wc -l`
CRIT14=`$GREP "8 * \-0\.2573973[0-9]" $log | wc -l`
TEST[14]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14`
CTRL[14]=14
ERROR[14]="HESSIAN AT EFFECTIVE GEOMETRY NOT CORRECT"

# Dipole moment at effective geometry
CRIT1=`$GREP "1 * 0\.00000000 * 0\.00000000 * 0\.6659511[0-9]" $log | wc -l`
TEST[15]=`expr	$CRIT1`
CTRL[15]=1
ERROR[15]="DIPOLE MOMENT AT EFFECTIVE GEOMETRY NOT CORRECT"

# Chemical shielding tensors at effective geometry
CRIT1=`$GREP "H * x * 26\.3494186[0-9] * \-0\.0000000[0-9] * \-0\.0000000[0-9]" $log | wc -l`
CRIT2=`$GREP "H * y * \-0\.0000000[0-9] * 38\.6624482[0-9] * 5\.6427660[0-9]" $log | wc -l`
CRIT3=`$GREP "H * x * 26\.3494186[0-9] * \-0\.0000000[0-9] * 0\.0000000[0-9]" $log | wc -l`
CRIT4=`$GREP "H * y * \-0\.0000000[0-9] * 38\.6624481[0-9] * \-5\.6427659[0-9]" $log | wc -l`
TEST[16]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[16]=4
ERROR[16]="CHEMICAL SHIELDING TENSORS AT EFFECTIVE GEOMETRY NOT CORRECT"

# Energy at first displacement
CRIT1=`$GREP "Final * HF energy\: * \-74\.96476354666[0-9]" $log | wc -l`
TEST[17]=`expr	$CRIT1`
CTRL[17]=1
ERROR[17]="ENERGY AT FIRST DISPLACEMENT NOT CORRECT"

# Numerical differentiation complete
CRIT1=`$GREP "All displacements are now done \- numerical differentiation is complete\." $log | wc -l`
TEST[18]=`expr	$CRIT1`
CTRL[18]=1
ERROR[18]="NUMERICAL DIFFERENTIATION NOT COMPLETED"

# Dipole moment second derivatives
CRIT1=`$GREP "1 * 0\.000000 * 0\.000000 * 0\.14711[0-9]" $log | wc -l`
CRIT2=`$GREP "2 * 0\.000000 * 0\.00000[0-9] * \-0\.01884[0-9]" $log | wc -l`
CRIT3=`$GREP "3 * 0\.000000 * 0\.000000 * \-0\.12209[0-9]" $log | wc -l`
TEST[19]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[19]=3
ERROR[19]="DIPOLE MOMENT SECOND DERIVATIVES NOT CORRECT"

# Nuclear shielding tensor second derivatives for oxygen
CRIT1=`$GREP "1 * \-193\.95[0-9] * 0\.000 * 0\.000 * 0\.000\-148\.26[0-9] * 0\.000 * 0\.000 * 0\.000\-380\.87[0-9]" $log | wc -l`
CRIT2=`$GREP "2 * \-185\.90[0-9] * 0\.000 * 0\.000 * 0\.000\-390\.84[0-9] * 0\.000 * 0\.000 * 0\.000\-262\.48[0-9]" $log | wc -l`
CRIT3=`$GREP "3 * 136\.19[0-9] * 0\.000 * 0\.000 * 0\.000\-223\.13[0-9] * 0\.000 * 0\.000 * 0\.000 * 0\.29[0-9]" $log | wc -l`
TEST[20]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[20]=3
ERROR[20]="NUCLEAR SHIELDING TENSOR SECOND DERIVATIVES FOR OXYGEN NOT CORRECT"

# Nuclear shielding tensor second derivatives for hydrogen
CRIT1=`$GREP "1 * \-0\.12[0-9] * 0\.000 * 0\.000 * 0\.000 * \-2\.75[0-9] * \-6\.98[0-9] * 0\.000 \-11\.76[0-9] \-12\.65[0-9]" $log | wc -l`
CRIT2=`$GREP "2 * 9\.11[0-9] * 0\.000 * 0\.000 * 0\.000 * 14\.59[0-9] * 12\.97[0-9] * 0\.000 * 9\.97[0-9] * 14\.47[0-9]" $log | wc -l`
CRIT3=`$GREP "3 * \-5\.98[0-9] * 0\.000 * 0\.000 * 0\.000 * \-5\.55[0-9] \-13\.74[0-9] * 0\.000 * \-3\.05[0-9] * \-9\.52[0-9]" $log | wc -l`
TEST[21]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[21]=3
ERROR[21]="NUCLEAR SHIELDING TENSOR SECOND DERIVATIVES FOR HYDROGEN NOT CORRECT"

# Vibrationally averaged dipole moment
CRIT1=`$GREP "Z * 0\.6659511[0-9] * \-0\.0007865[0-9] * 0\.6651646[0-9]" $log | wc -l`
TEST[22]=`expr	$CRIT1`
CTRL[22]=1
ERROR[22]="VIBRATIONALLY AVERAGED DIPOLE MOMENT NOT CORRECT"

# Vibrationally averaged nuclear magnetic shielding constants for oxygen
CRIT1=`$GREP "Bxmx * 350\.1149163[0-9] * \-0\.8856342[0-9] * 349\.2292821[0-9]" $log | wc -l`
CRIT2=`$GREP "Bymy * 341\.0009785[0-9] * \-7\.056420[0-1][0-9] * 333\.9445584[0-9]" $log | wc -l`
CRIT3=`$GREP "Bzmy * \-0\.0000019[0-9] * \-0\.0000024[0-9] * \-0\.0000044[0-9]" $log | wc -l`
CRIT4=`$GREP "Bymz * \-0\.0000016[0-9] * \-0\.0000025[0-9] * \-0\.0000042[0-9]" $log | wc -l`
CRIT5=`$GREP "Bzmz * 328\.8785875[0-9] * \-4\.6545508[0-9] * 324\.224036[6-7][0-9]" $log | wc -l`
TEST[23]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[23]=5
ERROR[23]="VIBRATIONALLY AVERAGED SHIELDING CONSTANTS FOR OXYGEN NOT CORRECT"

# Vibrationally averaged nuclear magnetic shielding constants for hydrogen
CRIT1=`$GREP "Bxmx * 26\.3494186[0-9] * \-0\.0150697[0-9] * 26\.3343489[0-9]" $log | wc -l`
CRIT2=`$GREP "Bymy * 38\.6624482[0-9] * 0\.0133295[0-9] * 38\.6757777[0-9]" $log | wc -l`
CRIT3=`$GREP "Bzmy * 5\.6427660[0-9] * \-0\.0503551[0-9] * 5\.5924109[0-9]" $log | wc -l`
CRIT4=`$GREP "Bymz * 2\.9274258[0-9] * \-0\.1415700[0-9] * 2\.7858557[0-9]" $log | wc -l`
CRIT5=`$GREP "Bzmz * 32\.4346361[0-9] * \-0\.1121649[0-9] * 32\.3224712[0-9]" $log | wc -l`
TEST[24]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[24]=5
ERROR[24]="VIBRATIONALLY AVERAGED SHIELDING CONSTANTS FOR HYDROGEN NOT CORRECT"

# Final energy
CRIT1=`$GREP "Final * HF energy\: * \-74\.96562293891[0-9]" $log | wc -l`
TEST[25]=`expr	$CRIT1`
CTRL[25]=2
ERROR[25]="FINAL ENERGY NOT CORRECT"

# Final rotational constants
CRIT1=`$GREP "684458\.441[0-9] * 425840\.117[0-9] * 262514\.853[0-9] MHz" $log | wc -l`
CRIT2=`$GREP "22\.83107[0-9] * 14\.20449[0-9] * 8\.75655[0-9] cm\-1" $log | wc -l`
TEST[26]=`expr	$CRIT1 \+ $CRIT2`
CTRL[26]=2
ERROR[26]="FINAL ROTATIONAL CONSTANTS NOT CORRECT"

# Final vibrational frequencies
CRIT1=`$GREP "1 * A * 4263\.4[0-9] * 0\.019425[0-9] " $log | wc -l`
CRIT2=`$GREP "2 * A * 4010\.9[0-9] * 0\.018275[0-9] " $log | wc -l`
CRIT3=`$GREP "3 * A * 2182\.4[0-9] * 0\.009943[0-9] " $log | wc -l`
TEST[27]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[27]=3
ERROR[27]="FINAL VIBRATIONAL FREQUENCIES NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

' > walk_vibave3.check
#######################################################################
