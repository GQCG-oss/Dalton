#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > choles_lda_prop.info << '%EOF%'
   choles_lda_prop
    ---------------
   Molecule:         HCN
   Wave Function:    LDA / aug-cc-pVDZ
   Test Purpose:     Cholesky LDA energy and properties
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > choles_lda_prop.mol << '%EOF%'
BASIS 
aug-cc-pVDZ
HCN 
aug-cc-pVDZ basis
    3    0
        1.    1    
H   0.3   0.0    -1.0 
        7.    1    
N   0.3   0.0     1.5
        6.    1    
C   0.0   0.0     0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > choles_lda_prop.dal << '%EOF%'
**DALTON INPUT
.RUN PROPERTIES
.CHOLES
**CHOLES
.REDUCE
.SPANDI
  1.0d-3
.THRCOM
 1.0D-8
**WAVE FUNCTIONS
.DFT
 LDA
*SCF INP
.THRESH
 1.0D-8
**PROPERTIES
.POLARI
.MAGNET
.SHIELD
**END OF DALTON INPUT
%EOF%

#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL > choles_lda_prop.check
cat >> choles_lda_prop.check << '%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# LDA energy
CRIT1=`$GREP "Final * DFT energy: * -91\.3247231" $log | wc -l`
TEST[1]=$CRIT1
CTRL[1]=1
ERROR[1]="LDA ENERGY NOT CORRECT"

# Dipole moment
CRIT1=`$GREP  "( |0)\.8738" $log | wc -l`
CRIT2=`$GREP  "( -|-0)\.8703" $log | wc -l`
CRIT3=`$GREP  "( -|-0)\.0784" $log | wc -l`
TEST[2]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`
CTRL[2]=3
ERROR[2]="DIPOLE MOMENT NOT CORRECT"


# Polarizability
CRIT1=`$GREP Ez $log | $GREP "11.7327" | $GREP "( |0).8582"  | $GREP "( |0).000000" | wc -l`
CRIT2=`$GREP Ex $log | $GREP "( |0).8582" | $GREP "9.9372"  | $GREP "( |0).000000" | wc -l`
CRIT3=`$GREP Ey $log | $GREP "( |0).000000" | $GREP "( |0).000000"  | $GREP "9.5600" | wc -l`

TEST[3]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3`

CTRL[3]=3
ERROR[3]="POLARIZABILTY NOT CORRECT"


# Magnetizabilities
CRIT1=`$GREP "Isotropic magnetizability\: * \-3\.038." $log | wc -l`
CRIT2=`$GREP "Diamagnetic contribution\: * \-5\.568. " $log | wc -l`
CRIT3=`$GREP "Paramagnetic contribution\: * 2\.529. " $log | wc -l`
CRIT4=`$GREP "1st anisotropy:" $log | $GREP "( -|-0)\.95(4|5)" | wc -l`
CRIT5=`$GREP "2nd anisotropy\: * 0\.539. " $log | wc -l`

TEST[4]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5`

CTRL[4]=5
ERROR[4]="MAGNETIZABILITIES NOT CORRECT"


# Shieldings
CRIT1=`$GREP "Shielding constant\: * 59\.945. ppm" $log | wc -l`
CRIT2=`$GREP "Anisotropy\: * 23\.741. ppm" $log | wc -l`
CRIT3=`$GREP "Asymmetry\: * (0| )\.472." $log | wc -l`

CRIT4=`$GREP "Shielding constant\: * 76\.493. ppm" $log | wc -l`
CRIT5=`$GREP "Anisotropy\: * 409\.722. ppm" $log | wc -l`
CRIT6=`$GREP "Asymmetry\: * (0| )\.113." $log | wc -l`

CRIT7=`$GREP "Shielding constant\: * 130\.660. ppm" $log | wc -l`
CRIT8=`$GREP "Anisotropy\: * 264\.633. ppm" $log | wc -l`
CRIT9=`$GREP "Asymmetry\: * (0| )\.044." $log | wc -l`

TEST[5]=`expr $CRIT1  \+ $CRIT2  \+ $CRIT3  \+ $CRIT4  \+ $CRIT5  \+ $CRIT6  \
           \+ $CRIT7  \+ $CRIT8  \+ $CRIT9`

CTRL[5]=9
ERROR[5]="SHILEDINGS NOT CORRECT"


PASSED=1
for i in 1 2 3 4 5
do
   if [ ${TEST[i]} -lt ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
