
#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > energy_zmat.info <<%EOF%
   energy_zmat
   -----------
   Molecule:         1,3,5-trifluorobenzene
   Wave Function:    SCF / STO-3G
   Test Purpose:     Energy calculation to check Z-matrix input
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > energy_zmat.mol <<%EOF%
BASIS
STO-3G
Z-matrix input

 12  0
C    1 6.0
C    2  1 1.392733 6.0
C    3  2 1.392733  1 121.2666 6.0
C    4  3 1.392733  2 118.7334  1   0.0000 0 6.0
C    5  4 1.392733  3 121.2666  2   0.0000 0 6.0
C    6  1 1.392733  2 118.7334  3   0.0000 0 6.0
H    7  1 1.080187  2 120.6333  3 180.0000 0 1.0
H    8  3 1.080187  2 120.6333  1 180.0000 0 1.0
H    9  5 1.080187  4 120.6333  3 180.0000 0 1.0
F   10  6 1.353844  1 119.3667  2 180.0000 0 9.0
F   11  4 1.353844  3 119.3667  2 180.0000 0 9.0
F   12  2 1.353844  1 119.3667  6 180.0000 0 9.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > energy_zmat.dal <<%EOF%
**DALTON INPUT
.RUN WAVE FUNCTION
**WAVE FUNCTIONS
.HF
*ORBITAL
.NOSUPSYM
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/ksh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Z-matrix
CRIT1=`$GREP "Atoms and their geometry is read in Z\-matrix format\." $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="Z-MATRIX NOT DETECTED"

# Symmetry
CRIT1=`$GREP "Symmetry class found\: D\(3h\)" $log | wc -l`
CRIT2=`$GREP "The following elements were found\: * X * Y" $log | wc -l`
CRIT3=`$GREP "Full group is\: * D\(3h\)" $log | wc -l`
CRIT4=`$GREP "Represented as\: C2v" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[2]=4
ERROR[2]="SYMMETRY NOT CORRECT"

# Geometry
CRIT1=`$GREP "1 * C * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT2=`$GREP "2 * y * (0| )\.000000000[0-9]" $log | wc -l`
CRIT3=`$GREP "3 * z * 2\.648518336[0-9]" $log | wc -l`
CRIT4=`$GREP "4 * C * 1 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT5=`$GREP "5 * y * 2\.264594092[0-9]" $log | wc -l`
CRIT6=`$GREP "6 * z * 1\.307464009[0-9]" $log | wc -l`
CRIT7=`$GREP "7 * C * 2 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT8=`$GREP "8 * y * \-2\.264594092[0-9]" $log | wc -l`
CRIT9=`$GREP "9 * z * 1\.307464009[0-9]" $log | wc -l`
CRIT10=`$GREP "10 * C * 1 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT11=`$GREP "11 * y * 2\.293684161[0-9]" $log | wc -l`
CRIT12=`$GREP "12 * z * \-1\.324259168[0-9]" $log | wc -l`
CRIT13=`$GREP "13 * C * 2 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT14=`$GREP "14 * y * \-2\.293684161[0-9]" $log | wc -l`
CRIT15=`$GREP "15 * z * \-1\.324259168[0-9]" $log | wc -l`
CRIT16=`$GREP "16 * C * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT17=`$GREP "17 * y * (0| )\.000000000[0-9]" $log | wc -l`
CRIT18=`$GREP "18 * z * \-2\.614928018[0-9]" $log | wc -l`
CRIT19=`$GREP "19 * H * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT20=`$GREP "20 * y * (0| )\.000000000[0-9]" $log | wc -l`
CRIT21=`$GREP "21 * z * 4\.689775939[0-9]" $log | wc -l`
CRIT22=`$GREP "22 * H * 1 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT23=`$GREP "23 * y * 4\.061465101[0-9]" $log | wc -l`
CRIT24=`$GREP "24 * z * \-2\.344887969[0-9]" $log | wc -l`
CRIT25=`$GREP "25 * H * 2 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT26=`$GREP "26 * y * \-4\.061465101[0-9]" $log | wc -l`
CRIT27=`$GREP "27 * z * \-2\.344887969[0-9]" $log | wc -l`
CRIT28=`$GREP "28 * F * 1 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT29=`$GREP "29 * y * 4\.480228625[0-9]" $log | wc -l`
CRIT30=`$GREP "30 * z * 2\.586661203[0-9]" $log | wc -l`
CRIT31=`$GREP "31 * F * 2 * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT32=`$GREP "32 * y * \-4\.480228625[0-9]" $log | wc -l`
CRIT33=`$GREP "33 * z * 2\.586661203[0-9]" $log | wc -l`
CRIT34=`$GREP "34 * F * x * (0| )\.000000000[0-9]" $log | wc -l`
CRIT35=`$GREP "35 * y * (0| )\.000000000[0-9]" $log | wc -l`
CRIT36=`$GREP "36 * z * \-5\.173322406[0-9]" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27 \+ $CRIT28 \+ $CRIT29 \+ $CRIT30 \+ \
		$CRIT31 \+ $CRIT32 \+ $CRIT33 \+ $CRIT34 \+ $CRIT35 \+ $CRIT36`
CTRL[3]=36
ERROR[3]="INPUT GEOMETRY NOT READ CORRECTLY"

# Energy
CRIT1=`$GREP "Final * HF energy\: * \-52(0| )\.27052156101[0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=1
ERROR[4]="SCF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3 4
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

' > energy_zmat.check
#######################################################################
