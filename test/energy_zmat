#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > energy_zmat.info <<'%EOF%'
   energy_zmat
   -----------
   Molecule:         1,3,5-trifluorobenzene
   Wave Function:    SCF / STO-3G
   Test Purpose:     Energy calculation to check Z-matrix input
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > energy_zmat.mol <<'%EOF%'
BASIS
STO-3G
Z-matrix input

  Atomtypes=12
ZMAT
C    1                                       6.0
C    2  1 1.392733                           6.0
C    3  2 1.392733  1 121.2666               6.0
C    4  3 1.392733  2 118.7334  1   0.0000 0 6.0
C    5  4 1.392733  3 121.2666  2   0.0000 0 6.0
C    6  1 1.392733  2 118.7334  3   0.0000 0 6.0
H    7  1 1.080187  2 120.6333  3 180.0000 0 1.0
H    8  3 1.080187  2 120.6333  1 180.0000 0 1.0
H    9  5 1.080187  4 120.6333  3 180.0000 0 1.0
F   10  6 1.353844  1 119.3667  2 180.0000 0 9.0
F   11  4 1.353844  3 119.3667  2 180.0000 0 9.0
F   12  2 1.353844  1 119.3667  6 180.0000 0 9.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > energy_zmat.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
**WAVE FUNCTIONS
.HF
*POPULATION
.VIRIAL
.MULLIK
.PRINT
 5
**END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >energy_zmat.check
cat >>energy_zmat.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Z-matrix
CRIT1=`$GREP "Atoms and their geometry are read in Z\-matrix format\." $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="Z-MATRIX NOT DETECTED"

# Symmetry
CRIT1=`$GREP "Symmetry class found\: D\(3h\)" $log | wc -l`
CRIT2=`$GREP "The following elements were found\: * Y * Z" $log | wc -l`
CRIT3=`$GREP "Full point group is\: * D\(3h\)" $log | wc -l`
CRIT4=`$GREP "Represented as\: * C2v" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[2]=4
ERROR[2]="SYMMETRY NOT CORRECT"

# test geometry by testing nuclear repulsion energy
TEST[3]=`$GREP "Nuclear repulsion energy : * 420.372349280415" $log | wc -l`
CTRL[3]=1
ERROR[3]="INPUT GEOMETRY NOT READ CORRECTLY"

# Energy
TEST[4]=`$GREP "Final * HF energy\: * \-520\.2705215610.." $log | wc -l`
CTRL[4]=1
ERROR[4]="SCF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3 4
do 
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done 

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM 
  exit 1
fi

%EOF%
#######################################################################
