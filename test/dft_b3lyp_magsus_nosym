#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > dft_b3lyp_magsus_nosym.info <<'%EOF%'
   dft_b3lyp_magsus_nosym 
   ----------------------
   Molecule:         HOF
   Wave Function:    DFT (B3LYP) / 6-31G** 
   Test Purpose:     Test magnetizability and molecular
                     g-factor calculation 
                     
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > dft_b3lyp_magsus_nosym.mol <<'%EOF%'
BASIS
6-31G**
HOF B3LYP/6-31g**

    3   0
        1.    1
H         -1.7477891561           -1.7077611826             .0000000000
        8.    1
O         -1.4230900102             .1042645372             .0000000000
        9.    1
F          1.2876238525            -.0038104469             .0000000000

%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > dft_b3lyp_magsus_nosym.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
.PROPERTIES
**WAVE FUNCTIONS
.DFT
 B3LYP
**PROPERTIES
.MAGNET
*END OF INPUT
%EOF%
#######################################################################

 

#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >dft_b3lyp_magsus_nosym.check
cat >>dft_b3lyp_magsus_nosym.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "H * 1 * 1 * 7 * 5 * \[4s1p\|2s1p\]" $log | wc -l`
CRIT2=`$GREP "O * 1 * 8 * 27 * 14 * \[10s4p1d\|3s2p1d\]" $log | wc -l`
CRIT3=`$GREP "F * 1 * 9 * 27 * 14 * \[10s4p1d\|3s2p1d\]" $log | wc -l`
CRIT4=`$GREP "total\: * 3 * 18 * 61 * 33" $log | wc -l`
CRIT5=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=5
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# GEOMETRY 
CRIT1=`$GREP "Total number of coordinates\: * 9" $log | wc -l`
CRIT2=`$GREP "1 * H * x * \-1\.7477891561" $log | wc -l`
CRIT3=`$GREP "2 * y * \-1\.7077611826" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * O * x * \-1\.4230900102" $log | wc -l`
CRIT6=`$GREP "5 * y * (0| )\.1042645372" $log | wc -l`
CRIT7=`$GREP "6 * z * (0| )\.0000000000" $log | wc -l`
CRIT8=`$GREP "7 * F * x * 1\.2876238525" $log | wc -l`
CRIT9=`$GREP "8 * y * (\-0|\-)\.0038104469" $log | wc -l`
CRIT10=`$GREP "9 * z * (0| )\.0000000000" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[2]=10
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Energy
CRIT1=`$GREP "Final * DFT energy\: * \-175\.45703246...." $log | wc -l`
TEST[3]=`expr	$CRIT1`
CTRL[3]=1
ERROR[3]="DFT ENERGY NOT CORRECT"

# Magnetizabilities 
CRIT1=`$GREP "Isotropic magnetizability\: * \-2\.871[0-9] * \-226\.58[0-9]. * \-13\.645[0-9]" $log | wc -l`
CRIT2=`$GREP "Diamagnetic contribution\: * \-9\.78[6-7]. * \-772\.29[0-9]. * \-46\.50[7-9]." $log | wc -l`
CRIT3=`$GREP "Paramagnetic contribution\: * 6\.91[4-6]. * 545\.70[0-9]. * 32\.86[0-9]." $log | wc -l`
CRIT4=`$GREP "1st anisotropy\: * \-1\.876[0-9] * \-148\.04[0-9]. * \-8\.915[0-9]" $log | wc -l`
CRIT5=`$GREP "2nd anisotropy\: * 1\.10[4-6]. * 87\.25[0-9]. * 5\.25[4-7]." $log | wc -l`
CRIT6=`$GREP "Bx * \-4\.122229[0-9]..... * (0| )\.003446[0-9]..... * (0| |\-0|\-)\.000000000000" $log | wc -l`
CRIT7=`$GREP "By * (0| )\.003446[0-9]..... * \-2\.13434(6|7)[0-9]..... * (0| |\-0|\-)\.000000000000" $log | wc -l`
CRIT8=`$GREP "Bz * (0| |\-0|\-)\.000000000000 * (0| |\-0|\-)\.000000000000 * \-2\.35786(3|4)[0-9]....." $log | wc -l`
CRIT9=`$GREP "Bx * \-4\.38305[5-6][0-9]..... * (0| )\.104164[0-9]..... * (0| |\-0|\-)\.000000000000" $log | wc -l`
CRIT10=`$GREP "By * (0| )\.104164[0-9]..... * \-12\.310513[0-9]..... * (0| |\-0|\-)\.000000000000" $log | wc -l`
CRIT11=`$GREP "Bz * (0| |\-0|\-)\.000000000000 * (0| |\-0|\-)\.000000000000 * \-12\.6674[4-5][0-9]......" $log | wc -l`
CRIT12=`$GREP "Bx * (0| )\.260826[0-9]..... * (\-0|\-)\.10071(7|8)[0-9]..... * (0| |\-0|\-)\.000000000000" $log | wc -l`
CRIT13=`$GREP "By * (\-0|\-)\.10071(7|8)[0-9]..... * 10\.176166[0-9]..... * (0| |\-0|\-)\.000000000000" $log | wc -l`
CRIT14=`$GREP "Bz * (0| |\-0|\-)\.000000000000 * (0| |\-0|\-)\.000000000000 * 10\.30958(5|6)[0-9]....." $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14`
CTRL[4]=14
ERROR[4]="MAGNETIZABILITY NOT CORRECT"

#Molecular g-tensor
CRIT1=`$GREP "Isotropic g-tensor * \: * (0| )\.156432.." $log | wc -l`
CRIT2=`$GREP "Nuclear contribution * \: * (0| )\.670345.." $log | wc -l`
CRIT3=`$GREP "Diamagnetic contribution * \: * (\-0|\-)\.03639[0-9].." $log | wc -l`
CRIT4=`$GREP "Electronic contribution * \: * (\-0|\-)\.47751[0-9].." $log | wc -l`
CRIT5=`$GREP "1st anisotropy\: * (0| )\.70382[0-9].." $log | wc -l`
CRIT6=`$GREP "2nd anisotropy\: * (\-0|\-)\.38147[0-9].." $log | wc -l`
CRIT7=`$GREP "A * (0| )\.62564[7-9].. * (\-0|\-)\.02129[0-5].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT8=`$GREP "B * (\-0|\-)\.4587[4-5]... * (\-0|\-)\.09788[0-9].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT9=`$GREP "C * (0| |\-0|\-)\.00000000 * (0| |\-0|\-)\.00000000 * (\-0|\-)\.05846[0-9].." $log | wc -l`
CRIT10=`$GREP "A * (0| )\.96244[0-6].. * (\-0|\-)\.02229[0-6].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT11=`$GREP "B * (\-0|\-)\.48032[0-7].. * (0| )\.51435[5-9].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT12=`$GREP "C * (0| |\-0|\-)\.00000000 * (0| |\-0|\-)\.00000000 * (0| )\.53423[0-6].." $log | wc -l`
CRIT13=`$GREP "A * (\-0|\-)\.37306[3-9].. * (0| )\.00865[3-9].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT14=`$GREP "B * (0| )\.18652[0-9].. * (\-0|\-)\.54293[0-9].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT15=`$GREP "C * (0| |\-0|\-)\.00000000 * (0| |\-0|\-)\.00000000 * (\-0|\-)\.51654[1-7].." $log | wc -l`
CRIT16=`$GREP "A * (0| )\.03627[0-6].. * (\-0|\-)\.00765[2-8].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT17=`$GREP "B * (\-0|\-)\.16495[0-6].. * (\-0|\-)\.06931[0-5].. * (0| |\-0|\-)\.00000000" $log | wc -l`
CRIT18=`$GREP "C * (0| |\-0|\-)\.00000000 * (0| |\-0|\-)\.00000000 * (\-0|\-)\.07616[0-6].." $log | wc -l`
TEST[5]=`expr   $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
                $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
                $CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18`
CTRL[5]=18
ERROR[5]="MOLECULAR G-TENSOR NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi
%EOF%
#######################################################################
#######################################################################
