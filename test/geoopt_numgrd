
#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > geoopt_numgrd.info <<%EOF%
   geoopt_numgrd
   -------------
   Molecule:         H2O
   Wave Function:    MP2 / 6-31G
   Test Purpose:     Geometry optimization (1st order) using numerical
                     gradients
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > geoopt_numgrd.mol <<%EOF%
BASIS
6-31G
MP2 geometry optimization using numerical gradients

    2    2  X  Y
        1.    1
H1        0.00000000    -1.44761450     1.07875057
        8.    1
O         0.00000000     0.00000000    -0.13594222
H2        0.00000000     1.44761450     1.07875057
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > geoopt_numgrd.dal <<%EOF%
**DALTON INPUT
.OPTIMIZE
**WAVE FUNCTIONS
.HF
.MP2
*END OF DALTON
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/sh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Optimization setup
CRIT1=`$GREP "Default 1st order method will be used\: * BFGS update\." $log | wc -l`
CRIT2=`$GREP "Optimization will be performed in redundant internal coordinates\." $log | wc -l`
CRIT3=`$GREP "Model Hessian will be used as initial Hessian\." $log | wc -l`
CRIT4=`$GREP "Trust region method will be used to control step \(default\)\." $log | wc -l`
CRIT5=`$GREP "1st Order Geometry Optimization" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=5
ERROR[1]="GEOMETRY OPTIMIZATION NOT SET UP CORRECTLY"

# Basis set
CRIT1=`$GREP "H1 * 2 * 1 * 4 * 2 * \[4s\|2s\]" $log | wc -l`
CRIT2=`$GREP "O * 1 * 8 * 22 * 9 * \[10s4p\|3s2p\]" $log | wc -l`
CRIT3=`$GREP "total\: * 3 * 10 * 30 * 13" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[2]=24
ERROR[2]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "2 * y * \-1\.4476145000" $log | wc -l`
CRIT2=`$GREP "5 * y * 1\.4476145000" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=4
ERROR[3]="GEOMETRY NOT CORRECT"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 3 * 2 * 3 * 1" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 7 * 2 * 4 * 0" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2`
CTRL[4]=16
ERROR[4]="SYMMETRY NOT CORRECT"

# Initial energies
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-75\.97834103[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-76\.11147794[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "Final * HF energy\: * \-75\.9783410313[0-9][0-9]" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[5]=6
ERROR[5]="INITIAl ENERGIES NOT CORRECT"

# Numerical derivatives
CRIT1=`$GREP "Derivatives calculated to order * 1" $log | wc -l`
CRIT2=`$GREP "Analytical derivatives from energies to * 0 order\." $log | wc -l`
CRIT3=`$GREP "1\. numerical derivatives from * (0| )\. order analytical derivatives" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[6]=12
ERROR[6]="NUMERICAL DERIVATIVES NOT SET UP CORRECTLY"

# Symmetry coordinates
CRIT1=`$GREP "Symmetry * 1 * 1 * 1 * 2 * 2 * 3 * 4 * 4 * 4" $log | wc -l`
CRIT2=`$GREP "(0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.7071 * (0| )\.0000 * (0| )\.7071 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000" $log | wc -l`
CRIT3=`$GREP "(0| )\.0000 * (0| )\.7071 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.7071 * (0| )\.0000" $log | wc -l`
CRIT4=`$GREP "(0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.7071 * (0| )\.0000 (\-0| \-)\.7071 (\-0| 0| \-|  )\.0000 * (0| )\.0000 * (0| )\.0000" $log | wc -l`
CRIT5=`$GREP "(\-0|\-)\.7071 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (\-0| 0| \-|  )\.0000 * (0| )\.7071 * (0| )\.0000 * (0| )\.0000" $log | wc -l`
CRIT6=`$GREP "(0| )\.0000 * (0| )\.7071 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 (\-0| \-)\.7071 * (0| )\.0000" $log | wc -l`
CRIT7=`$GREP "(0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * 1\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000" $log | wc -l`
CRIT8=`$GREP "(0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * 1\.0000" $log | wc -l`
CRIT9=`$GREP "(0| )\.0000 * (0| )\.0000 * 1\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000 * (0| )\.0000" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9`
CTRL[7]=36
ERROR[7]="SYMMETRY COORDINATES NOT CORRECT"

# First displacement
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-75\.97859652[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-76\.11149159[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "Final * HF energy\: * \-75\.9785965255[0-9][0-9]" $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[8]=3
ERROR[8]="FIRST DISPLACEMENT NOT CORRECT"

# Second displacement
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-75\.97805034[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-76\.11142957[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "Final * HF energy\: * \-75\.9780503475[0-9][0-9]" $log | wc -l`
TEST[9]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[9]=3
ERROR[9]="SECOND DISPLACEMENT NOT CORRECT"

# First gradient
CRIT1=`$GREP "(\-0|\-)\.0031011[0-9]" $log | wc -l`
CRIT2=`$GREP "(0| )\.0273827[0-9]" $log | wc -l`
CRIT3=`$GREP "H1 * 1 * (\-0|0|\-| )\.0000000000 * (\-0|\-)\.002192850[0-9] * (0| )\.019362556[0-9]" $log | wc -l`
CRIT4=`$GREP "H1 * 2 * (\-0|0|\-| )\.0000000000 * (0| )\.002192850[0-9] * (0| )\.019362556[0-9]" $log | wc -l`
CRIT5=`$GREP "O * (\-0|0|\-| )\.0000000000 * (\-0|0|\-| )\.0000000000 * (\-0|\-)\.038720581[0-9]" $log | wc -l`
CRIT6=`$GREP "H1 * y * (\-0|\-)\.004385700[0-9]" $log | wc -l`
CRIT7=`$GREP "H1 * z * (0| )\.038725112[0-9]" $log | wc -l`
CRIT8=`$GREP "O * z * (\-0|\-)\.038720581[0-9]" $log | wc -l`
TEST[10]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[10]=8
ERROR[10]="FIRST GRADIENT NOT CORRECT"

# First step
CRIT1=`$GREP "H1 * 1 * (0| )\.0000000000 * \-1\.481285836[0-9] * 1\.052768111[0-9]" $log | wc -l`
CRIT2=`$GREP "H1 * 2 * (0| )\.0000000000 * 1\.481285836[0-9] * 1\.052768111[0-9]" $log | wc -l`
CRIT3=`$GREP "O * (0| )\.0000000000 * (0| )\.0000000000 * (\-0|\-)\.083977303[0-9]" $log | wc -l`
TEST[11]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[11]=3
ERROR[11]="FIRST STEP NOT CORRECT"

# Second iteration
CRIT1=`$GREP "Energy at this geometry is * \: * \-76\.113576" $log | wc -l`
CRIT2=`$GREP "Norm of gradient * \: * (0| )\.02471[0-9]" $log | wc -l`
CRIT3=`$GREP "Norm of step * \: * (0| )\.08300[0-9]" $log | wc -l`
TEST[12]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[12]=3
ERROR[12]="SECOND ITERATION NOT CORRECT"

# Third iteration
CRIT1=`$GREP "Energy at this geometry is * \: * \-76\.114211" $log | wc -l`
CRIT2=`$GREP "Norm of gradient * \: * (0| )\.00076[0-9]" $log | wc -l`
CRIT3=`$GREP "Norm of step * \: * (0| )\.00127[0-9]" $log | wc -l`
TEST[13]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[13]=3
ERROR[13]="THIRD ITERATION NOT CORRECT"

# Final geometry
CRIT1=`$GREP "H1 * 1 * (0| )\.0000000000 * \-1\.501817392[0-9] * 1\.029115630[0-9]" $log | wc -l`
CRIT2=`$GREP "H1 * 2 * (0| )\.0000000000 * 1\.501817392[0-9] * 1\.029115630[0-9]" $log | wc -l`
CRIT3=`$GREP "O * (0| )\.0000000000 * (0| )\.0000000000 * (\-0|\-)\.036672341[0-9]" $log | wc -l`
TEST[14]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[14]=9
ERROR[14]="FINAL GEOMETRY NOT CORRECT"

# Final energy
CRIT1=`$GREP "Energy at this geometry is * \: * \-76\.114212" $log | wc -l`
CRIT2=`$GREP "Norm of gradient * \: * (0| )\.00009[0-9]" $log | wc -l`
CRIT3=`$GREP "Norm of step * \: * (0| )\.00029[0-9]" $log | wc -l`
TEST[15]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[15]=3
ERROR[15]="FINAL ENERGY NOT CORRECT"

# Geometry optimization
CRIT1=`$GREP "Geometry converged in * 4( |  )iterations\!" $log | wc -l`
CRIT2=`$GREP "Energy at final geometry is * \: * \-76\.114212 a\.u\." $log | wc -l`
CRIT3=`$GREP "Energy change during optimization \: * (\-0|\-)\.002734 a\.u\." $log | wc -l`
TEST[16]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[16]=3
ERROR[16]="GEOMETRY NOT CONVERGED CORRECTLY"


PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

' > geoopt_numgrd.check
#######################################################################
