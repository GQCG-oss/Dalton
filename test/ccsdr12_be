#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > ccsdr12_be.info <<'%EOF%'
   ccsdr12_be
   ------------
   Molecule:         Be in D2h
   Wave Function:    CC2-R12/B/1 CCSD(R12)/B/1 
   Test Purpose:     test CC2-R12/CCSD(R12) using .NATVIR option
%EOF%

#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > ccsdr12_be.mol <<'%EOF%'
BASIS
6-31G 6-311++G(3df,3pd)
Be

    2  0 3  X  Y  Z
 1      4.    1
Be       0.0000000000000     0.0000000000000     0.0000000000000       *
 2      4.    1
Be       0.0000000000000     0.0000000000000     0.0000000000000       *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > ccsdr12_be.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
**INTEGRALS
.R12
.AUXBAS
**WAVE FUNCTIONS
.CC
*ORBITALS
.MOSTART
 H1DIAG
.R12ORB
 0 1 1 0 1 0 0 0
.MOSTART
 H1DIAG
*CC INPUT
.CC2
.CCSD
.PRINT
 5
.THRENR
 1.0D-10
.MAX IT
 100
*CCEXCI
.THREXC
 1.0D-08
.NCCEXC
 2 1 1 0 0 0 0 0
*R12 INP
.NO HYB
.CC2
 1B
.NATVIR
.CCVABKL
*END OF INPUT
%EOF%
#######################################################################


#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >ccsdr12_be.check
cat >>ccsdr12_be.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi
#
#           Total SCF   energy:                   -14.5667640335
#           Total MP2-R12/B energy:               -14.6317815120
#           Total CC2-R12/B energy:               -14.6324488403
#
#
#+=============================================================================+
#|  sym. | Exci.  |        CC2-R12/B  Excitation energies            | ||T1||  |
#|(spin, |        +------------------------------------------------------------+
#| spat) |        |     Hartree    |       eV.      |     cm-1       |    %    |
#+=============================================================================+
#| ^1Ag  |    1   |     0.4814842  |      13.10185  |    105673.561  |  96.60  |
#| ^1Ag  |    2   |     0.6767844  |      18.41624  |    148536.998  |  92.70  |
#+-----------------------------------------------------------------------------+
#| ^1B3u |    1   |     0.2223167  |       6.04954  |     48792.868  |  99.65  |
#+-----------------------------------------------------------------------------+
#| ^1B2u |    1   |     0.2223167  |       6.04954  |     48792.868  |  99.65  |
#+=============================================================================+
#
#
#    Total energies in Hartree:
#            1 ^1Ag       -14.1509646675
#            2 ^1Ag       -13.9556644794
#            1 ^1B3u      -14.4101321767
#            1 ^1B2u      -14.4101321767
#
#
#           Total SCF   energy:                   -14.5667640335
#           Total RSTAR(R12)/B energy:            -14.6324488403
#           Total CCSD(R12)/B energy:             -14.6487450643
#
#
#+=============================================================================+
#|  sym. | Exci.  |        CCSD(R12)/ Excitation energies            | ||T1||  |
#|(spin, |        +------------------------------------------------------------+
#| spat) |        |     Hartree    |       eV.      |     cm-1       |    %    |
#+=============================================================================+
#| ^1Ag  |    1   |     0.3811826  |      10.37251  |     83659.904  |   0.15  |
#| ^1Ag  |    2   |     0.4784056  |      13.01808  |    104997.903  |  86.12  |
#+-----------------------------------------------------------------------------+
#| ^1B3u |    1   |     0.2377084  |       6.46837  |     52170.964  |  99.42  |
#+-----------------------------------------------------------------------------+
#| ^1B2u |    1   |     0.2377084  |       6.46837  |     52170.964  |  99.42  |
#+=============================================================================+
#
#
#    Total energies in Hartree:
#            1 ^1Ag       -14.2675624921
#            2 ^1Ag       -14.1703394152
#            1 ^1B3u      -14.4110366607
#            1 ^1B2u      -14.4110366607
#
CRIT1=`$GREP "Total MP2-R12/B energy: *\-14\.6317815120" $log | wc -l`
TEST[1]=`expr $CRIT1` 
CTRL[1]=2
ERROR[1]="MP2-R12/B ENERGY NOT CORRECT"

CRIT2=`$GREP "Total CC2-R12/B energy: *\-14\.6324488403" $log | wc -l`
TEST[2]=`expr $CRIT2`
CTRL[2]=2
ERROR[2]="CC2-R12/B ENERGY NOT CORRECT"

CRIT3=`$GREP "Total CCSD\(R12\)/B energy: *\-14\.6487450643" $log | wc -l`
TEST[3]=`expr $CRIT3`
CTRL[3]=2
ERROR[3]="CCSD(R12)/B ENERGY NOT CORRECT"

CRIT4=`$GREP "1Ag *\-14\.150964667" $log | wc -l`
CRIT5=`$GREP "1B3u *\-14\.410132176" $log | wc -l`
CRIT6=`$GREP "1B2u *\-14\.410132176" $log | wc -l`
TEST[4]=`expr $CRIT4 + $CRIT5 + $CRIT6`
CTRL[4]=3
ERROR[4]="CC2-R12/B EXCITATION ENERGIES NOT CORRECT"

CRIT7=`$GREP "1Ag *\-14\.170339415" $log | wc -l`
CRIT8=`$GREP "1B3u *\-14\.411036660" $log | wc -l`
CRIT9=`$GREP "1B2u *\-14\.411036660" $log | wc -l`
TEST[5]=`expr $CRIT7 + $CRIT8 + $CRIT9`
CTRL[5]=3
ERROR[5]="CCSD(R12)/B EXCITATION ENERGIES NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%
#######################################################################
