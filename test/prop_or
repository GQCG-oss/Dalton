#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > prop_or.info <<'%EOF%'
   prop_or
   --------
   Molecule:         Methyloxirane
   Wave Function:    SCF
   Test Purpose:     Natural Optical Rotation with Absorption
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > prop_or.mol <<'%EOF%'
BASIS
3-21G
Methyloxirane (B3LYP/6-31G* optimized geometry)
================================================
    3    0         A
        6.    3
C       -1.045082    0.615240   -0.060290
C        0.152118   -0.037513    0.489147
C        1.511521    0.100482   -0.148726
        8.    1
O       -0.827106   -0.789457   -0.242703
        1.    6
H       -1.875126    0.879897    0.595964
H       -0.958595    1.221760   -0.963024
H        0.155847   -0.255258    1.560108
H        1.416164    0.337467   -1.213207
H        2.077966   -0.833346   -0.056439
H        2.089255    0.895882    0.337436
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > prop_or.dal <<'%EOF%'
**DALTON INPUT
.RUN PROPERTIES
**INTEGRALS
.DIPLEN
**WAVE FUNCTION
.HF
**PROPERTIES
.OPTROT
*ABALNR
.LIFETIME
 2000.0
.FREQUENCIES
 1
 0.07318
*END OF
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >prop_or.check
cat >>prop_or.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Energy
CRIT1=`$GREP "Final * HF energy\: * \-190\.8250190990" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="ENERGY NOT CORRECT"

# Optical Rotation
CRIT1=`$GREP "Optical rotation.*-29\.7191.*-3\.9973" $log | wc -l`
CRIT2=`$GREP "Optical rotation.*-31\.6382.*-4\.2861" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2`
CTRL[2]=2
ERROR[2]="OPTICAL ROTATION NOT CORRECT"

# Excitation Energies
CRIT1=`$GREP "1     1      (0| )\.3628 a.u.    9\.871 eV    125\.60 nm" $log | wc -l`
CRIT2=`$GREP "1     2      (0| )\.3764 a.u.   10\.242 eV    121\.05 nm" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="EXCITATION ENERGIES NOT CORRECT"

PASSED=1
for i in 1 2 3
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
