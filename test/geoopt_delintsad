
#######################################################################
#  TEST DESCRIPTION
#######################################################################
#
#*#
#*# geoopt_delintsad
#*# ----------------
#*# Molecule:         C2H6
#*# Wave Function:    SCF
#*# Test Purpose:     Saddle point optimization in delocalized internal
#*#                   coordinates. The initial Hessian is calculated, then
#*#                   updated using the Rank one (MS) formula. The step is
#*#                   controlled with the partitioned rational function
#*#                   method and Baker's convergence criteria are used
#*#
#
#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > geoopt_delintsad.mol <<%EOF%
BASIS                                                                           
STO-3G
First order saddle point optimization in delocalized internal coordinates
The initial molecular Hessian is calculated. (test70)
    2     
        6.    2                                                                 
C     0.0000000000        0.0000000000        1.4597876282             *
C     0.0000000000        0.0000000000       -1.4597876282             *
        1.    6                                                                 
H     1.6808445513        0.9704360937        2.1445545504             *
H    -1.6808445513        0.9704360937        2.1445545504             *
H     0.0000000000       -1.9408721894        2.1445545504             *
H    -1.9608445513       -0.4204360937       -2.1445545504             *
H     1.2008445513       -1.4004360937       -2.1445545504             *
H     0.4600000000        1.8308721894       -2.1445545504             *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > geoopt_delintsad.dal <<%EOF%
**GENERAL
.OPTIMIZE
*OPTIMIZE
.DELINT
.RF
.INITHE
.RANKON
.SADDLE
.BAKER
**WAVE FUNCTION
.HF
*END OF INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/ksh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Geometry optimization
CRIT1=`$GREP "Saddle point optimization has been requested\." $log | wc -l`
CRIT2=`$GREP "1st order method with rank one update will be used\." $log | wc -l`
CRIT3=`$GREP "Optimization will be performed in delocalized internal coordinates\." $log | wc -l`
CRIT4=`$GREP "Initial Hessian will be calculated\." $log | wc -l`
CRIT5=`$GREP "Partitioned rational function method will be used to control step\." $log | wc -l`
CRIT6=`$GREP "The eigenvector corresponding to the lowest eigenvalue is chosen" $log | wc -l`
CRIT7=`$GREP "as reaction mode \(default\)\." $log | wc -l`
CRIT8=`$GREP "Baker.s convergence criteria will be used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[1]=8
ERROR[1]="GEOMETRY OPTIMIZATION NOT SET UP CORRECTLY"

# Basis set
CRIT1=`$GREP "C * 1 * 6 * 15 * 5 * \[6s3p\|2s1p\]" $log | wc -l`
CRIT2=`$GREP "H * 1 * 1 * 3 * 1 * \[3s\|1s\]" $log | wc -l`
CRIT3=`$GREP "total\: * 8 * 18 * 48 * 16" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[2]=9
ERROR[2]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: 24" $log | wc -l`
CRIT2=`$GREP "3 * z * 1\.4602697463" $log | wc -l`
CRIT3=`$GREP "4 * C * x * (0| )\.0750168796" $log | wc -l`
CRIT4=`$GREP "6 * z * \-1\.4583415923" $log | wc -l`
CRIT5=`$GREP "7 * H * x * 1\.6294429429" $log | wc -l`
CRIT6=`$GREP "8 * y * 1\.0258944623" $log | wc -l`
CRIT7=`$GREP "9 * z * 2\.1871442909" $log | wc -l`
CRIT8=`$GREP "10 * H * x * \-1\.7292708409" $log | wc -l`
CRIT9=`$GREP "11 * y * (0| )\.9139003605" $log | wc -l`
CRIT10=`$GREP "12 * z * 2\.1008154864" $log | wc -l`
CRIT11=`$GREP "13 * H * x * (0| )\.0470437704" $log | wc -l`
CRIT12=`$GREP "14 * y * \-1\.9397948248" $log | wc -l`
CRIT13=`$GREP "15 * z * 2\.1464719867" $log | wc -l`
CRIT14=`$GREP "16 * H * x * \-1\.8524953517" $log | wc -l`
CRIT15=`$GREP "17 * y * (\-0|\-)\.4855279159" $log | wc -l`
CRIT16=`$GREP "18 * z * \-2\.1928773926" $log | wc -l`
CRIT17=`$GREP "19 * H * x * 1\.3390331998" $log | wc -l`
CRIT18=`$GREP "20 * y * \-1\.3596527890" $log | wc -l`
CRIT19=`$GREP "21 * z * \-2\.1108457394" $log | wc -l`
CRIT20=`$GREP "22 * H * x * (0| )\.4912294000" $log | wc -l`
CRIT21=`$GREP "23 * y * 1\.8451807069" $log | wc -l`
CRIT22=`$GREP "24 * z * \-2\.1326367860" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22`
CTRL[3]=22
ERROR[3]="GEOMETRY NOT READ CORRECTLY"

# Initial energy
CRIT1=`$GREP "Final * HF energy\: * \-78\.30080922911[0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=1
ERROR[4]="INITIAL ENERGY NOT CORRECT"

# Initial gradient
CRIT1=`$GREP "C * (\-0|\-)\.001367953[0-9] * (0| )\.000022779[0-9] * (0| )\.009403410[0-9]" $log | wc -l`
CRIT2=`$GREP "C * (0| )\.073737552[0-9] * (\-0|\-)\.003654989[0-9] * (\-0|\-)\.021146532[0-9]" $log | wc -l`
CRIT3=`$GREP "H * (0| )\.003387398[0-9] * (0| )\.003265197[0-9] * (\-0|\-)\.003461714[0-9]" $log | wc -l`
CRIT4=`$GREP "H * (\-0|\-)\.004776829[0-9] * (0| )\.001294116[0-9] * (\-0|\-)\.003380730[0-9]" $log | wc -l`
CRIT5=`$GREP "H * (0| )\.001100694[0-9] * (\-0|\-)\.004722929[0-9] * (\-0|\-)\.003194162[0-9]" $log | wc -l`
CRIT6=`$GREP "H * (\-0|\-)\.028050077[0-9] * (\-0|\-)\.003724429[0-9] * (\-0|\-)\.008319503[0-9]" $log | wc -l`
CRIT7=`$GREP "H * (\-0|\-)\.032575872[0-9] * (0| )\.024261712[0-9] * (0| )\.019155115[0-9]" $log | wc -l`
CRIT8=`$GREP "H * (\-0|\-)\.011454912[0-9] * (\-0|\-)\.016741455[0-9] * (0| )\.010944116[0-9]" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[5]=8
ERROR[5]="INITIAL GRADIENT NOT CORRECT"

# Initial Hessian
CRIT1=`$GREP "C * x * (0| )\.86241[0-9]" $log | wc -l`
CRIT2=`$GREP "C * y * (\-0|\-)\.00096[0-9] * (0| )\.86435[0-9]" $log | wc -l`
CRIT3=`$GREP "C * z * (0| )\.00411[0-9] * (\-0|\-)\.00012[0-9] * (0| )\.70151[0-9]" $log | wc -l`
CRIT4=`$GREP "C * x * (\-0|\-)\.12130[0-9] * (\-0|\-)\.00014[0-9] * (0| )\.00635[0-9] * (0| )\.81853[0-9]" $log | wc -l`
CRIT5=`$GREP "C * y * (0| )\.00352[0-9] * (\-0|\-)\.12458[0-9] * (\-0|\-)\.00017[0-9] * (\-0|\-)\.08704[0-9] * (0| )\.99219[0-9]" $log | wc -l`
CRIT6=`$GREP "C * z * (0| )\.00420[0-9] * (0| )\.00005[0-9] * (\-0|\-)\.31678[0-9] * (\-0|\-)\.06042[0-9] * (0| )\.00384[0-9] * (0| )\.70182[0-9]" $log | wc -l`
CRIT7=`$GREP "H * x * (\-0|\-)\.31902[0-9] * (\-0|\-)\.14784[0-9] * (\-0|\-)\.10309[0-9] * (0| )\.00618[0-9] * (0| )\.00357[0-9] * (0| )\.00352[0-9]" $log | wc -l`
CRIT8=`$GREP "H * y * (\-0|\-)\.14893[0-9] * (\-0|\-)\.17710[0-9] * (\-0|\-)\.06615[0-9] * (0| )\.00287[0-9] * (0| )\.00232[0-9] * (0| )\.00331[0-9]" $log | wc -l`
CRIT9=`$GREP "H * z * (\-0|\-)\.10403[0-9] * (\-0|\-)\.06587[0-9] * (\-0|\-)\.11910[0-9] * (\-0|\-)\.03901[0-9] * (\-0|\-)\.02160[0-9] * (\-0|\-)\.01541[0-9]" $log | wc -l`
CRIT10=`$GREP "H * x * (\-0|\-)\.34944[0-9] * (0| )\.14093[0-9] * (0| )\.09725[0-9] * (0| )\.00500[0-9] * (\-0|\-)\.00255[0-9] * (\-0|\-)\.00431[0-9]" $log | wc -l`
CRIT11=`$GREP "H * y * (0| )\.13973[0-9] * (\-0|\-)\.15772[0-9] * (\-0|\-)\.05003[0-9] * (\-0|\-)\.00307[0-9] * (0| )\.00192[0-9] * (0| )\.00095[0-9]" $log | wc -l`
CRIT12=`$GREP "H * z * (0| )\.09697[0-9] * (\-0|\-)\.05065[0-9] * (\-0|\-)\.10853[0-9] * (0| )\.03857[0-9] * (\-0|\-)\.02390[0-9] * (\-0|\-)\.01331[0-9]" $log | wc -l`
CRIT13=`$GREP "H * x * (\-0|\-)\.08379[0-9] * (0| )\.00881[0-9] * (\-0|\-)\.00405[0-9] * (0| )\.00026[0-9] * (\-0|\-)\.00136[0-9] * (0| )\.00152[0-9]" $log | wc -l`
CRIT14=`$GREP "H * y * (0| )\.00775[0-9] * (\-0|\-)\.41783[0-9] * (0| )\.11646[0-9] * (0| )\.00009[0-9] * (0| )\.00737[0-9] * (\-0|\-)\.00458[0-9]" $log | wc -l`
CRIT15=`$GREP "H * z * (\-0|\-)\.00345[0-9] * (0| )\.11662[0-9] * (\-0|\-)\.11432[0-9] * (0| )\.00103[0-9] * (0| )\.04535[0-9] * (\-0|\-)\.01401[0-9]" $log | wc -l`
CRIT16=`$GREP "H * x * (0| )\.00683[0-9] * (0| )\.00183[0-9] * (0| )\.00444[0-9] * (\-0|\-)\.33559[0-9] * (\-0|\-)\.06101[0-9] * (\-0|\-)\.08880[0-9]" $log | wc -l`
CRIT17=`$GREP "H * y * (0| )\.00154[0-9] * (0| )\.00052[0-9] * (\-0|\-)\.00006[0-9] * (\-0|\-)\.05999[0-9] * (\-0|\-)\.10978[0-9] * (\-0|\-)\.02172[0-9]" $log | wc -l`
CRIT18=`$GREP "H * z * (\-0|\-)\.04178[0-9] * (\-0|\-)\.01385[0-9] * (\-0|\-)\.01479[0-9] * (\-0|\-)\.09160[0-9] * (\-0|\-)\.02317[0-9] * (\-0|\-)\.11619[0-9]" $log | wc -l`
CRIT19=`$GREP "H * x * (0| )\.00380[0-9] * (\-0|\-)\.00351[0-9] * (\-0|\-)\.00267[0-9] * (\-0|\-)\.27946[0-9] * (0| )\.23102[0-9] * (0| )\.11010[0-9]" $log | wc -l`
CRIT20=`$GREP "H * y * (\-0|\-)\.00449[0-9] * (0| )\.00460[0-9] * (0| )\.00448[0-9] * (0| )\.23262[0-9] * (\-0|\-)\.31421[0-9] * (\-0|\-)\.11767[0-9]" $log | wc -l`
CRIT21=`$GREP "H * z * (0| )\.03430[0-9] * (\-0|\-)\.03097[0-9] * (\-0|\-)\.01384[0-9] * (0| )\.11111[0-9] * (\-0|\-)\.11749[0-9] * (\-0|\-)\.11177[0-9]" $log | wc -l`
CRIT22=`$GREP "H * x * (0| )\.00051[0-9] * (0| )\.00088[0-9] * (\-0|\-)\.00234[0-9] * (\-0|\-)\.09363[0-9] * (\-0|\-)\.08616[0-9] * (0| )\.03419[0-9]" $log | wc -l`
CRIT23=`$GREP "H * y * (0| )\.00183[0-9] * (0| )\.00777[0-9] * (\-0|\-)\.00440[0-9] * (\-0|\-)\.08534[0-9] * (\-0|\-)\.45523[0-9] * (0| )\.13580[0-9]" $log | wc -l`
CRIT24=`$GREP "H * z * (0| )\.00966[0-9] * (0| )\.04481[0-9] * (\-0|\-)\.01412[0-9] * (0| )\.03396[0-9] * (0| )\.13714[0-9] * (\-0|\-)\.11433[0-9]" $log | wc -l`
CRIT25=`$GREP "H * x * (0| )\.32338[0-9]" $log | wc -l`
CRIT26=`$GREP "H * y * (0| )\.15942[0-9] * (0| )\.17083[0-9]" $log | wc -l`
CRIT27=`$GREP "H * z * (0| )\.11170[0-9] * (0| )\.06941[0-9] * (0| )\.12443[0-9]" $log | wc -l`
CRIT28=`$GREP "H * x * (\-0|\-)\.01854[0-9] * (0| )\.01988[0-9] * (0| )\.01352[0-9] * (0| )\.35575[0-9]" $log | wc -l`
CRIT29=`$GREP "H * y * (\-0|\-)\.02278[0-9] * (0| )\.01367[0-9] * (0| )\.00990[0-9] * (\-0|\-)\.15058[0-9] * (0| )\.15006[0-9]" $log | wc -l`
CRIT30=`$GREP "H * z * (\-0|\-)\.01545[0-9] * (0| )\.00994[0-9] * (0| )\.00622[0-9] * (\-0|\-)\.10319[0-9] * (0| )\.05565[0-9] * (0| )\.11348[0-9]" $log | wc -l`
CRIT31=`$GREP "H * x * (0| )\.00617[0-9] * (\-0|\-)\.03423[0-9] * (0| )\.01561[0-9] * (0| )\.00506[0-9] * (0| )\.03625[0-9] * (\-0|\-)\.01627[0-9]" $log | wc -l`
CRIT32=`$GREP "H * y * (0| )\.00774[0-9] * (\-0|\-)\.01151[0-9] * (0| )\.00833[0-9] * (\-0|\-)\.00695[0-9] * (\-0|\-)\.00942[0-9] * (0| )\.00685[0-9]" $log | wc -l`
CRIT33=`$GREP "H * z * (0| )\.00203[0-9] * (\-0|\-)\.01848[0-9] * (0| )\.00673[0-9] * (\-0|\-)\.00080[0-9] * (\-0|\-)\.01663[0-9] * (0| )\.00581[0-9]" $log | wc -l`
CRIT34=`$GREP "H * x * (0| )\.00086[0-9] * (0| )\.00014[0-9] * (0| )\.00195[0-9] * (0| )\.00144[0-9] * (0| )\.00026[0-9] * (0| )\.00046[0-9]" $log | wc -l`
CRIT35=`$GREP "H * y * (\-0|\-)\.00017[0-9] * (0| )\.00094[0-9] * (\-0|\-)\.00016[0-9] * (\-0|\-)\.00048[0-9] * (0| )\.00035[0-9] * (\-0|\-)\.00002[0-9]" $log | wc -l`
CRIT36=`$GREP "H * z * (0| )\.00138[0-9] * (0| )\.00145[0-9] * (\-0|\-)\.00807[0-9] * (\-0|\-)\.00056[0-9] * (0| )\.00017[0-9] * (0| )\.00337[0-9]" $log | wc -l`
CRIT37=`$GREP "H * x * (0| )\.00027[0-9] * (0| )\.00003[0-9] * (0| )\.00025[0-9] * (0| )\.00078[0-9] * (0| )\.00031[0-9] * (\-0|\-)\.00066[0-9]" $log | wc -l`
CRIT38=`$GREP "H * y * (\-0|\-)\.00015[0-9] * (\-0|\-)\.00015[0-9] * (0| )\.00036[0-9] * (0| )\.00003[0-9] * (0| )\.00088[0-9] * (0| )\.00203[0-9]" $log | wc -l`
CRIT39=`$GREP "H * z * (\-0|\-)\.00028[0-9] * (0| )\.00037[0-9] * (0| )\.00133[0-9] * (\-0|\-)\.00168[0-9] * (0| )\.00036[0-9] * (\-0|\-)\.00841[0-9]" $log | wc -l`
CRIT40=`$GREP "H * x * (0| )\.00067[0-9] * (0| )\.00081[0-9] * (\-0|\-)\.00001[0-9] * (\-0|\-)\.00005[0-9] * (\-0|\-)\.00011[0-9] * (\-0|\-)\.00042[0-9]" $log | wc -l`
CRIT41=`$GREP "H * y * (0| )\.00020[0-9] * (0| )\.00100[0-9] * (\-0|\-)\.00037[0-9] * (\-0|\-)\.00026[0-9] * (0| )\.00026[0-9] * (0| )\.00010[0-9]" $log | wc -l`
CRIT42=`$GREP "H * z * (0| )\.00019[0-9] * (0| )\.00013[0-9] * (0| )\.00386[0-9] * (\-0|\-)\.00022[0-9] * (\-0|\-)\.00040[0-9] * (0| )\.00135[0-9]" $log | wc -l`
CRIT43=`$GREP "H * x * (0| )\.07077[0-9]" $log | wc -l`
CRIT44=`$GREP "H * y * (\-0|\-)\.00887[0-9] * (0| )\.42928[0-9]" $log | wc -l`
CRIT45=`$GREP "H * z * (0| )\.00215[0-9] * (\-0|\-)\.12492[0-9] * (0| )\.11903[0-9]" $log | wc -l`
CRIT46=`$GREP "H * x * (0| )\.00003[0-9] * (0| )\.00022[0-9] * (0| )\.00002[0-9] * (0| )\.34973[0-9]" $log | wc -l`
CRIT47=`$GREP "H * y * (0| )\.00020[0-9] * (0| )\.00014[0-9] * (\-0|\-)\.00037[0-9] * (0| )\.06836[0-9] * (0| )\.09936[0-9]" $log | wc -l`
CRIT48=`$GREP "H * z * (0| )\.00039[0-9] * (0| )\.00006[0-9] * (0| )\.00132[0-9] * (0| )\.09832[0-9] * (0| )\.02608[0-9] * (0| )\.12121[0-9]" $log | wc -l`
CRIT49=`$GREP "H * x * (0| )\.00047[0-9] * (\-0|\-)\.00009[0-9] * (\-0|\-)\.00032[0-9] * (\-0|\-)\.01838[0-9] * (0| )\.03039[0-9] * (0| )\.01666[0-9]" $log | wc -l`
CRIT50=`$GREP "H * y * (\-0|\-)\.00071[0-9] * (0| )\.00128[0-9] * (0| )\.00031[0-9] * (\-0|\-)\.01393[0-9] * (0| )\.01187[0-9] * (0| )\.00576[0-9]" $log | wc -l`
CRIT51=`$GREP "H * z * (\-0|\-)\.00012[0-9] * (\-0|\-)\.00037[0-9] * (0| )\.00378[0-9] * (\-0|\-)\.01228[0-9] * (0| )\.01384[0-9] * (0| )\.00652[0-9]" $log | wc -l`
CRIT52=`$GREP "H * x * (0| )\.00101[0-9] * (0| )\.00008[0-9] * (\-0|\-)\.00066[0-9] * (\-0|\-)\.00493[0-9] * (\-0|\-)\.03985[0-9] * (0| )\.01718[0-9]" $log | wc -l`
CRIT53=`$GREP "H * y * (\-0|\-)\.00010[0-9] * (0| )\.00070[0-9] * (\-0|\-)\.00188[0-9] * (0| )\.00411[0-9] * (\-0|\-)\.00340[0-9] * (0| )\.00348[0-9]" $log | wc -l`
CRIT54=`$GREP "H * z * (0| )\.00077[0-9] * (\-0|\-)\.00183[0-9] * (\-0|\-)\.00835[0-9] * (\-0|\-)\.00412[0-9] * (\-0|\-)\.01758[0-9] * (0| )\.00662[0-9]" $log | wc -l`
CRIT55=`$GREP "H * x * (0| )\.27984[0-9]" $log | wc -l`
CRIT56=`$GREP "H * y * (\-0|\-)\.24306[0-9] * (0| )\.30987[0-9]" $log | wc -l`
CRIT57=`$GREP "H * z * (\-0|\-)\.11623[0-9] * (0| )\.12229[0-9] * (0| )\.11603[0-9]" $log | wc -l`
CRIT58=`$GREP "H * x * (0| )\.01267[0-9] * (0| )\.02968[0-9] * (\-0|\-)\.01479[0-9] * (0| )\.08376[0-9]" $log | wc -l`
CRIT59=`$GREP "H * y * (\-0|\-)\.01509[0-9] * (\-0|\-)\.01414[0-9] * (0| )\.01197[0-9] * (0| )\.09465[0-9] * (0| )\.46304[0-9]" $log | wc -l`
CRIT60=`$GREP "H * z * (\-0|\-)\.00712[0-9] * (\-0|\-)\.01757[0-9] * (0| )\.00634[0-9] * (\-0|\-)\.03312[0-9] * (\-0|\-)\.14470[0-9] * (0| )\.11863[0-9]" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ \
		$CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ \
		$CRIT25 \+ $CRIT26 \+ $CRIT27 \+ $CRIT28 \+ $CRIT29 \+ $CRIT30 \+ \
		$CRIT31 \+ $CRIT32 \+ $CRIT33 \+ $CRIT34 \+ $CRIT35 \+ $CRIT36 \+ \
		$CRIT37 \+ $CRIT38 \+ $CRIT39 \+ $CRIT40 \+ $CRIT41 \+ $CRIT42 \+ \
		$CRIT43 \+ $CRIT44 \+ $CRIT45 \+ $CRIT46 \+ $CRIT47 \+ $CRIT48 \+ \
		$CRIT49 \+ $CRIT50 \+ $CRIT51 \+ $CRIT52 \+ $CRIT53 \+ $CRIT54 \+ \
		$CRIT55 \+ $CRIT56 \+ $CRIT57 \+ $CRIT58 \+ $CRIT59 \+ $CRIT60`
CTRL[6]=60
ERROR[6]="INITIAL HESSIAN NOT CORRECT"

# Initial step
CRIT1=`$GREP "C * (\-0|\-)\.0146[8-9]....[0-9] * (\-0|\-)\.00031....[0-9] * 1\.45565....[0-9]" $log | wc -l`
CRIT2=`$GREP "C * (0| )\.020(29|30)....[0-9] * (\-0|\-)\.00(189|190)....[0-9] * \-1\.4571[8-9]....[0-9]" $log | wc -l`
CRIT3=`$GREP "H * 1\.54659....[0-9] * 1\.10220....[0-9] * 2\.2019[6-7]....[0-9]" $log | wc -l`
CRIT4=`$GREP "H * \-1\.7629[5-7]....[0-9] * (0| )\.8084[1-2]....[0-9] * 2\.162(49|50|51|52)....[0-9]" $log | wc -l`
CRIT5=`$GREP "H * (0| )\.1461[6-7]....[0-9] * \-1\.9109[5-7]....[0-9] * 2\.1862[3-6]....[0-9]" $log | wc -l`
CRIT6=`$GREP "H * \-1\.84869....[0-9] * (\-0|\-)\.38188....[0-9] * \-2\.2010[3-6]....[0-9]" $log | wc -l`
CRIT7=`$GREP "H * 1\.28913....[0-9] * \-1\.43410....[0-9] * \-2\.17041....[0-9]" $log | wc -l`
CRIT8=`$GREP "H * (0| )\.6241[4-5]....[0-9] * 1\.81854....[0-9] * \-2\.17772....[0-9]" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[7]=8
ERROR[7]="INITIAL STEP NOT CORRECT"

# Second iteration
CRIT1=`$GREP "Energy at this geometry is * \: * \-78\.30458[0-9]" $log | wc -l`
CRIT2=`$GREP "Norm of gradient * \: * (0| )\.00828[0-9]" $log | wc -l`
CRIT3=`$GREP "Norm of step * \: * (0| )\.3697[6-7][0-9]" $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[8]=3
ERROR[8]="SECOND ITERATION NOT CORRECT"

# Third iteration
CRIT1=`$GREP "Energy at this geometry is * \: * \-78\.30378[0-9]" $log | wc -l`
CRIT2=`$GREP "Norm of gradient * \: * (0| )\.0054[5-6][0-9]" $log | wc -l`
CRIT3=`$GREP "Norm of step * \: * (0| )\.3699[6-7][0-9]" $log | wc -l`
TEST[9]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[9]=3
ERROR[9]="THIRD ITERATION NOT CORRECT"

# Final geometry
CRIT1=`$GREP "C * (\-0|\-)\.01549....[0-9] * (\-0|\-)\.00012....[0-9] * 1\.46260....[0-9]" $log | wc -l`
CRIT2=`$GREP "C * (0| )\.01548....[0-9] * (0| )\.00012....[0-9] * \-1\.46261....[0-9]" $log | wc -l`
CRIT3=`$GREP "H * 1\.12056....[0-9] * 1\.53334....[0-9] * 2\.21441....[0-9]" $log | wc -l`
CRIT4=`$GREP "H * \-1\.92327....[0-9] * (0| )\.22373....[0-9] * 2\.1820[6-7]....[0-9]" $log | wc -l`
CRIT5=`$GREP "H * (0| )\.7327[3-4]....[0-9] * \-1\.75765....[0-9] * 2\.21000....[0-9]" $log | wc -l`
CRIT6=`$GREP "H * \-1\.87661....[0-9] * (0| )\.22423....[0-9] * \-2\.2222[8-9]....[0-9]" $log | wc -l`
CRIT7=`$GREP "H * (0| )\.77927....[0-9] * \-1\.7573[0-1]....[0-9] * \-2\.1942[8-9]....[0-9]" $log | wc -l`
CRIT8=`$GREP "H * 1\.1673[0-1]....[0-9] * 1\.53365....[0-9] * \-2\.18990....[0-9]" $log | wc -l`
TEST[10]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8`
CTRL[10]=32
ERROR[10]="FINAL GEOMETRY NOT CORRECT"

# Geometry converged
CRIT1=`$GREP "Geometry converged in * 9( |  )iterations\!" $log | wc -l`
CRIT2=`$GREP "Energy at final geometry is * \: * \-78\.30160[0-9] a\.u\." $log | wc -l`
CRIT3=`$GREP "Energy change during optimization \: * (\-0|\-)\.00079[0-9] a\.u\." $log | wc -l`
TEST[11]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[11]=3
ERROR[11]="GEOMETRY OPTIMIZATION NOT CONVERGED CORRECTLY"

PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10 11
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

' > geoopt_delintsad.check
#######################################################################
