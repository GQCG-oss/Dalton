
#######################################################################
#  TEST DESCRIPTION
#######################################################################
#
#*#
#*# rsp_soppapolar
#*# --------------
#*# Molecule:         CH4
#*# Wave Function:    MP2
#*# Test Purpose:     SOPPA polarizability
#*#
#
#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > rsp_soppapolar.mol <<%EOF%
INTGRL
Calculation of SOPPA polarizability
(test24)
    2
        6.    1    2    1    1
C1    0.000000           0.000000                   0.00000
F   8    4
 3623.8613      .0016339191 0.0 0.0 0.0
 544.04621      .012521701 0.0 0.0 0.0
 123.74338      .062113914 0.0 0.0 0.0
 34.763209      .21817729 0.0 0.0 0.0
 10.933333      .49800431 0.0 0.0 0.0
  3.5744765 0.0 1.0 0.0     0.0000000
  .57483245 0.0 0.0 1.0     0.0000000
  .17303640 0.0 0.0 0.0     1.0000000
F   4    2
  9.4432819      .37895451E-01 0.0
  2.0017986      .20818177 0.0
  .54629718      .50474166 0.0
  .15202684 0.0      1.0000000
        1.    4    1    1
 H1        1.1823709711            1.1823709714            1.1823709713
 H2       -1.1823709713            1.1823709714           -1.1823709711
 H3       -1.1823709712           -1.1823709710            1.1823709713
 H4        1.1823709711           -1.1823709710           -1.1823709711
F   4    2
    13.010701      .019682158 0.0
    1.9622572      .13796524 0.0
    .44453796      .47831935 0.0
    .12194962      0.0 1.0000000
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > rsp_soppapolar.dal <<%EOF%
**DALTON
.RUN RESPONSE
**WAVE FUNCTION
.HF
.MP2
**RESPONSE
.SOPPA
*LINEAR
.FREQUE
 1
 0.000 
.DIPLEN
*END OF DALTON
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/ksh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "C1 * 1 * 6 * 20 * 10 * \[8s4p\|4s2p\]" $log | wc -l`
CRIT2=`$GREP "H3 * 4 * 1 * 4 * 2 * \[4s\|2s\]" $log | wc -l`
CRIT3=`$GREP "total\: * 5 * 10 * 36 * 18" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[1]=3
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: 15" $log | wc -l`
CRIT2=`$GREP "1 * C1 * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT5=`$GREP "4 * H3 * 1 * x * 1\.1823709712" $log | wc -l`
CRIT6=`$GREP "5 * y * \-1\.1823709711" $log | wc -l`
CRIT7=`$GREP "6 * z * 1\.1823709712" $log | wc -l`
CRIT8=`$GREP "7 * H3 * 2 * x * 1\.1823709712" $log | wc -l`
CRIT9=`$GREP "8 * y * 1\.1823709711" $log | wc -l`
CRIT10=`$GREP "9 * z * \-1\.1823709712" $log | wc -l`
CRIT11=`$GREP "10 * H3 * 3 * x * \-1\.1823709712" $log | wc -l`
CRIT12=`$GREP "11 * y * \-1\.1823709711" $log | wc -l`
CRIT13=`$GREP "12 * z * \-1\.1823709712" $log | wc -l`
CRIT14=`$GREP "13 * H3 * 4 * x * \-1\.1823709712" $log | wc -l`
CRIT15=`$GREP "14 * y * 1\.1823709711" $log | wc -l`
CRIT16=`$GREP "15 * z * 1\.1823709712" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ \
		$CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16`
CTRL[2]=16
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 3 * 4 * 4 * 4" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 6 * 4 * 4 * 4" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Energies
CRIT1=`$GREP "Hartree\-Fock total energy \: * \-40\.17092055[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\= MP2 second order energy \: * \-40\.27892377[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "Final * HF energy\: * \-40\.1709205542[0-9][0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[4]=3
ERROR[4]="ENERGIES NOT CORRECT"

# SOPPA setup
CRIT1=`$GREP "Second Order Polarization Propagator Approximation \-\- SOPPA" $log | wc -l`
CRIT2=`$GREP "1 second order properties calculated with symmetry no\. * 2 and labels\:" $log | wc -l`
CRIT3=`$GREP "1 second order properties calculated with symmetry no\. * 3 and labels\:" $log | wc -l`
CRIT4=`$GREP "1 second order properties calculated with symmetry no\. * 4 and labels\:" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[5]=4
ERROR[5]="SOPPA SETUP NOT CORRECT"

# Polarizabilities
CRIT1=`$GREP "\@YDIPLEN * YDIPLEN * 1\.164546443783(D|E)\+01" $log | wc -l`
CRIT2=`$GREP "\@XDIPLEN * XDIPLEN * 1\.164546443807(D|E)\+01" $log | wc -l`
CRIT3=`$GREP "\@ZDIPLEN * ZDIPLEN * 1\.164546443879(D|E)\+01" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[6]=3
ERROR[6]="SOPPA POLARIZABILITIES NOT CORRECT"


PASSED=1
for i in 1 2 3 4 5 6
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

' > rsp_soppapolar.check
#######################################################################
