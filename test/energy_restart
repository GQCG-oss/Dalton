#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > energy_restart.info <<'%EOF%'
   energy_restart
   --------------
   Molecule:         H2O
   Wave Functions:   MCSCF (RAS) / cc-pVDZ
   Test Purpose:     Restart an MCSCF wave function optimization
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > energy_restart.mol <<'%EOF%'
BASIS
cc-pVDZ
Restarting an MCSCF wave function optimization

    2
        8.    1
O     0.0 -0.2249058930 0.0
        1.    2
H     1.45235 0.899623 0.0
H    -1.45235 0.899623 0.0
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > energy_restart__1.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
**WAVE FUNCTIONS
.HF
.MP2
.MCSCF
*SCF INPUT
.DOUBLY OCCUPIED
 3 1 1 0
*CONFIGURATION INPUT
.SYMMETRY
 1
.SPIN MUL
 1
.INACTIVE
 1 0 0 0
.ELECTRONS
 8
.CAS SPACE
 4 2 2 0
*OPTIMIZATION
.THRESH
2.0D-3
*END OF INPUT
%EOF%

cat > energy_restart__2.dal <<'%EOF%'
**DALTON INPUT
.RUN WAVE FUNCTION
**WAVE FUNCTIONS
.RESTART
.MCSCF
*CONFIGURATION INPUT
.SYMMETRY
 1
.SPIN MUL
 1
.INACTIVE
 1 0 0 0
.ELECTRONS
 8
.CAS SPACE
 4 2 2 0
*END OF INPUT
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo $CHECK_SHELL >energy_restart__1.check
cat >>energy_restart__1.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "Basis set used is \"cc\-pVDZ\" from the basis set library\." $log | wc -l`
CRIT2=`$GREP "O * 1 * 8\.0000 * 26 * 14 * \[9s4p1d\|3s2p1d\]" $log | wc -l`
CRIT3=`$GREP "H * 2 * 1\.0000 * 7 * 5 * \[4s1p\|2s1p\]" $log | wc -l`
CRIT4=`$GREP "total\: * 3 * 10\.0000 * 40 * 24" $log | wc -l`
CRIT5=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=5
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 9" $log | wc -l`
CRIT2=`$GREP "1 * O * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (\-0| \-)\.1258515023" $log | wc -l`
CRIT5=`$GREP "4 * H * 1 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * 1\.4523500000" $log | wc -l`
CRIT7=`$GREP "6 * z * (0| )\.9986773907" $log | wc -l`
CRIT8=`$GREP "7 * H * 2 * x * (0| )\.0000000000" $log | wc -l`
CRIT9=`$GREP "8 * y * \-1\.4523500000" $log | wc -l`
CRIT10=`$GREP "9 * z * (0| )\.9986773907" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[2]=10
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 3 * 2 * 3 * 1" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 11 * 4 * 7 * 2" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Energy
CRIT1=`$GREP "Final MCSCF energy\: * \-76\.147613....." $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=1
ERROR[4]="MCSCF ENERGY NOT CORRECT"

PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
echo $CHECK_SHELL >energy_restart__2.check
cat >>energy_restart__2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Basis set
CRIT1=`$GREP "Basis set used is \"cc\-pVDZ\" from the basis set library\." $log | wc -l`
CRIT2=`$GREP "O * 1 * 8\.0000 * 26 * 14 * \[9s4p1d\|3s2p1d\]" $log | wc -l`
CRIT3=`$GREP "H * 2 * 1\.0000 * 7 * 5 * \[4s1p\|2s1p\]" $log | wc -l`
CRIT4=`$GREP "total\: * 3 * 10\.0000 * 40 * 24" $log | wc -l`
CRIT5=`$GREP "Spherical harmonic basis used\." $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5`
CTRL[1]=5
ERROR[1]="BASIS SET NOT READ CORRECTLY"

# Geometry
CRIT1=`$GREP "Total number of coordinates\: * 9" $log | wc -l`
CRIT2=`$GREP "1 * O * x * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "3 * z * (\-0| \-)\.1258515023" $log | wc -l`
CRIT5=`$GREP "4 * H * 1 * x * (0| )\.0000000000" $log | wc -l`
CRIT6=`$GREP "5 * y * 1\.4523500000" $log | wc -l`
CRIT7=`$GREP "6 * z * (0| )\.9986773907" $log | wc -l`
CRIT8=`$GREP "7 * H * 2 * x * (0| )\.0000000000" $log | wc -l`
CRIT9=`$GREP "8 * y * \-1\.4523500000" $log | wc -l`
CRIT10=`$GREP "9 * z * (0| )\.9986773907" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[2]=10
ERROR[2]="GEOMETRY NOT READ CORRECTLY"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 3 * 2 * 3 * 1" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 11 * 4 * 7 * 2" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="SYMMETRY NOT CORRECT"

# Old MCSCF energy
# (hjaaj: the remaining digits in "Old MCSCF en" are beyond convergence
# and can be anything, that is, small changes in implementation can change them)
CRIT1=`$GREP "\(OPTST\) RESTART\, Old MCSCF energy\: * \-76\.14743" $log | wc -l`
TEST[4]=`expr	$CRIT1`
CTRL[4]=1
ERROR[4]="OLD MCSCF ENERGY (FROM RESTART) NOT CORRECT"

# Final energy
CRIT1=`$GREP "Final MCSCF energy\: * \-76\.1476141590.." $log | wc -l`
TEST[5]=`expr	$CRIT1`
CTRL[5]=1
ERROR[5]="FINAL MCSCF ENERGY NOT CORRECT"

# Occupancy
CRIT1=`$GREP "2\.000000000 * 1\.989080... * 1\.976436... * (0| )\.024209... * (0| )\.011251..." $log | wc -l`
CRIT2=`$GREP "1\.981380... * (0| )\.017798..." $log | wc -l`
CRIT3=`$GREP "1\.974627... * (0| )\.025215..." $log | wc -l`
CRIT4=`$GREP "No occupied orbitals" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[6]=6
ERROR[6]="FINAL OCCUPANCY NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

%EOF%
#######################################################################
