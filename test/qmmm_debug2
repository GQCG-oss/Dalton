#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > qmmm_debug2.info <<'%EOF%'
   qmmm_debug2
   -----------
   Molecule:         CH2O(QM)/2 waters(MM)
   Wave Function:    HF / cc-pVDZ  
   Test Purpose:     Test of energy through ABACUS incl. octupole MM contributions
%EOF%
#######################################################################
#  INTEGRAL INPUT
#######################################################################
cat > qmmm_debug2.mol <<'%EOF%'
ATOMBASIS
CH2O PLUS 2 WATERS
------------------------
AtomTypes=3 NoSymmetry Angstrom
        6.0   1    Basis=STO-3G
C           -1.588367    -.770650     .029109 
        8.0   1    Basis=STO-3G
O           -1.657083     .436069    -.009750 
        1.0   2    Basis=STO-3G
H           -.620668   -1.294822      .054251 
H           -2.508043   -1.382001     .040282
%EOF%
#######################################################################
#  QM/MM INTERACTION INPUT
#######################################################################
cat > qmmm_debug2.pot <<'%EOF%'
AU
6 2 2 1
1        1.8434958651        2.8482311204       -0.1560724807       -0.7390827623       -0.1307264223        0.0536972371        0.1276417760       -3.8915470039        0.3042601148        0.1736329543       -4.4593600616        0.4231693516       -4.1915829791        5.4760362505       -0.0866800183       -0.0721680526        5.5822886395       -0.1240156189        5.5133007097
1        0.0438416461        2.4568253762       -0.1664149517        0.3677809440        0.2067300506        0.0345154175       -0.0151419207       -0.0053247942        0.1000149409       -0.0128678147       -0.4962471913       -0.0094448450       -0.5220547903        3.4884652220        0.2984044533       -0.0712037833        1.7393065199       -0.3503076238        1.3605853997
1        2.1048355395        3.8558557669        1.3318373989        0.3713018183       -0.0129776857       -0.1154344939       -0.1761271065       -0.5125105131        0.0301785196        0.0495868218       -0.3480715156        0.2357268893       -0.1533604733        1.1854898700        0.0516528099        0.3136952094        2.3594108855        0.7460384264        2.9489928120
2        3.0872550190       -2.3305614354       -0.1488839625       -0.7392506008        0.1045091928        0.1199578441        0.1050086222       -4.3534010893       -0.2335724574        0.4256499376       -3.8052428657       -0.2036955780       -4.3845193626        5.5552848071        0.0859287441       -0.1208046651        5.4514069390        0.0745648410        5.5662469471
2        3.0249583076       -0.4887568752       -0.1643173557        0.3677014501       -0.0070170988       -0.2093580024       -0.0120115140       -0.5197135585       -0.0029598836       -0.0076502102        0.0139403385        0.0100737937       -0.5191766528        1.5094772028       -0.0367827484       -0.3663623981        3.5546245763        0.1005981894        1.5284304352
2        4.3536984454       -2.7613207262        1.0772667234        0.3715491507       -0.1493905839        0.0323104495       -0.1450960317       -0.2508359582       -0.0754184823        0.2464385390       -0.4973073090       -0.0734587271       -0.2662352700        2.6580864234       -0.2485367227        0.7466547613        1.2237370065       -0.3566527126        2.6080864339
%EOF%
#
#######################################################################
#  DALTON INPUT
#######################################################################
cat > qmmm_debug2.dal <<'%EOF%'
**DALTON
.RUN RESPONSE
*QMMM
.QMMM
.MMITER
.PRINT
 1 
**WAVE FUNCTIONS
.HF
**RESPONSE  
*QUADRATIC
.SHG
.DIPLEN
.FREQUE
 1
 0.040
.THCLR
1.0D-7
**END OF
%EOF%
#
#######################################################################
#  CHECK SCRIPT
#######################################################################
#
echo $CHECK_SHELL >qmmm_debug2.check
cat >>qmmm_debug2.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

#
# General and Energy Tests 
#
CRIT1=`$GREP "Anisotropic polarization" $log | wc -l`
CRIT2=`$GREP "QM/MM calculation converged" $log | wc -l`
CRIT3=`$GREP "Charge contribution: * ( \-|\-0)\.023650685" $log | wc -l`
CRIT4=`$GREP "Dipole contribution: * ( \-|\-0)\.0158848355" $log | wc -l`
CRIT5=`$GREP "Quadrupole contribution: * ( \-|\-0)\.0116817110" $log | wc -l`
CRIT6=`$GREP "Octuple contribution: * ( \-|\-0)\.0194945874" $log | wc -l`
CRIT7=`$GREP "Electronic Pol. energy: * ( |0)\.0866091125" $log | wc -l`
CRIT8=`$GREP "Nuclear pol. energy: * ( \-|\-0)\.110635041" $log | wc -l`
CRIT9=`$GREP "Multipole Pol. energy: * ( |0)\.0001481426" $log | wc -l`
CRIT10=`$GREP "Total QM/MM energy: * ( \-|\-0)\.094589605" $log | wc -l`
CRIT11=`$GREP "Final DFT energy: * \-112\.432515780" $log | wc -l`
TEST[1]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 `
CTRL[1]=11
ERROR[1]="GENERAL QMMM or QMMM ENERGY CONTRIBUTIONS NOT CORRECT"
#
# Test of QMMM freq. dep. hyper polarizability
#
 CRIT1=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;X\,X\) \=   *   ( \-|\-0)\.949101[0-9][0-9]" $log | wc -l`
 CRIT2=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;X\,X\) \=   *   5\.108504[0-9][0-9]" $log | wc -l`
 CRIT3=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;X\,X\) \=   *   ( \-|\-0)\.193507[0-9][0-9]" $log | wc -l`
 CRIT4=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Y\,X\) \=   *   5\.195417[0-9][0-9]" $log | wc -l`
 CRIT5=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Y\,X\) \=   *   ( \-|\-0)\.051921[0-9][0-9]" $log | wc -l`
 CRIT6=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Y\,X\) \=   *   ( |0)\.041686[0-9][0-9]" $log | wc -l`
 CRIT7=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Z\,X\) \=   *   ( \-|\-0)\.198470[0-9][0-9]" $log | wc -l`
 CRIT8=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Z\,X\) \=   *   ( |0)\.044053[0-9][0-9]" $log | wc -l`
 CRIT9=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Z\,X\) \=   *   ( \-|\-0)\.163324[0-9][0-9]" $log | wc -l`
CRIT10=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;X\,Y\) \= beta\(X\,Y\,X\)" $log | wc -l`
CRIT11=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;X\,Y\) \= beta\(Y\,Y\,X\)" $log | wc -l`
CRIT12=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;X\,Y\) \= beta\(Z\,Y\,X\)" $log | wc -l`
CRIT13=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Y\,Y\) \=    *  ( \-|\-0)\.047815[0-9][0-9]" $log | wc -l`
CRIT14=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Y\,Y\) \=    *  6\.354472[0-9][0-9]" $log | wc -l`
CRIT15=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Y\,Y\) \=    *  ( \-|\-0)\.146995[0-9][0-9]" $log | wc -l`
CRIT16=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Z\,Y\) \=    *  ( |0)\.042474[0-9][0-9]" $log | wc -l`
CRIT17=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Z\,Y\) \=    *  ( \-|\-0)\.151284[0-9][0-9]" $log | wc -l`
CRIT18=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Z\,Y\) \=    *  1\.378156[0-9][0-9]" $log | wc -l`
CRIT19=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;X\,Z\) \= beta\(X\,Z\,X\)" $log | wc -l`
CRIT20=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;X\,Z\) \= beta\(Y\,Z\,X\)" $log | wc -l`
CRIT21=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;X\,Z\) \= beta\(Z\,Z\,X\)" $log | wc -l`
CRIT22=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Y\,Z\) \= beta\(X\,Z\,Y\)" $log | wc -l`
CRIT23=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Y\,Z\) \= beta\(Y\,Z\,Y\)" $log | wc -l`
CRIT24=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Y\,Z\) \= beta\(Z\,Z\,Y\)" $log | wc -l`
CRIT25=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(X\;Z\,Z\) \=     * ( \-|\-0)\.131793[0-9][0-9]" $log | wc -l`
CRIT26=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Y\;Z\,Z\) \=     *  1\.260908[0-9][0-9]" $log | wc -l`
CRIT27=`$GREP "\@ B-freq \= ( |0)\.040000 * C-freq \= ( |0)\.040000  *   beta\(Z\;Z\,Z\) \=     * ( \-|\-0)\.123258[0-9][0-9]" $log | wc -l`
TEST[2]=`expr $CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ $CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10 \+ $CRIT11 \+ $CRIT12 \+ $CRIT13 \+ $CRIT14 \+ $CRIT15 \+ $CRIT16 \+ $CRIT17 \+ $CRIT18 \+ $CRIT19 \+ $CRIT20 \+ $CRIT21 \+ $CRIT22 \+ $CRIT23 \+ $CRIT24 \+ $CRIT25 \+ $CRIT26 \+ $CRIT27 `
CTRL[2]=27
ERROR[2]="QMMM FIRST HYPERPOLARIZABILITY NOT CORRECT"



PASSED=1 
for i in 2
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo "${ERROR[i]} ( test = ${TEST[i]}; control = ${CTRL[i]} ); "
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi                
%EOF%
chmod +x qmmm_debug2.check
#######################################################################
