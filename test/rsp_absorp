#!/bin/sh
#
# This is the script for generating files for a specific Dalton test job.
#
# For the .check file ksh or bash is preferred, otherwise use sh
# (and hope it is not the old Bourne shell, which will not work)
#
if [ -x /bin/ksh ]; then
   CHECK_SHELL='#!/bin/ksh'
elif [ -x /bin/bash ]; then
   CHECK_SHELL='#!/bin/bash'
else
   CHECK_SHELL='#!/bin/sh'
fi


#######################################################################
#  TEST DESCRIPTION                                                   #
#######################################################################
cat > rsp_absorp.info <<'%EOF%'
   rsp_absorp
   -------
   Molecule:         LiH
   Wave Function:    HF
   Test Purpose:     Response calculations (first and second order)
                     with damping (absorption)
%EOF%

#######################################################################
#  MOLECULE INPUT                                                     #
#######################################################################
cat > rsp_absorp.mol <<'%EOF%'
BASIS
Sadlej-pVTZ
LiH (Exp. geometry from Herzberg R=1.5949 Å)
--------------------------------------------
Atomtypes=2 Generators=2 X Y Angstrom
Charge=1.0 Atoms=1
H    0.000000   0.000000   1.196175
Charge=3.0 Atoms=1
Li    0.000000   0.000000   -0.398725
FINISH
%EOF%

#######################################################################
#  DALTON INPUT                                                       #
#######################################################################
cat > rsp_absorp.dal <<'%EOF%'
**DALTON INPUT
.RUN RESPONSE
.DIRECT
**INTEGRALS
.DIPLEN
**WAVE FUNCTION
.HF
**RESPONSE
.PROPAVE
ZDIPLEN
*ABSORPTION
.SHG
.DAMPING
 0.005
.BFREQ
 3
 0.0 0.043 0.0656
.CFREQ
 2
 0.0 0.0656
.THCLR
 1.0D-6
*END OF
%EOF%

#######################################################################
#  CHECK SCRIPT                                                       #
#######################################################################
echo $CHECK_SHELL > rsp_absorp.check
cat >> rsp_absorp.check <<'%EOF%'
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# ?
CRIT1=`$GREP "Final HF energy\: * \-7\.985955423" $log | wc -l`
TEST[1]=`expr	$CRIT1`
CTRL[1]=1
ERROR[1]="HF energy is NOT CORRECT"

# ?
CRIT1=`$GREP "ZDIPLEN * total * \: * 2\.37108" $log | wc -l`
TEST[2]=`expr	$CRIT1`
CTRL[2]=1
ERROR[2]=" Dipole moment is NOT CORRECT"

# ?
CRIT1=`$GREP "1 * XDIPLEN * XDIPLEN * (0| )\.000000 * 25\.232.[0-9][0-9] * (0| )\.000000" $log | wc -l`
CRIT2=`$GREP "2 * YDIPLEN * YDIPLEN * (0| )\.000000 * 25\.232.[0-9][0-9] * (0| |\-0|\-)\.000000" $log | wc -l`
CRIT3=`$GREP "3 * ZDIPLEN * ZDIPLEN * (0| )\.000000 * 21\.790.[0-9][0-9] * (0| )\.000000" $log | wc -l`
CRIT4=`$GREP "4 * XDIPLEN * XDIPLEN * (0| )\.065600 * 27\.990.[0-9][0-9] * (0| )\.476.[0-9][0-9]" $log | wc -l`
CRIT5=`$GREP "5 * YDIPLEN * YDIPLEN * (0| )\.065600 * 27\.990.[0-9][0-9] * (0| )\.476.[0-9][0-9]" $log | wc -l`
CRIT6=`$GREP "6 * ZDIPLEN * ZDIPLEN * (0| )\.065600 * 24\.597.[0-9][0-9] * (0| )\.517.[0-9][0-9]" $log | wc -l`
CRIT7=`$GREP "7 * XDIPLEN * XDIPLEN * (0| )\.131200 * 43\.521.[0-9][0-9] * 2\.690.[0-9][0-9]" $log | wc -l`
CRIT8=`$GREP "8 * YDIPLEN * YDIPLEN * (0| )\.131200 * 43\.521.[0-9][0-9] * 2\.690.[0-9][0-9]" $log | wc -l`
CRIT9=`$GREP "9 * ZDIPLEN * ZDIPLEN * (0| )\.131200 * 54\.517.[0-9][0-9] * 10\.858.[0-9][0-9]" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9`
CTRL[3]=9
ERROR[3]="Polarizability is NOT CORRECT"

# ?
CRIT1=`$GREP "1 * ZDIPLEN * ZDIPLEN * ZDIPLEN * (0| )\.000000 * (0| )\.000000 * (0| )\.000000 * 307\.4.[0-9][0-9][0-9][0-9] * (0| )\.000000" $log | wc -l`
CRIT2=`$GREP "2 * ZDIPLEN * XDIPLEN * XDIPLEN * (0| )\.000000 * (0| )\.000000 * (0| )\.000000 * 194\.7.[0-9][0-9][0-9][0-9] * (0| )\.000000" $log | wc -l`
CRIT3=`$GREP "3 * ZDIPLEN * YDIPLEN * YDIPLEN * (0| )\.000000 * (0| )\.000000 * (0| )\.000000 * 194\.7.[0-9][0-9][0-9][0-9] * (0| )\.000000" $log | wc -l`
CRIT4=`$GREP "4 * XDIPLEN * ZDIPLEN * XDIPLEN * (0| )\.000000 * (0| )\.000000 * (0| )\.000000 * 194\.7.[0-9][0-9][0-9][0-9] * (0| |\-0|\-)\.000000" $log | wc -l`
CRIT5=`$GREP "5 * YDIPLEN * ZDIPLEN * YDIPLEN * (0| )\.000000 * (0| )\.000000 * (0| )\.000000 * 194\.7.[0-9][0-9][0-9][0-9] * (0| |\-0|\-)\.000000" $log | wc -l`
CRIT6=`$GREP "6 * ZDIPLEN * ZDIPLEN * ZDIPLEN * (\-0| \-)\.131200 * (0| )\.065600 * (0| )\.065600 * 2748\.5[0-9][0-9][0-9][0-9][0-9] * 1030\.8[0-9][0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT7=`$GREP "7 * ZDIPLEN * XDIPLEN * XDIPLEN * (\-0| \-)\.131200 * (0| )\.065600 * (0| )\.065600 * 1074\.3[0-9][0-9][0-9][0-9][0-9] * 354\.5.[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT8=`$GREP "8 * ZDIPLEN * YDIPLEN * YDIPLEN * (\-0| \-)\.131200 * (0| )\.065600 * (0| )\.065600 * 1074\.3[0-9][0-9][0-9][0-9][0-9] * 354\.5.[0-9][0-9][0-9][0-9]" $log | wc -l`
CRIT9=`$GREP "9 * XDIPLEN * ZDIPLEN * XDIPLEN * (\-0| \-)\.131200 * (0| )\.065600 * (0| )\.065600 * 617\.7[0-9][0-9][0-9][0-9][0-9] * 86\.49.[0-9][0-9][0-9]" $log | wc -l`
CRIT10=`$GREP "10 * YDIPLEN * ZDIPLEN * YDIPLEN * (\-0| \-)\.131200 * (0| )\.065600 * (0| )\.065600 * 617\.7[0-9][0-9][0-9][0-9][0-9] * 86\.49.[0-9][0-9][0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[4]=10
ERROR[4]="Hyperpolarizability is NOT CORRECT"

PASSED=1
for i in 1 2 3 4
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
      echo ${ERROR[i]}
      PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
   echo TEST ENDED PROPERLY
   exit 0
else
   echo THERE IS A PROBLEM
   exit 1
fi

%EOF%
