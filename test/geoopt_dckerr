
#######################################################################
#  TEST DESCRIPTION
#######################################################################
cat > geoopt_dckerr.info <<%EOF%
   geoopt_dckerr
   -------------
   Molecule:         O3
   Wave Function:    MCSCF (RAS) / aug-cc-pVDZ
   Test Purpose:     Geometry optimization using .OPTIMIZE module
                     (1st order) with a calculation of DC-Kerr effect
                     at the optimized geometry
%EOF%

#######################################################################
#  MOLECULE INPUT
#######################################################################
cat > geoopt_dckerr.mol <<%EOF%
BASIS
aug-cc-pVDZ
Geometry optimization, calculation of DC-Kerr effect
at the optimized geometry
    1    2  Y  Z
        8.    2
OS         .0000000000        0.0000000000         .0000000000             *
OP        1.2634502500        2.0449019100         .0000000000             *
%EOF%

#######################################################################
#  DALTON INPUT
#######################################################################
cat > geoopt_dckerr.dal <<%EOF%
**GENERAL
.OPTIMIZE
**WAVE FUNCTIONS
.HF
.MP2
.MCSCF
.NSYM
 4
*HF INPUT
.HF OCC
 6 4 1 1
*CONFIGURATION INPUT
.SYMMETRY
 1
.SPIN MUL
 1
.INACTIVE
 4 2 0 0
.ELECTRONS
 12
.RAS1 SPACE
 2 2 1 0
.RAS1 HOLES
 0 2
.RAS2 SPACE
 0 0 1 1
.RAS3 SPACE
 1 1 0 0
.RAS3 ELECTRONS
 0 2
**RESPONSE
*CUBIC
.DC-KER
.FREQUE
 2
 0.0 0.0592
.APROP
ZDIPLEN
.BPROP
ZDIPLEN
.CPROP
ZDIPLEN
.DPROP
ZDIPLEN
*END OF
%EOF%
#######################################################################



#######################################################################

#######################################################################
#  CHECK SCRIPT
#######################################################################
echo '#!/bin/ksh
log=$1

if [ `uname` = Linux ]; then
   GREP="egrep -a"
else
   GREP="egrep"
fi

# Molecular geometry
CRIT1=`$GREP "1 * OS * x * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "2 * y * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "3 * z * (0| )\.0000000000" $log | wc -l`
CRIT4=`$GREP "4 * OP * 1 * x * 1\.2634502500" $log | wc -l`
CRIT5=`$GREP "5 * y * 2\.0449019100" $log | wc -l`
CRIT6=`$GREP "6 * z * (0| )\.0000000000" $log | wc -l`
CRIT7=`$GREP "7 * OP * 2 * x * 1\.2634502500" $log | wc -l`
CRIT8=`$GREP "8 * y * \-2\.0449019100" $log | wc -l`
CRIT9=`$GREP "9 * z * (0| )\.0000000000" $log | wc -l`
CRIT10=`$GREP "Total number of coordinates\: * 9" $log | wc -l`
TEST[1]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4 \+ $CRIT5 \+ $CRIT6 \+ \
		$CRIT7 \+ $CRIT8 \+ $CRIT9 \+ $CRIT10`
CTRL[1]=10
ERROR[1]="GEOMETRY NOT CORRECT"

# Symmetry
CRIT1=`$GREP "Number of coordinates in each symmetry\: * 3 * 3 * 2 * 1" $log | wc -l`
CRIT2=`$GREP "Number of orbitals in each symmetry\: * 27 * 21 * 12 * 9" $log | wc -l`
TEST[2]=`expr	$CRIT1 \+ $CRIT2`
CTRL[2]=2
ERROR[2]="SYMMETRY NOT CORRECT"

# MCSCF energy
CRIT1=`$GREP "\= MP2 second order energy \: * \-224\.963913846[0-9]" $log | wc -l`
CRIT2=`$GREP "Final MCSCF energy\: * \-224\.51074851622[0-9]" $log | wc -l`
TEST[3]=`expr	$CRIT1 \+ $CRIT2`
CTRL[3]=2
ERROR[3]="INITIAL MCSCF ENERGY NOT CORRECT"

# Occupancies
CRIT1=`$GREP "2\.000000000 * 2\.000000000 * 2\.000000000 * 2\.000000000 * 1\.9927778[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "1\.9633088[0-9][0-9] * (0| )\.0515063[0-9][0-9]" $log | wc -l`
CRIT3=`$GREP "2\.000000000 * 2\.000000000 * 1\.9942960[0-9][0-9] * 1\.9557062[0-9][0-9] * (0| )\.0422922[0-9][0-9]" $log | wc -l`
CRIT4=`$GREP "1\.9718949[0-9][0-9] * (0| )\.2509860[0-9][0-9]" $log | wc -l`
TEST[4]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3 \+ $CRIT4`
CTRL[4]=4
ERROR[4]="INITIAL OCCUPANCY NOT CORRECT"

# Energy
CRIT1=`$GREP "Total energy * \-224\.510748516[0-9] au \(Hartrees\)" $log | wc -l`
CRIT2=`$GREP "\-6109\.2480553[0-9] eV" $log | wc -l`
CRIT3=`$GREP "\-589452\.886[0-9] kJ\/mol" $log | wc -l`
TEST[5]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[5]=3
ERROR[5]="INITIAL ENERGY NOT CORRECT"

# Gradient
CRIT1=`$GREP "OS * x * (0| )\.001302054[0-9]" $log | wc -l`
CRIT2=`$GREP "OP * x * (\-0|\-)\.001302054[0-9]" $log | wc -l`
CRIT3=`$GREP "OP * y * (\-0|\-)\.001888657[0-9]" $log | wc -l`
TEST[6]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[6]=3
ERROR[6]="INITIAL GRADIENT NOT CORRECT"

# Dipole moment
CRIT1=`$GREP "(0| )\.204760 au * (0| )\.520453 Debye" $log | wc -l`
CRIT2=`$GREP "x * (\-0|\-)\.2047600[0-9] * (\-0|\-)\.5204530[0-9]" $log | wc -l`
TEST[7]=`expr	$CRIT1 \+ $CRIT2`
CTRL[7]=2
ERROR[7]="INITIAL DIPOLE MOMENT NOT CORRECT"

# Step
CRIT1=`$GREP "OS * (\-0|\-)\.001397994[0-9] * (0| )\.0000000000 * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "OP * 1 * 1\.264149247[0-9] * 2\.046340373[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "OP * 2 * 1\.264149247[0-9] * \-2\.046340373[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[8]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[8]=3
ERROR[8]="FIRST GEOMETRY STEP NOT CORRECT"

# Second geometry iteration
CRIT1=`$GREP "Norm of gradient * \: * (0| )\.001004" $log | wc -l`
CRIT2=`$GREP "Norm of step * \: * (0| )\.002083" $log | wc -l`
TEST[9]=`expr	$CRIT1 \+ $CRIT2`
CTRL[9]=2
ERROR[9]="SECOND ITERATION NOT CORRECT"

# Third geometry iteration
CRIT1=`$GREP "Norm of gradient * \: * (0| )\.000023" $log | wc -l`
CRIT2=`$GREP "Norm of step * \: * (0| )\.000059" $log | wc -l`
TEST[10]=`expr	$CRIT1 \+ $CRIT2`
CTRL[10]=2
ERROR[10]="THIRD ITERATION NOT CORRECT"

# Final geometry
CRIT1=`$GREP "OS * (\-0|\-)\.001428631[0-9] * (0| )\.0000000000 * (0| )\.0000000000" $log | wc -l`
CRIT2=`$GREP "OP * 1 * 1\.264164565[0-9] * 2\.046319906[0-9] * (0| )\.0000000000" $log | wc -l`
CRIT3=`$GREP "OP * 2 * 1\.264164565[0-9] * \-2\.046319906[0-9] * (0| )\.0000000000" $log | wc -l`
TEST[11]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[11]=12
ERROR[11]="FINAL GEOMETRY NOT CORRECT"

# Gamma values
CRIT1=`$GREP "\@ gamma\(Z\;Z\,Z\,Z\) * 207\.46[0-9][0-9]" $log | wc -l`
CRIT2=`$GREP "\@ gamma\(Z\;Z\,Z\,Z\) * 214\.81[0-9][0-9]" $log | wc -l`
TEST[12]=`expr	$CRIT1 \+ $CRIT2`
CTRL[12]=2
ERROR[12]="GAMMA VALUES NOT CORRECT"

# Geometry optimization
CRIT1=`$GREP "Geometry converged in * 4( |  )iterations\!" $log | wc -l`
CRIT2=`$GREP "Energy at final geometry is * \: * \-224\.510751 a\.u\." $log | wc -l`
CRIT3=`$GREP "Energy change during optimization \: * (\-0|\-)\.000003 a\.u\." $log | wc -l`
TEST[12]=`expr	$CRIT1 \+ $CRIT2 \+ $CRIT3`
CTRL[12]=3
ERROR[12]="GEOMETRY OPTIMIZATION NOT CORRECT"

PASSED=1
for i in 1 2 3 4 5 6 7 8 9 10 11 12
do
   if [ ${TEST[i]} -ne ${CTRL[i]} ]; then
     echo ${ERROR[i]}
     PASSED=0
   fi
done

if [ $PASSED -eq 1 ]
then
  echo TEST ENDED PROPERLY
  exit 0
else
  echo THERE IS A PROBLEM
  exit 1
fi

' > geoopt_dckerr.check
#######################################################################
