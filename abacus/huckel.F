C
C...   Copyright (c) 2005 by the authors of Dalton (see below).
C...   All Rights Reserved.
C...
C...   The source code in this file is part of
C...   "Dalton, a molecular electronic structure program, Release 2.0
C...   (2005), written by C. Angeli, K. L. Bak,  V. Bakken, 
C...   O. Christiansen, R. Cimiraglia, S. Coriani, P. Dahle,
C...   E. K. Dalskov, T. Enevoldsen, B. Fernandez, C. Haettig,
C...   K. Hald, A. Halkier, H. Heiberg, T. Helgaker, H. Hettema, 
C...   H. J. Aa. Jensen, D. Jonsson, P. Joergensen, S. Kirpekar, 
C...   W. Klopper, R.Kobayashi, H. Koch, O. B. Lutnaes, K. V. Mikkelsen, 
C...   P. Norman, J.Olsen, M. J. Packer, T. B. Pedersen, Z. Rinkevicius,
C...   E. Rudberg, T. A. Ruden, K. Ruud, P. Salek, A. Sanchez de Meras,
C...   T. Saue, S. P. A. Sauer, B. Schimmelpfennig, K. O. Sylvester-Hvid, 
C...   P. R. Taylor, O. Vahtras, D. J. Wilson, H. Agren.
C...   This source code is provided under a written licence and may be
C...   used, copied, transmitted, or stored only in accord with that
C...   written licence.
C...
C...   In particular, no part of the source code or compiled modules may
C...   be distributed outside the research group of the licence holder.
C...   This means also that persons (e.g. post-docs) leaving the research
C...   group of the licence holder may not take any part of Dalton,
C...   including modified files, with him/her, unless that person has
C...   obtained his/her own licence.
C...
C...   For questions concerning this copyright write to:
C...      dalton-admin@kjemi.uio.no
C...
C...   For information on how to get a licence see:
C...      http://www.kjemi.uio.no/software/dalton/dalton.html
C
#include <single.h>
C
C   /* Deck hucdrv */
      SUBROUTINE HUCDRV(WORK,LWORK,CMO)
C
C     K.Ruud, July-96
C
#include <implicit.h>
#include <maxorb.h>
C
      DIMENSION WORK(LWORK), CMO(NCMOT)
#include <infdim.h>
#include <inforb.h>
#include <huckel.h>
C
      CALL QENTER('HUCDRV')
      NROW = NBAST + NHUCBA
      NELMNT = NROW*(NROW + 1)/2
      NHUCMX = 0
      DO 10 ISYM = 1, NSYM
         NHUCMX = MAX(NHUCMX,NHUCAO(ISYM))
 10   CONTINUE
      NNHUCMX = NHUCMX*(NHUCMX + 1)/2
      N2HUCMX = NHUCMX*NHUCMX
      N2HUCBA = NHUCBA*NHUCBA
      NTRDIM = MAX(NHUCMX*NBASMA,NBASMA*(NBASMA + 1)/2)
C
      KFREE = 1
      LFREE = LWORK
      CALL MEMGET('REAL',KTOTOV,NELMNT,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KHUCMT,NNHUCMX,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KHUCOV,N2HUCBA,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KEIGVC,N2HUCMX,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KTRANM,NTRDIM,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KEIGVL,NHUCBA,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KEIGVS,NHUCBA,WORK,KFREE,LFREE)
      CALL MEMGET('REAL',KOVERL,NBASMA*NBASMA,WORK,KFREE,LFREE)
      CALL HUCDR1(WORK(KFREE),LFREE,WORK(KTOTOV),NELMNT,NROW,
     &            WORK(KHUCMT),WORK(KHUCOV),NHUCMX,WORK(KEIGVC),
     &            WORK(KTRANM),WORK(KEIGVL),WORK(KEIGVS),WORK(KOVERL),
     &            CMO)
      CALL MEMREL('HUCDRV',WORK,1,1,KFREE,LFREE)
      CALL QEXIT('HUCDRV')
      RETURN
      END
C   /* Deck hucdr1 */
      SUBROUTINE HUCDR1(WORK,LWORK,TOTOVL,NELMNT,NROW,
     &                  HUCMAT,HUCOVL,NHUCMX,
     &                  EIGVEC,TRANMT,EIGVAL,EIGVLS,OVERLP,CMO)
C
C     Driver routine for solving the extended Huckel problem, and 
C     projecting the eigenvectors onto the complete basis set
C     
C     K.Ruud, July-96
C
#include <implicit.h>
#include <dummy.h>
#include <maxorb.h>
      LOGICAL ANTSYM, FNDLB2
      CHARACTER*8 RTNLBL(2)
      DIMENSION WORK(LWORK)
      DIMENSION TOTOVL(NELMNT), HUCMAT(*), HUCOVL(*), TRANMT(*),
     &          EIGVEC(NHUCMX*NHUCMX), CMO(NCMOT),
     &          EIGVAL(NHUCBA), EIGVLS(NHUCBA), OVERLP(NBASMA*NBASMA)
C
#include <priunit.h>
#include <inftap.h>
#include <infdim.h>
#include <inforb.h>
#include <infpri.h>
#include <scbrhf.h>
#include <huckel.h>
C
      IF (P6FLAG(6) .OR. IPRI6.GE.0 .OR. IPRRHF.GE.0 .OR. EWMO)
     &   WRITE (LUPRI,'(/A/2(/5X,A,L10)/5X,A,8I5)')
     &      ' *** Output from Huckel module :',
     &      'Using EWMO model: ',EWMO,
     &      'Using EHT  model: ',.NOT.EWMO,
     &      'Number of Huckel orbitals each symmetry:',
     &      (NHUCAO(I),I=1,NSYM)
      IF (EWMO) THEN
         WRITE (LUPRI,'(/A/A/A)')
     &   ' EWMO - Energy Weighted Maximum Overlap - is a Huckel type'//
     &   ' method,',
     &   ' which normally is better than Extended Huckel Theory.',
     &   ' Reference: Linderberg and Ohrm, Propagators in Quantum'//
     &   ' Chemistry (Wiley, 1973)'
      END IF
C
      NNHUCBA = NHUCBA * (NHUCBA + 1) / 2
C
C     Read AO overlap matrix from AOPROPER file
C
      CALL GPOPEN(LUPROP,'AOPROPER','OLD',' ','UNFORMATTED',IDUMMY,
     &            .FALSE.)
      IF (EWMO) THEN
C
C     ... read EWMO overlap matrix:
C
         REWIND LUPROP
         IF (FNDLB2('HUCKOVLP',RTNLBL,LUPROP)) THEN
            CALL READT(LUPROP,NELMNT,TOTOVL)
            IF (P6FLAG(6)) THEN
               CALL HEADER(
     &         'HUCDR1: HUCKOVLP matrix read from AOPROPER',-1)
               CALL OUTPAK(TOTOVL,NROW,1,LUPRI)
            END IF
         ELSE
            WRITE (LUPRI,'(//3A)') ' >>> HUCDR1 error: "HUCKOVLP"'//
     *         ' matrix not found on AOPROPER.'
            CALL QUIT('HUCDR1 error: HUCKOVLP not found on AOPROPER')
         END IF
C
C     ... extract EWMO overlap matrix from TOTOVL:
C
         CALL DZERO(HUCOVL,NNHUCBA)
         ISTRT  = 0
         NHUCT  = 0
         JPOS   = 1
C
         DO ISYM = 1, NSYM
            NHAOSY = NHUCAO(ISYM)
         IF (NHAOSY .GT. 0) THEN
            NBASI  = NBAS(ISYM)
            IBASTO = IBAS(ISYM) + NHUCT
            IHUCI  = IBASTO + NBASI
            NORBI  = NORB(ISYM)
            IF (NORBI .EQ. 0) THEN
               WRITE (LUPRI,'(/A,I3/I5,A)')
     &            'HUCDRV error in symmetry',ISYM,
     &            NHAOSY,' Huckel orbitals, but no orbitals!'
               CALL QUIT('HUCDRV error, NHAOSY.ne.0 .and. NORBI.eq.0')
            END IF
            ISTRT  = (IHUCI*(IHUCI + 1))/2
C
C           Copy the Huckel overlap matrix into a lower triangular matrix,
C           where the elements are sorted in consecutive order
C
            IPOS = JPOS
            DO I = 1, NHAOSY
               CALL DCOPY(I,TOTOVL(ISTRT + IHUCI + 1),1,HUCOVL(IPOS),1)
               IPOS = IPOS + I
               ISTRT = ISTRT + (IHUCI + I)
            END DO   ! I = 1,NHAOSY
            IF (P6FLAG(6) .OR. IPRRHF.GE.6) THEN
               WRITE (LUPRI,'(/A,I3,/A)')
     &            ' Extracted EWMO overlap matrix of symmetry :',ISYM,
     &            ' ------------------------------------------------'
               CALL OUTPAK(HUCOVL(JPOS),NHAOSY,1,LUPRI)
            END IF
            JPOS = IPOS
            NHUCT = NHUCT + NHAOSY
         END IF
         END DO   ! ISYM = 1,NSYM
      END IF
C
C     Read Huckel matrix, both for EWMO and EHT
C
      REWIND LUPROP
      IF (FNDLB2('HUCKEL  ',RTNLBL,LUPROP)) THEN
         CALL READT(LUPROP,NELMNT,TOTOVL)
         IF (P6FLAG(6)) THEN
            CALL HEADER(
     &      'HUCDR1: Huckel matrix read from AOPROPER',-1)
            CALL OUTPAK(TOTOVL,NROW,1,LUPRI)
         END IF
      ELSE
         WRITE (LUPRI,'(//3A)') ' >>> HUCDR1 error: "HUCKEL  "'//
     *      ' matrix not found on AOPROPER.'
         CALL QUIT('HUCDR1 error: HUCKEL overlap not found on AOPROPER')
      END IF
      CALL GPCLOSE(LUPROP,'KEEP')
C
C     Save initial CMO for HUCORT
C
      KCMO1 = 1
      KWRK  = KCMO1 + NCMOT
      LWRK  = LWORK - (KWRK-1)
      CALL DCOPY(NCMOT,CMO,1,WORK(KCMO1),1)
C
C
C     Extract Huckel matrix, do one symmetry at a time
C
      ISTRT  = 0
      NHUCT  = 0
      JPOS   = 1
C
      DO 100 ISYM = 1, NSYM
         NHAOSY = NHUCAO(ISYM)
         IF (NHAOSY .EQ. 0) GO TO 100
         NBASI  = NBAS(ISYM)
         IBASTO = IBAS(ISYM) + NHUCT
         IHUCI  = IBASTO + NBASI
         NORBI  = NORB(ISYM)
         IF (NORBI .EQ. 0) THEN
            WRITE (LUPRI,'(/A,I3/I5,A)')
     &         'HUCDRV error in symmetry',ISYM,
     &         NHAOSY,' Huckel orbitals, but no orbitals!'
            CALL QUIT('HUCDRV error, NHAOSY.ne.0 .and. NORBI.eq.0')
         END IF
         ISTRT  = (IHUCI*(IHUCI + 1))/2
         ICSYM  = ICMO(ISYM) + 1
C
C     Extract ordinary overlap matrix
C
         IOVLST = (IBASTO*(IBASTO + 3))/2 + 1
         IPOS = 1
         DO 115 I = 1, NBASI
            CALL DCOPY(I,TOTOVL(IOVLST),1,TRANMT(IPOS),1)
            IPOS = IPOS + I
            IOVLST = IOVLST + (IBASTO + I)
 115     CONTINUE
         CALL DSPTSI(NBASI,TRANMT,OVERLP)
C
C     Copy the Huckel part into a lower triangular matrix, where the elements
C     are sorted in consecutive order
C
C     Also extract the transformation matrix from HUCKEL basis to full basis
C
         IPOS = 1
         DO 110 I = 1, NHAOSY
            CALL DCOPY(I,TOTOVL(ISTRT + IHUCI + 1),1,
     &                 HUCMAT(IPOS),1)
            CALL DCOPY(NBASI,TOTOVL(ISTRT + IBASTO + 1),1,
     &                 TRANMT((I - 1)*NBASI + 1),1)
            IPOS = IPOS + I
            ISTRT = ISTRT + (IHUCI + I)
 110     CONTINUE 
         IF (P6FLAG(6) .OR. IPRRHF.GE.8) THEN
            WRITE (LUPRI,'(/A,I3,/A)')
     &           ' Extracted Huckel matrix of symmetry :',ISYM,
     &           ' ------------------------------------------------'
            CALL OUTPAK(HUCMAT,NHAOSY,1,LUPRI)
         END IF
         IF (P6FLAG(6) .OR. IPRRHF.GE.15) THEN
            WRITE (LUPRI,'(/A,I3,/A)')
     &           ' Extracted transformation matrix of symmetry :',ISYM,
     &           ' ------------------------------------------------'
            CALL OUTPUT(TRANMT,1,NBASI,1,NHAOSY,NBASI,NHAOSY,1,LUPRI)
         END IF
C
C        EWMO or EHT ?
C
        IF (EWMO) THEN
C        ... call EISPACK routine RSG
         N2HAOSY = NHAOSY*NHAOSY
         IPOS = 1 + (NHUCT*(NHUCT + 1))/2 + NHUCT
         KHMAT = KWRK
         KSMAT = KHMAT+ N2HAOSY
         KFV1  = KSMAT+ N2HAOSY
         KFV2  = KFV1 + NHAOSY
         KLAST = KFV2 + NHAOSY
         IF (KLAST .GT. LWORK) CALL STOPIT('HUCDRV','RSG',KLAST,LWORK)
         CALL DSPTSI(NHAOSY,HUCMAT,WORK(KHMAT))
         CALL DSPTSI(NHAOSY,HUCOVL(JPOS),WORK(KSMAT))
         IF (P6FLAG(6) .OR. IPRRHF.GE.8) THEN
            WRITE (LUPRI,*) 'EWMO AO Hamiltonian matrix W'//
     &                      ' corresponding to separate atoms'
            CALL OUTPUT(WORK(KHMAT),1,NHAOSY,1,NHAOSY,
     &                  NHAOSY,NHAOSY,1,LUPRI)
         END IF
         CALL DGEMM('N','N',NHAOSY,NHAOSY,NHAOSY,1.D0,
     &              WORK(KHMAT),NHAOSY, WORK(KSMAT),NHAOSY,0.D0,
     &              EIGVEC,NHAOSY)
         CALL DGEMM('N','N',NHAOSY,NHAOSY,NHAOSY,1.D0,
     &              WORK(KSMAT),NHAOSY, EIGVEC,NHAOSY,0.D0,
     &              WORK(KHMAT),NHAOSY)
C        HMAT = SWS , SMAT = S
         IF (P6FLAG(6) .OR. IPRRHF.GE.4) THEN
            WRITE (LUPRI,*) 'EWMO Hamiltonian matrix SWS'
            CALL OUTPUT(WORK(KHMAT),1,NHAOSY,1,NHAOSY,
     &                  NHAOSY,NHAOSY,1,LUPRI)
            WRITE (LUPRI,*) 'EWMO overlap matrix S'
            CALL OUTPUT(WORK(KSMAT),1,NHAOSY,1,NHAOSY,
     &                  NHAOSY,NHAOSY,1,LUPRI)
         END IF
         JPOS = JPOS + ( NHAOSY * (NHAOSY+1) ) / 2
         CALL RSG(NHAOSY,NHAOSY,WORK(KHMAT),WORK(KSMAT),
     &            EIGVAL(NHUCT+1),1,EIGVEC,WORK(KFV1),WORK(KFV2),IERR)
         IF ( IERR.NE.0 ) THEN
            WRITE(LUPRI,'(/A,I10)')
     *      ' HUCDRV EWMO eigenvalue problem not converged, code: ',IERR
            CALL QUIT('HUCDRV: EWMO eigenvalue equation not converged')
         END IF
C           Save orbital symmetry in EIGVLS
            DO I = 1, NHAOSY
               EIGVLS(NHUCT + I) = ISYM
            END DO
        ELSE
C
C       EHT: Diagonalize Huckel matrix (Note: KLAST is not a misprint)
C
         KSCRA1 = KWRK
         KSCRA2 = KSCRA1 + NBASI
         KLAST  = KSCRA1 + NBASI*NHAOSY
         IF (KLAST .GT. LWORK) CALL STOPIT('HUCDRV','JACO',KLAST,LWORK)
         CALL DUNIT(EIGVEC,NHAOSY)
         CALL JACO(HUCMAT,EIGVEC,NHAOSY,NHAOSY,NHAOSY,WORK(KSCRA1),
     &             WORK(KSCRA2))
C
C     Sort the eigenvalues and eigenvectors
C     Save orbital symmetry in EIGVLS
C
         II = 0
         DISYM = ISYM
         DO 120 I = 1, NHAOSY
            II = II + I
            EIGVAL(NHUCT + I) = HUCMAT(II)
            EIGVLS(NHUCT + I) = DISYM
 120     CONTINUE 
         CALL ORDER(EIGVEC,EIGVAL(NHUCT + 1),NHAOSY,NHAOSY)
        END IF
C
C
C     We write the eigenvalues if high enough print level
C     and also the vectors if even higher print level
C
         IF (P6FLAG(6) .OR. IPRI6.GE.0 .OR. IPRRHF.GE.0) THEN
            IF (EWMO) THEN
               WRITE (LUPRI,'(/A,I3)') ' Huckel EWMO eigenvalues for'//
     &           ' symmetry :',ISYM
            ELSE
               WRITE (LUPRI,'(/A,I3)') ' Huckel EHT eigenvalues for'//
     &           ' symmetry :',ISYM
            END IF
            WRITE (LUPRI,'(5X,5F15.6)') (EIGVAL(NHUCT+I), I = 1, NHAOSY)
         END IF
         IF (P6FLAG(6) .OR. IPRRHF.GE.2) THEN
            IF (EWMO) THEN
               WRITE (LUPRI,'(/A,I3)') ' Huckel EWMO eigenvectors for'//
     &           ' symmetry :',ISYM
            ELSE
               WRITE (LUPRI,'(/A,I3)') ' Huckel EHT eigenvectors for'//
     &           ' symmetry :',ISYM
            END IF
            CALL OUTPUT(EIGVEC,1,NHAOSY,1,NHAOSY,NHAOSY,NHAOSY,1,LUPRI)
         END IF
         NHUCT = NHUCT + NHAOSY
C         
C     Project eigenvectors onto complete basis
C
C     We do this as (S_{NN})^{-1}*(S_{NO}*C_{O})
C     N and O refers to new (large) and old (small) basis respectively
C     For HUCKEL basis to HUCKEL basis this gives the identity matrix
C
C     Explicit inversion may take some time.....
C
         KSCRA1 = KWRK
         KSCRA2 = KSCRA1 + NBASI
         KLAST  = KSCRA1 + NBASI*NHAOSY
         IF (KLAST.GT.LWORK) CALL STOPIT('HUCDRV','DGEINV',KLAST,LWORK)
         CALL DGEINV(NBASI,OVERLP,OVERLP,WORK(KSCRA1),WORK(KSCRA2),INFO)
         IF (INFO .NE. 0) THEN
            WRITE (LUPRI,'(/A/A)') ' Singular overlap matrix HUCDRV',
     &           ' Huckel guess aborted'
            CALL QUIT('Singular overlap matrix when projecting '//
     &                'in Huckel')
         END IF
         CALL DGEMM('N','N',NBASI,NHAOSY,NBASI,1.D0,
     &              OVERLP,NBASI, TRANMT,NBASI,0.D0, WORK(KSCRA1),NBASI)
         CALL DGEMM('N','N',NBASI,NHAOSY,NHAOSY,1.D0,
     &              WORK(KSCRA1),NBASI, EIGVEC,NHAOSY,0.D0,
     &              CMO(ICSYM),NBASI)
 100  CONTINUE 
      IF (P6FLAG(6)) THEN
         WRITE (LUPRI,'(/A)')
     &   ' Huckel guess MOs before Gram-Schmidt orthogonalization:'
         CALL PRORB(CMO,.FALSE.,LUPRI)
      END IF
C
C     We do our own Gram-Schmidt Orthogonalization of the trial vectors
C
      CALL HUCORT(CMO,WORK(KCMO1),TOTOVL,WORK(KWRK),LWRK)
      IF (P6FLAG(6)) THEN
         WRITE (LUPRI,'(/A)')
     &   ' Huckel guess MOs after Gram-Schmidt orthogonalization:'
         CALL PRORB(CMO,.FALSE.,LUPRI)
      END IF
C
C     Determine Hartree-Fock occupation if requested
C
      IF (AUTOCC) THEN
         CALL ORDER (EIGVLS,EIGVAL,NHUCT,1)
         CALL IZERO(NISH,8)
         MOCC = NRHFEL/2
         DO 98 IK = 1, MOCC
            ISYM = NINT(EIGVLS(IK))
            NISH(ISYM) = NISH(ISYM) + 1
 98      CONTINUE
         CALL ICOPY(8,NISH,1,NOCC,1)
         CALL ICOPY(8,NISH,1,NRHF,1)
         IF (2*MOCC .NE. NRHFEL) THEN
            IOPRHF = NINT(EIGVLS(MOCC + 1))
            LSYM   = IOPRHF
            CALL IZERO(NASH,8)
            NASH(IOPRHF) = 1
            NOCC(IOPRHF) = NOCC(IOPRHF) + 1
         END IF
      END IF
C
C     We are done
C
      RETURN
      END
C   /* Deck hucfun */
      SUBROUTINE HUCFUN(NQ,IQCORE,IQM,ISHL1,HUCTER)
C
C panor/johhe 2005:
C     Added Hueckel start for elements up to radon (lanthanoids excluded) 
C     both for all-electron and effective core calculations. Ionizations
C     energies are taken from: Joseph B. Mann, "Atomic Structure Calculations 
C     I. Hartree-Fock Energy Results for the Elements H through Lr", 
C     Report LA-3690 (Los Alamos National Laboratory, 1967).
C
C     Input:
C     NQ     = atomic number
C     IQCORE = number of core electrons described with ECP
C     IQM    = l_quantum_number + 1
C     ISHL1  = orbital no. for this IQM
C
C     Output:
C     HUCTER = orbital energy
C
#include <implicit.h>
#include <priunit.h>
#include <maxorb.h>
#include <huckel.h>
C
      DIMENSION ENERGY(86,15),IOFF(4)
C
C     Ionization energies for shells:
C     1s,2s,3s,4s,5s,6s,2p,3p,4p,5p,6p,3d,4d,5d,4f
C
      DATA (IOFF(I),I=1,4) /0,6,11,14/
      DATA ((ENERGY(IZ,ISHELL),ISHELL=1,15),IZ=1,86) /
C    H    Z= 1
     & 5.000000E-01,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   He    Z= 2
     & 9.180000E-01,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Li    Z= 3
     & 2.477700E+00,1.963000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Be    Z= 4
     & 4.732700E+00,3.093000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    B    Z= 5
     & 7.695300E+00,4.947000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,3.099000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    C    Z= 6
     & 1.133840E+01,7.121000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,4.069000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    N    Z= 7
     & 1.566640E+01,9.637000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,5.087000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    O    Z= 8
     & 2.068090E+01,1.250400E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,6.162000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    F    Z= 9
     & 2.638270E+01,1.572500E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,7.300000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ne    Z=10
     & 3.277240E+01,1.930400E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,8.504000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Na    Z=11
     & 4.047850E+01,2.797000E+00,1.821000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,1.518100E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Mg    Z=12
     & 4.903170E+01,3.767700E+00,2.531000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,2.282200E+00,0.000000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Al    Z=13
     & 5.850090E+01,4.910700E+00,3.934000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,3.218300E+00,2.100000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Si    Z=14
     & 6.881920E+01,6.163000E+00,5.436000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,4.262400E+00,2.787000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    P    Z=15
     & 7.998890E+01,7.528700E+00,7.064000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,5.418400E+00,3.506000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    S    Z=16
     & 9.201040E+01,9.009900E+00,8.827000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,6.688000E+00,4.263000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Cl    Z=17
     & 1.048839E+02,1.060740E+01,1.072900E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,8.072200E+00,5.064000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ar    Z=18
     & 1.186098E+02,1.232210E+01,1.277300E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,9.571400E+00,5.910000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    K    Z=19
     & 1.335325E+02,1.448990E+01,1.748800E+00,1.475000E-01,0.000000E+00,
     & 0.000000E+00,1.151930E+01,9.544000E-01,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ca    Z=20
     & 1.493631E+02,1.682270E+01,2.245400E+00,1.955000E-01,0.000000E+00,
     & 0.000000E+00,1.362930E+01,1.340700E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Sc    Z=21
     & 1.658992E+02,1.908060E+01,2.567300E+00,2.101000E-01,0.000000E+00,
     & 0.000000E+00,1.566820E+01,1.574500E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,3.437000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ti    Z=22
     & 1.832827E+02,2.143490E+01,2.882000E+00,2.219000E-01,0.000000E+00,
     & 0.000000E+00,1.780300E+01,1.802900E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,4.058000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C    V    Z=23
     & 2.015220E+02,2.389690E+01,3.198800E+00,2.324000E-01,0.000000E+00,
     & 0.000000E+00,2.004440E+01,2.033500E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,4.612000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Cr    Z=24
     & 2.204413E+02,2.626840E+01,3.332400E+00,2.075000E-01,0.000000E+00,
     & 0.000000E+00,2.219840E+01,2.096200E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,3.225000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Mn    Z=25
     & 2.405799E+02,2.915980E+01,3.551000E+00,2.513000E-01,0.000000E+00,
     & 0.000000E+00,2.486240E+01,2.511100E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,5.612000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Fe    Z=26
     & 2.614001E+02,3.196460E+01,4.189200E+00,2.601000E-01,0.000000E+00,
     & 0.000000E+00,2.744260E+01,2.760500E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,6.079000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Co    Z=27
     & 2.830824E+02,3.488660E+01,4.536600E+00,2.686000E-01,0.000000E+00,
     & 0.000000E+00,3.013830E+01,3.017700E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,6.531000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ni    Z=28
     & 3.056269E+02,3.792650E+01,4.893600E+00,2.768000E-01,0.000000E+00,
     & 0.000000E+00,3.295030E+01,3.283000E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,6.971000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Cu    Z=29
     & 3.287927E+02,4.081890E+01,5.011900E+00,2.385000E-01,0.000000E+00,
     & 0.000000E+00,3.561790E+01,3.324800E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,4.912000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Zn    Z=30
     & 3.533042E+02,4.436160E+01,5.637800E+00,2.925000E-01,0.000000E+00,
     & 0.000000E+00,3.892480E+01,3.839300E+00,0.000000E+00,0.000000E+00,
     & 0.000000E+00,7.825000E-01,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ga    Z=31
     & 3.788181E+02,4.816830E+01,6.394600E+00,4.246000E-01,0.000000E+00,
     & 0.000000E+00,4.249390E+01,4.482300E+00,2.085000E-01,0.000000E+00,
     & 0.000000E+00,1.193400E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Ge    Z=32
     & 4.052501E+02,5.215600E+01,7.196800E+00,5.571000E-01,0.000000E+00,
     & 0.000000E+00,4.624190E+01,5.167300E+00,2.693000E-01,0.000000E+00,
     & 0.000000E+00,1.640600E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   As    Z=33
     & 4.326014E+02,5.632510E+01,8.044600E+00,6.951000E-01,0.000000E+00,
     & 0.000000E+00,5.016900E+01,5.895500E+00,3.301000E-01,0.000000E+00,
     & 0.000000E+00,2.127600E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Se    Z=34
     & 4.608717E+02,6.067350E+01,8.936700E+00,8.402000E-01,0.000000E+00,
     & 0.000000E+00,5.427350E+01,6.666100E+00,3.925000E-01,0.000000E+00,
     & 0.000000E+00,2.654200E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Br    Z=35
     & 4.900596E+02,6.519980E+01,9.871900E+00,9.927000E-01,0.000000E+00,
     & 0.000000E+00,5.855410E+01,7.478200E+00,4.571000E-01,0.000000E+00,
     & 0.000000E+00,3.220200E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Kr    Z=36
     & 5.201645E+02,6.990290E+01,1.084940E+01,1.152900E+00,0.000000E+00,
     & 0.000000E+00,6.300960E+01,8.331500E+00,5.242000E-01,0.000000E+00,
     & 0.000000E+00,3.825200E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Rb    Z=37
     & 5.514565E+02,7.504900E+01,1.213320E+01,1.523500E+00,1.377000E-01,
     & 0.000000E+00,6.790600E+01,9.487700E+00,8.101000E-01,0.000000E+00,
     & 0.000000E+00,4.732300E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C   Sr    Z=38
     & 5.836870E+02,8.039050E+01,1.347500E+01,1.896800E+00,1.785000E-01,
     & 0.000000E+00,7.299580E+01,1.069990E+01,1.098200E+00,0.000000E+00,
     & 0.000000E+00,5.694400E+00,0.000000E+00,0.000000E+00,0.000000E+00,
C    Y    Z=39
     & 6.167480E+02,8.581060E+01,1.475890E+01,2.168900E+00,1.961000E-01,
     & 0.000000E+00,7.816420E+01,1.185420E+01,1.301200E+00,0.000000E+00,
     & 0.000000E+00,6.599500E+00,2.498000E-01,0.000000E+00,0.000000E+00,
C   Zr    Z=40
     & 6.507100E+02,9.138430E+01,1.606170E+01,2.424700E+00,2.086000E-01,
     & 0.000000E+00,8.348520E+01,1.302650E+01,1.492500E+00,0.000000E+00,
     & 0.000000E+00,7.522500E+00,3.109000E-01,0.000000E+00,0.000000E+00,
C   Nb    Z=41
     & 6.854655E+02,9.699750E+01,1.726960E+01,2.557800E+00,1.950000E-01,
     & 0.000000E+00,8.884600E+01,1.410410E+01,1.577200E+00,0.000000E+00,
     & 0.000000E+00,8.352000E+00,2.677000E-01,0.000000E+00,0.000000E+00,
C   Mo    Z=42
     & 7.212365E+02,1.028863E+02,1.861960E+01,2.793700E+00,2.004000E-01,
     & 0.000000E+00,9.448000E+01,1.532190E+01,1.753600E+00,0.000000E+00,
     & 0.000000E+00,9.319500E+00,3.122000E-01,0.000000E+00,0.000000E+00,
C   Tc    Z=43
     & 7.580685E+02,1.090976E+02,2.015860E+01,3.172600E+00,2.350000E-01,
     & 0.000000E+00,1.004341E+02,1.672630E+01,2.059400E+00,0.000000E+00,
     & 0.000000E+00,1.047110E+01,4.807000E-01,0.000000E+00,0.000000E+00,
C   Ru    Z=44
     & 7.955255E+02,1.151721E+02,2.142740E+01,3.269200E+00,2.094000E-01,
     & 0.000000E+00,1.062531E+02,1.786240E+01,2.113400E+00,0.000000E+00,
     & 0.000000E+00,1.135700E+01,4.011000E-01,0.000000E+00,0.000000E+00,
C   Rh    Z=45
     & 8.340450E+02,1.215701E+02,2.288650E+01,3.510300E+00,2.132000E-01,
     & 0.000000E+00,1.123930E+02,1.918660E+01,2.297700E+00,0.000000E+00,
     & 0.000000E+00,1.242840E+01,4.460000E-01,0.000000E+00,0.000000E+00,
C   Pd    Z=46
     & 8.733135E+02,1.279657E+02,2.420900E+01,3.587300E+00,0.000000E+00,
     & 0.000000E+00,1.185306E+02,2.037420E+01,2.330100E+00,0.000000E+00,
     & 0.000000E+00,1.336340E+01,3.360000E-01,0.000000E+00,0.000000E+00,
C   Ag    Z=47
     & 9.138315E+02,1.348775E+02,2.591770E+01,4.001500E+00,2.200000E-01,
     & 0.000000E+00,1.251811E+02,2.194530E+01,2.676800E+00,0.000000E+00,
     & 0.000000E+00,1.467810E+01,5.374000E-01,0.000000E+00,0.000000E+00,
C   Cd    Z=48
     & 9.553115E+02,1.420059E+02,2.770850E+01,4.450500E+00,2.649000E-01,
     & 0.000000E+00,1.320469E+02,2.359710E+01,3.053500E+00,0.000000E+00,
     & 0.000000E+00,1.607190E+01,7.636000E-01,0.000000E+00,0.000000E+00,
C   In    Z=49
     & 9.977965E+02,1.493945E+02,2.962450E+01,4.976700E+00,3.727000E-01,
     & 0.000000E+00,1.391718E+02,2.537420E+01,3.507200E+00,1.973000E-01,
     & 0.000000E+00,1.758950E+01,1.063100E+00,0.000000E+00,0.000000E+00,
C   Sn    Z=50
     & 1.041224E+03,1.569813E+02,3.160340E+01,5.517000E+00,4.793000E-01,
     & 0.000000E+00,1.464938E+02,2.721350E+01,3.973500E+00,2.486000E-01,
     & 0.000000E+00,1.916790E+01,1.373500E+00,0.000000E+00,0.000000E+00,
C   Sb    Z=51
     & 1.085597E+03,1.647690E+02,3.364800E+01,6.074800E+00,5.889000E-01,
     & 0.000000E+00,1.540157E+02,2.911790E+01,4.456200E+00,2.992000E-01,
     & 0.000000E+00,2.080990E+01,1.699400E+00,0.000000E+00,0.000000E+00,
C   Te    Z=52
     & 1.130916E+03,1.727580E+02,3.575830E+01,6.650500E+00,7.027000E-01,
     & 0.000000E+00,1.617379E+02,3.108750E+01,4.956000E+00,3.506000E-01,
     & 0.000000E+00,2.251590E+01,2.041800E+00,0.000000E+00,0.000000E+00,
C    I    Z=53
     & 1.177181E+03,1.809481E+02,3.793420E+01,7.244300E+00,8.211000E-01,
     & 0.000000E+00,1.696601E+02,3.312210E+01,5.473300E+00,4.032000E-01,
     & 0.000000E+00,2.428550E+01,2.401200E+00,0.000000E+00,0.000000E+00,
C   Xe    Z=54
     & 1.224392E+03,1.893390E+02,4.017540E+01,7.856200E+00,9.444000E-01,
     & 0.000000E+00,1.777822E+02,3.522140E+01,6.008300E+00,4.573000E-01,
     & 0.000000E+00,2.611870E+01,2.777900E+00,0.000000E+00,0.000000E+00,
C   Cs    Z=55
     & 1.272764E+03,1.981426E+02,4.269280E+01,8.695400E+00,1.231600E+00,
     & 1.237000E-01,1.863159E+02,3.759570E+01,6.768500E+00,6.835000E-01,
     & 0.000000E+00,2.822600E+01,3.379500E+00,0.000000E+00,0.000000E+00,
C   Ba    Z=56
     & 1.322088E+03,2.071532E+02,4.528060E+01,9.556300E+00,1.512700E+00,
     & 1.575000E-01,1.950556E+02,4.003950E+01,7.549300E+00,9.039000E-01,
     & 0.000000E+00,3.040210E+01,4.001500E+00,0.000000E+00,0.000000E+00,
C   La    Z=57
     & 1.372274E+03,2.162757E+02,4.784400E+01,1.034540E+01,1.704400E+00,
     & 1.704000E-01,2.039070E+02,4.245880E+01,8.258900E+00,1.049400E+00,
     & 0.000000E+00,3.255340E+01,4.553600E+00,2.688000E-01,0.000000E+00,
C     Z=58
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=59
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=60
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=61
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=62
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=63
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=64
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=65
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=66
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=67
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=68
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=69
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=70
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C     Z=71
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     & 0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
C   Hf    Z=72
     & 2.231802E+03,3.693353E+02,8.541780E+01,1.780350E+01,2.524800E+00,
     & 2.104000E-01,3.529815E+02,7.785830E+01,1.462780E+01,1.537100E+00,
     & 0.000000E+00,6.395470E+01,8.886900E+00,2.992000E-01,1.436200E+00,
C   Ta    Z=73
     & 2.296837E+03,3.813025E+02,8.863930E+01,1.869490E+01,2.729700E+00,
     & 2.197000E-01,3.646764E+02,8.092800E+01,1.543500E+01,1.696600E+00,
     & 0.000000E+00,6.674300E+01,9.530900E+00,3.516000E-01,1.815200E+00,
C    W    Z=74
     & 2.362823E+03,3.934733E+02,9.193230E+01,1.961100E+01,2.933900E+00,
     & 2.277000E-01,3.765739E+02,8.406830E+01,1.626580E+01,1.856300E+00,
     & 0.000000E+00,6.960040E+01,1.019650E+01,4.029000E-01,2.214300E+00,
C   Re    Z=75
     & 2.429758E+03,4.058468E+02,9.529570E+01,2.055070E+01,3.138400E+00,
     & 2.347000E-01,3.886733E+02,8.727820E+01,1.711930E+01,2.017100E+00,
     & 0.000000E+00,7.252590E+01,1.088300E+01,4.538000E-01,2.633300E+00,
C   Os    Z=76
     & 2.497642E+03,4.184224E+02,9.872830E+01,2.151300E+01,3.344000E+00,
     & 2.409000E-01,4.009741E+02,9.055660E+01,1.799440E+01,2.179600E+00,
     & 0.000000E+00,7.551840E+01,1.158980E+01,5.048000E-01,3.071700E+00,
C   Ir    Z=77
     & 2.566475E+03,4.311994E+02,1.022294E+02,2.249700E+01,3.550900E+00,
     & 2.466000E-01,4.134756E+02,9.390270E+01,1.889050E+01,2.344000E+00,
     & 0.000000E+00,7.857720E+01,1.231620E+01,5.562000E-01,3.529200E+00,
C   Pt    Z=78
     & 2.636075E+03,4.440131E+02,1.056345E+02,2.333780E+01,3.606700E+00,
     & 2.180000E-01,4.260137E+02,9.715270E+01,1.964400E+01,2.373300E+00,
     & 0.000000E+00,8.153900E+01,1.290050E+01,4.764000E-01,3.843400E+00,
C   Au    Z=79
     & 2.706793E+03,4.571816E+02,1.092606E+02,2.435370E+01,3.808800E+00,
     & 2.208000E-01,4.389052E+02,1.006224E+02,2.057060E+01,2.534300E+00,
     & 0.000000E+00,8.471870E+01,1.365540E+01,5.210000E-01,4.328300E+00,
C   Hg    Z=80
     & 2.778639E+03,4.707342E+02,1.131364E+02,2.557330E+01,4.182000E+00,
     & 2.610000E-01,4.521794E+02,1.043406E+02,2.169890E+01,2.850800E+00,
     & 0.000000E+00,8.814520E+01,1.460960E+01,7.142000E-01,5.012400E+00,
C   Tl    Z=81
     & 2.851505E+03,4.845593E+02,1.171502E+02,2.688340E+01,4.618700E+00,
     & 3.611000E-01,4.657258E+02,1.081966E+02,2.291760E+01,3.231300E+00,
     & 1.924000E-01,9.170840E+01,1.565290E+01,9.683000E-01,5.785200E+00,
C   Pb    Z=82
     & 2.925331E+03,4.985974E+02,1.212423E+02,2.822400E+01,5.059600E+00,
     & 4.589000E-01,4.794846E+02,1.121304E+02,2.416650E+01,3.614700E+00,
     & 2.398000E-01,9.534800E+01,1.672500E+01,1.224500E+00,6.586600E+00,
C   Bi    Z=83
     & 3.000119E+03,5.128515E+02,1.254155E+02,2.959810E+01,5.508200E+00,
     & 5.582000E-01,4.934588E+02,1.161446E+02,2.544830E+01,4.005000E+00,
     & 2.862000E-01,9.906700E+01,1.782880E+01,1.487400E+00,7.419400E+00,
C   Po    Z=84
     & 3.075872E+03,5.273220E+02,1.296699E+02,3.100570E+01,5.965200E+00,
     & 6.602000E-01,5.076490E+02,1.202397E+02,2.676310E+01,4.403200E+00,
     & 3.327000E-01,1.028656E+02,1.896460E+01,1.758300E+00,8.283900E+00,
C   At    Z=85
     & 3.152587E+03,5.420085E+02,1.340053E+02,3.244670E+01,6.431000E+00,
     & 7.654000E-01,5.220545E+02,1.244153E+02,2.811080E+01,4.809800E+00,
     & 3.799000E-01,1.067438E+02,2.013210E+01,2.037900E+00,9.180000E+00,
C   Rn    Z=86
     & 3.230265E+03,5.569115E+02,1.384216E+02,3.392060E+01,6.905800E+00,
     & 8.740000E-01,5.366755E+02,1.286712E+02,2.949110E+01,5.225200E+00,
     & 4.280000E-01,1.107011E+02,2.133120E+01,2.326300E+00,1.010760E+01/
C
      IF (NQ.LE.0 .AND. NQ .GT. 87) GOTO 999
C
C     Calculate offset for this l quantum number for ECP,
C     where the lowest orbitals are excluded.
C     If not ECP, i.e. IQCORE .eq. 0, then ILOFF will be zero.
C
      CALL ECPLCORE(IQCORE,IQM,ILOFF)
      ISHL = ISHL1 + ILOFF
      HUCTER = -ENERGY(NQ,IOFF(IQM)+ISHL)
      IF (HUCTER.EQ.0.0D0) GOTO 999
      RETURN
C
 999  CONTINUE
      WRITE (LUPRI,'(/A,I3,/A)') ' No orbital ionization potential'//
     &     ' for nucleus with charge ', NQ, ' Hueckel start guess'//
     &     ' replaced with a diagonlization of H1'
      DOHUCKEL = .FALSE.
      RETURN
      END
C   /* Deck hucort */
      SUBROUTINE HUCORT(CMO,CMO1,S,WORK,LWORK)
C
C     Written by K.Ruud, aug-96
C     Version written on the basis of the ORTHO and NORM subroutines
C     of hjj
C     Revised by hjaaj May 2000 to handle round-off errors
C
#include <implicit.h>
#include <maxorb.h>
      PARAMETER (THNORM = 1.0D-6, D1 = 1.0D0, D0 = 0.0D0, THRRND=0.9D0)
      DIMENSION CMO(*), CMO1(*), S(*), WORK(LWORK)
C
#include <priunit.h>
#include <huckel.h>
#include <infinp.h>
#include <inforb.h>
#include <infpri.h>
C
      CALL QENTER('HUCORT')
C
C     Read overlap matrix from LUONEL
C
      CALL RDONEL('OVERLAP ',.TRUE.,S,NNBAST)
      IF (P6FLAG(6)) THEN
         WRITE(LUPRI,'(/A)')
     *     ' (HUCORT) Overlap between AO basis functions :'
         CALL OUTPKB(S,NBAS,NSYM,-1,LUPRI)
      END IF
C
C     We orthogonalize orbitals symmetry by symmetry
C
      ISTS   = 1
      ISTC   = 1
      DO 100 ISYM = 1, NSYM
         NORBI = NORB(ISYM)
         NBASI = NBAS(ISYM)
         NHUCI = NHUCAO(ISYM)
         IF (NORBI .EQ. 0) GO TO 101
C
C     We orthogonalize the projected Huckel eigenvectors first
C
         CALL NORM(S(ISTS),CMO(ISTC),NBASI,NHUCI,WORK,THNORM,IRETUR)
         IF (IRETUR.NE.0) GO TO 5000
C
C     Now we add vectors that span the entire space and orthogonalize 
C     them to the previous vectors
Chj-may2000: modified to use the previous set of vectors in CMO1. The
C     original algorithm here could reinsert CMO vectors deleted by
C     DELMO or otherwise.
C     The initial vectors in CMO1 are generated by H1MO, so the NHUCI
C     first will probably have big overlap with the Huckel generated
C     orbitals. Therefore we begin with no. NHUCI+1 and wrap to 1
C     to end with NHUCI.
C
         IKROW1 = NHUCI
         DO 103 IKROW = NHUCI + 1, NORBI
            IVKC  = ISTC + (IKROW -1)*NBASI
 107        IKROW1 = IKROW1 + 1
            IF (IKROW1 .GT. NORBI) IKROW1 = 1
            IVKC1 = ISTC + (IKROW1-1)*NBASI
            CALL DCOPY(NBASI,CMO1(IVKC1),1,CMO(IVKC),1)
C
C           normalize initial vector C_k and find W_k = S*C_k
C
            ITURN = 0
 108        CONTINUE 
            CALL MPAPV(NBASI,S(ISTS),CMO(IVKC),WORK)
            TNORM = DDOT(NBASI,CMO(IVKC),1,WORK,1)
            IF (TNORM .LT. THNORM) THEN
Chj         ... zero vector on input
               IRETUR = -IKROW
               GO TO 5000
            END IF
Chj may2000: normalize input vector
C        (we ignore round-off errors as it is renormalized later)
            TNORM = D1 / SQRT(TNORM)
            CALL DSCAL(NBASI,TNORM,CMO(IVKC),1)
            CALL MPAPV(NBASI,S(ISTS),CMO(IVKC),WORK)
            TNORM = DDOT(NBASI,CMO(IVKC),1,WORK,1)
C
            IVJC = ISTC
            DO J = 1, IKROW-1
               T = DDOT(NBASI,CMO(IVJC),1,WORK,1)
               TNORM = TNORM - T*T
               IVJC = IVJC + NBASI
               WORK(NBASI+J) = -T
            END DO
            IF (TNORM .LT. THNORM) THEN
C
C              Zero norm,
C              we try the next mo vector from the initial mo's in CMO1
C
               IF (IKROW1 .EQ. NHUCI) THEN
C                 ... we have tried them all!
                  IRETUR = -10 000*IKROW
                  GO TO 5000
               END IF
               GOTO 107
            END IF
C
            IF (TNORM .LT. THRRND) THEN
               IF (ITURN .GT. 1) THEN
                  IRETUR = 10 000*IKROW
                  GO TO 5000
               END IF
               IROUND = 1
            ELSE
               IROUND = 0
            END IF
C
            TNORM = D1/SQRT(TNORM)
            DO J = 1, IKROW-1
               WORK(NBASI+J) = WORK(NBASI+J)*TNORM
            END DO
            WORK(NBASI+IKROW) = TNORM
            CALL DGEMM('N','N',NBASI,1,IKROW,1.D0,
     &                 CMO(ISTC),NBASI,
     &                 WORK(NBASI+1),IKROW,0.D0,
     &                 WORK,NBASI)
            CALL DCOPY(NBASI,WORK,1,CMO(IVKC),1)
C
            IF (IROUND .EQ. 1) THEN
               ITURN = ITURN + 1
               GO TO 108
            END IF
C
 103     CONTINUE 
 101     ISTS   = ISTS   + NBASI*(NBASI + 1)/2
         ISTC   = ISTC   + NORBI*NBASI
 100  CONTINUE 
      CALL QEXIT('HUCORT')
      RETURN
C
 5000 CONTINUE
      WRITE(LUW4,4010) ISYM, IRETUR
      IF (LUPRI.NE.LUW4)
     *   WRITE(LUPRI,4010) ISYM, IRETUR
      WRITE(LUERR,4010) ISYM, IRETUR
      CALL QUIT('*** ERROR *** FATAL ERROR IN HUCORT')
 4010 FORMAT(/' *** HUCORT-FATAL ERROR *** Linear dependency in',
     *        ' symmetry (Huckel part) =',I3/' CODE =',I10)
      END
