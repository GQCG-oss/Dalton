include ./Makefile.config

DALTON_LIBS = \
-Labacus -labacus	\
-Lrsp -lrsp 		\
-Lsirius -lsirius	\
-Lpdpack -lpdpack	\
-Lgp -lgp               \
-Leri -leri             \
-Lcc  -lcc

PDLIB = pdpack/pdlib.a

OBJPRG = abacus/dalton.o

OBJSLAVE = abacus/herpar.o eri/eri2par.o

OBJNODE = eri/eriprg.o

OBJSIO = cc/crayio.o

OBJSAMFI = amfi/amfi.o amfi/symtra.o

OBJSMEM = abacus/linux_mem_allo.o
#
#     Most common build of Dalton
#
dalton.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) \
	-o dalton.x $(OBJPRG) $(OBJSIO) $(OBJSLAVE) \
	$(OBJSAMFI) $(DALTON_LIBS)
	mv dalton.x $(INSTALLDIR)
#
#       Linux version of the program
#
linux.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ MEM_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) \
	-o dalton.x $(OBJPRG) $(OBJSIO) $(OBJSMEM) \
	$(OBJSLAVE) $(OBJSAMFI) $(DALTON_LIBS) $(LIB_LIST)
	mv dalton.x $(INSTALLDIR)
#
#     Linux parallel build
#
linuxparallel.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ MEM_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) \
	-o dalpar.x $(OBJPRG) $(OBJSIO) $(OBJSMEM) \
	$(OBJSLAVE) $(OBJSAMFI) $(DALTON_LIBS) $(LIB_LIST) \
	$(MPI_LIB_PATH) $(MPI_LIB) 
	mv dalpar.x $(INSTALLDIR)
#
#	Minimal parallel build
#
parallel.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) $(LIB_LIST) \
	-o dalpar.x $(OBJPRG) $(OBJSIO) $(OBJSLAVE) $(OBJSAMFI) \
	$(DALTON_LIBS) $(LIB_LIST) $(MPI_LIB_PATH) $(MPI_LIB)
	mv dalpar.x $(INSTALLDIR)
#
#	Build with PVMe
#	We will never need MPILIB when using PVM
#       First buikld master, then slave
#
dalpvm.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ MEM_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) \
	-o dalpvm.x $(OBJPRG) $(OBJSIO) $(OBJSMEM) \
	$(OBJSLAVE) $(OBJSAMFI) $(LIB_LIST) \
	$(DALTON_LIBS) $(PVM_LIB_PATH) \
	$(PVM_LIB_LIST) $(PVM_INC_PATH)
	$(F77) $(OPTFLAGS) $(LIB_LIST) -o node.x $(OBJNODE) $(OBJSLAVE) \
	$(OBJSAMFI) $(LIB_LIST) $(DALTON_LIBS) $(PVM_LIB_PATH) \
	$(PVM_LIB_LIST)  $(PVM_INC_PATH)
	mv dalpvm.x $(INSTALLDIR)
	mv node.x $(PVM_NOD_PATH)
#
#	Not tested MPI on Cray yet. Thus no MPILIB, and no OBJSMXM nor
#	OBJSEIS
#
cray.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ \
	ERI_OBJ PD_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) $(LIB_LIST) -o dalton.x $(OBJPRG) \
	$(OBJSLAVE) $(OBJSAMFI) $(DALTON_LIBS)
	mv dalton.x $(INSTALLDIR)
#
#	This is a proper build for the Cray-T3D
#
t3d.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) $(LIB_LIST) $(MPI_LIB_PATH) $(MPI_LIB) \
	-o dalpar.x $(OBJPRG) $(OBJSLAVE) \
	$(LIB_LIST) $(OBJSAMFI) $(DALTON_LIBS)
	mv dalpar.x $(INSTALLDIR)

t90.x: MAIN_OBJ ABA_OBJ SIR_OBJ RSP_OBJ GP_OBJ SLAVE_OBJ ERI_OBJ \
	PD_OBJ CC_OBJ IO_OBJ AMFI_OBJ
	$(F77) $(OPTFLAGS) $(LIB_LIST) $(MPI_LIB_PATH) $(MPI_LIB) \
	-o dalpar.x $(OBJPRG) (IO_OBJS) $(OBJSLAVE) \
	$(LIB_LIST) $(OBJSAMFI) $(DALTON_LIBS)
	mv dalpar.x $(INSTALLDIR)
#
#	Make it a bit cleaner, remover all .o/.lst/*.f -files
#
clean   :
	cd abacus && $(MAKE) clean
	cd sirius && $(MAKE) clean
	cd rsp    && $(MAKE) clean
	cd gp     && $(MAKE) clean
	cd eri    && $(MAKE) clean
	cd amfi   && $(MAKE) clean
	cd pdpack && $(MAKE) clean
	cd cc     && $(MAKE) clean
	$(RM) -f *~
#
#	We remove the entire source code as well if we do not plan to debug
#
veryclean :
	$(RM) -rf abacus sirius rsp gp include eri pdpack cc

MAIN_OBJ :
	cd abacus && $(MAKE) main

ABA_OBJ :
	cd abacus && $(MAKE) all

SIR_OBJ :
	cd sirius && $(MAKE) all

RSP_OBJ :
	cd rsp && $(MAKE) all

GP_OBJ :
	cd gp && $(MAKE) all

SLAVE_OBJ :
	cd abacus && $(MAKE) slave
	cd eri && $(MAKE) slave

NODE_OBJ :
	cd eri && $(MAKE) node

ERI_OBJ	:
	cd eri && $(MAKE) all

CC_OBJ	:
	cd cc && $(MAKE) all

IO_OBJ	:
	cd cc && $(MAKE) io

PD_OBJ	:
	cd pdpack && $(MAKE) all

MEM_OBJ :
	cd abacus && $(MAKE) linuxmem

AMFI_OBJ :
	cd amfi && $(MAKE) all
